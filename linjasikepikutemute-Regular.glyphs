{
.appVersion = "1268";
DisplayStrings = (
u,
w,
t,
k,
j
);
copyright = "mod of RobotoMono-Regular by Google.Copyright 2015 Google Inc. All Rights Reserved.";
customParameters = (
{
name = panose;
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
2,
3,
4,
5,
6,
7,
9,
29,
30,
31,
32,
33,
35,
36,
38,
45,
60,
69
);
},
{
name = codePageRanges;
value = (
1252,
1250,
1251,
1253,
1254,
1257,
1258,
"bit 29",
869,
857,
855,
852,
775,
850
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
NULL,
CR,
space,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
at,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
exclamdown,
cent,
sterling,
currency,
yen,
brokenbar,
section,
dieresis,
copyright,
ordfeminine,
guillemotleft,
logicalnot,
registered,
macron,
degree,
plusminus,
twosuperior,
threesuperior,
acute,
mu,
paragraph,
periodcentered,
cedilla,
onesuperior,
ordmasculine,
guillemotright,
onequarter,
onehalf,
threequarters,
questiondown,
AE,
multiply,
Oslash,
Thorn,
germandbls,
ae,
eth,
divide,
oslash,
thorn,
Hbar,
dotlessi,
IJ,
ij,
kgreenlandic,
Lslash,
lslash,
Eng,
eng,
OE,
oe,
longs,
florin,
Ohorn,
ohorn,
Uhorn,
uhorn,
uni0237,
schwa,
circumflex,
caron,
breve,
dotaccent,
ring,
ogonek,
tilde,
hungarumlaut,
uni02F3,
gravecomb,
acutecomb,
tildecomb,
hook,
uni030F,
dotbelow,
tonos,
dieresistonos,
anoteleia,
Gamma,
Delta,
Theta,
Lambda,
Xi,
Pi,
Sigma,
Phi,
Psi,
Omega,
alpha,
beta,
gamma,
delta,
epsilon,
zeta,
eta,
theta,
iota,
lambda,
xi,
pi,
rho,
sigma1,
sigma,
tau,
upsilon,
phi,
psi,
omega,
uni03D1,
uni03D2,
uni03D6,
uni0402,
uni0404,
uni0409,
uni040A,
uni040B,
uni040F,
uni0411,
uni0414,
uni0416,
uni0417,
uni0418,
uni041B,
uni0423,
uni0426,
uni0427,
uni0428,
uni0429,
uni042A,
uni042B,
uni042C,
uni042D,
uni042E,
uni042F,
uni0431,
uni0432,
uni0433,
uni0434,
uni0436,
uni0437,
uni0438,
uni043A,
uni043B,
uni043C,
uni043D,
uni043F,
uni0442,
uni0444,
uni0446,
uni0447,
uni0448,
uni0449,
uni044A,
uni044B,
uni044C,
uni044D,
uni044E,
uni044F,
uni0452,
uni0454,
uni0459,
uni045A,
uni045B,
uni045F,
uni0460,
uni0461,
uni0463,
uni0464,
uni0465,
uni0466,
uni0467,
uni0468,
uni0469,
uni046A,
uni046B,
uni046C,
uni046D,
uni046E,
uni046F,
uni0472,
uni0473,
uni0474,
uni0475,
uni0478,
uni0479,
uni047A,
uni047B,
uni047C,
uni047D,
uni047E,
uni047F,
uni0480,
uni0481,
uni0482,
uni0483,
uni0484,
uni0485,
uni0486,
uni0488,
uni0489,
uni048E,
uni048F,
uni0490,
uni0491,
uni0494,
uni0495,
uni049C,
uni049D,
uni04A0,
uni04A1,
uni04A4,
uni04A5,
uni04A6,
uni04A7,
uni04A8,
uni04A9,
uni04B4,
uni04B5,
uni04B8,
uni04B9,
uni04BA,
uni04BC,
uni04BD,
uni04C3,
uni04C4,
uni04C7,
uni04C8,
uni04D8,
uni04E0,
uni04E1,
uni04FA,
uni04FB,
uni0500,
uni0502,
uni0503,
uni0504,
uni0505,
uni0506,
uni0507,
uni0508,
uni0509,
uni050A,
uni050B,
uni050C,
uni050D,
uni050E,
uni050F,
uni0510,
uni2000,
uni2001,
uni2002,
uni2003,
uni2004,
uni2005,
uni2006,
uni2007,
uni2008,
uni2009,
uni200A,
uni200B,
endash,
emdash,
underscoredbl,
quoteleft,
quoteright,
quotesinglbase,
quotereversed,
quotedblleft,
quotedblright,
quotedblbase,
dagger,
daggerdbl,
bullet,
uni2025,
ellipsis,
perthousand,
guilsinglleft,
guilsinglright,
fraction,
uni2074,
nsuperior,
lira,
peseta,
Euro,
uni2105,
uni2113,
uni2116,
trademark,
estimated,
oneeighth,
threeeighths,
fiveeighths,
seveneighths,
partialdiff,
product,
summation,
minus,
radical,
infinity,
integral,
approxequal,
notequal,
lessequal,
greaterequal,
lozenge,
commaaccent,
uniFEFF,
uniFFFC,
uniFFFD,
two.sup,
circumflextildecomb,
circumflexhookcomb,
circumflexgravecomb,
circumflexacutecomb,
brevegravecomb,
commaaccentrotate,
A.smcp,
B.smcp,
C.smcp,
D.smcp,
E.smcp,
F.smcp,
G.smcp,
H.smcp,
I.smcp,
J.smcp,
K.smcp,
L.smcp,
M.smcp,
N.smcp,
O.smcp,
Q.smcp,
R.smcp,
S.smcp,
T.smcp,
U.smcp,
V.smcp,
W.smcp,
X.smcp,
Y.smcp,
Z.smcp,
brevehookcomb,
one.sup,
breveacutecomb,
three.sup,
four.sup,
five.sup,
seven.sup,
eight.sup,
crossbar,
ringacute,
dasiaoxia,
brevetildecomb,
cyrillictic,
cyrillichook,
P.smcp,
K.alt,
Germandbls.smcp,
nonbreakingspace,
uni00AD,
Dcroat,
Eth,
hbar,
Tbar,
tbar,
Agrave,
Aacute,
Acircumflex,
Atilde,
Adieresis,
Aring,
Aringacute,
Ccedilla,
Egrave,
Eacute,
Ecircumflex,
Edieresis,
Igrave,
Iacute,
Icircumflex,
Idieresis,
Ntilde,
Ograve,
Oacute,
Ocircumflex,
Otilde,
Odieresis,
Ugrave,
Uacute,
Ucircumflex,
Udieresis,
Yacute,
agrave,
aacute,
acircumflex,
atilde,
adieresis,
aring,
aringacute,
ccedilla,
egrave,
eacute,
ecircumflex,
edieresis,
igrave,
iacute,
icircumflex,
idieresis,
ntilde,
ograve,
oacute,
ocircumflex,
otilde,
odieresis,
ugrave,
uacute,
ucircumflex,
udieresis,
yacute,
ydieresis,
Amacron,
amacron,
Abreve,
abreve,
Aogonek,
aogonek,
Cacute,
cacute,
Ccircumflex,
ccircumflex,
uni010A,
uni010B,
Ccaron,
ccaron,
Dcaron,
dcaron,
Emacron,
emacron,
Ebreve,
ebreve,
Edotaccent,
edotaccent,
Eogonek,
eogonek,
Ecaron,
ecaron,
Gcircumflex,
gcircumflex,
Gbreve,
gbreve,
uni0120,
uni0121,
Gcommaaccent,
gcommaaccent,
Hcircumflex,
hcircumflex,
Itilde,
itilde,
Imacron,
imacron,
Ibreve,
ibreve,
Iogonek,
iogonek,
Idotaccent,
Jcircumflex,
jcircumflex,
Kcommaaccent,
kcommaaccent,
Lacute,
lacute,
Lcommaaccent,
lcommaaccent,
Lcaron,
lcaron,
Ldot,
ldot,
Nacute,
nacute,
Ncommaaccent,
ncommaaccent,
Ncaron,
ncaron,
napostrophe,
Omacron,
omacron,
Obreve,
obreve,
Ohungarumlaut,
ohungarumlaut,
Racute,
racute,
Rcommaaccent,
rcommaaccent,
Rcaron,
rcaron,
Sacute,
sacute,
Scircumflex,
scircumflex,
Scedilla,
scedilla,
uni0218,
uni0219,
Scaron,
scaron,
uni021A,
uni021B,
uni0162,
uni0162.smcp,
uni0163,
Tcaron,
tcaron,
Utilde,
utilde,
Umacron,
umacron,
Ubreve,
ubreve,
Uring,
uring,
Uhungarumlaut,
uhungarumlaut,
Uogonek,
uogonek,
Wcircumflex,
wcircumflex,
Ycircumflex,
ycircumflex,
Ydieresis,
Zacute,
zacute,
Zdotaccent,
zdotaccent,
Zcaron,
zcaron,
AEacute,
aeacute,
Oslashacute,
oslashacute,
Dcroat.smcp,
Eth.smcp,
Tbar.smcp,
Agrave.smcp,
Aacute.smcp,
Acircumflex.smcp,
Atilde.smcp,
Adieresis.smcp,
Aring.smcp,
Aringacute.smcp,
Ccedilla.smcp,
Egrave.smcp,
Eacute.smcp,
Ecircumflex.smcp,
Edieresis.smcp,
Igrave.smcp,
Iacute.smcp,
Icircumflex.smcp,
Idieresis.smcp,
Ntilde.smcp,
Ograve.smcp,
Oacute.smcp,
Ocircumflex.smcp,
Otilde.smcp,
Odieresis.smcp,
Ugrave.smcp,
Uacute.smcp,
Ucircumflex.smcp,
Udieresis.smcp,
Yacute.smcp,
Amacron.smcp,
Abreve.smcp,
Aogonek.smcp,
Cacute.smcp,
Ccircumflex.smcp,
Ccaron.smcp,
Dcaron.smcp,
Emacron.smcp,
Ebreve.smcp,
Edotaccent.smcp,
Eogonek.smcp,
Ecaron.smcp,
Gcircumflex.smcp,
Gbreve.smcp,
Gcommaaccent.smcp,
Hcircumflex.smcp,
Itilde.smcp,
Imacron.smcp,
Ibreve.smcp,
Iogonek.smcp,
Idotaccent.smcp,
Jcircumflex.smcp,
Kcommaaccent.smcp,
Lacute.smcp,
Lcommaaccent.smcp,
Lcaron.smcp,
Ldot.smcp,
Nacute.smcp,
Ncommaaccent.smcp,
Ncaron.smcp,
Omacron.smcp,
Obreve.smcp,
Ohungarumlaut.smcp,
Racute.smcp,
Rcommaaccent.smcp,
Rcaron.smcp,
Sacute.smcp,
Scircumflex.smcp,
Scedilla.smcp,
Scaron.smcp,
Tcaron.smcp,
Utilde.smcp,
Umacron.smcp,
Ubreve.smcp,
Uring.smcp,
Uhungarumlaut.smcp,
Uogonek.smcp,
Wcircumflex.smcp,
Ycircumflex.smcp,
Ydieresis.smcp,
Zacute.smcp,
Zdotaccent.smcp,
Zcaron.smcp,
Alphatonos,
Epsilontonos,
Etatonos,
Iotatonos,
Omicrontonos,
Upsilontonos,
Omegatonos,
iotadieresistonos,
Alpha,
Beta,
Epsilon,
Zeta,
Eta,
Iota,
Kappa,
Mu,
Nu,
Omicron,
Rho,
Tau,
Upsilon,
Chi,
Iotadieresis,
Upsilondieresis,
alphatonos,
epsilontonos,
etatonos,
iotatonos,
upsilondieresistonos,
kappa,
omicron,
uni03BC,
nu,
chi,
iotadieresis,
upsilondieresis,
omicrontonos,
upsilontonos,
omegatonos,
uni0401,
uni0403,
uni0405,
uni0406,
uni0407,
uni0408,
uni041A,
uni040C,
uni040E,
uni0410,
uni0412,
uni0413,
uni0415,
uni0419,
uni041C,
uni041D,
uni041E,
uni041F,
uni0420,
uni0421,
uni0422,
uni0424,
uni0425,
uni0430,
uni0435,
uni0439,
uni043E,
uni0440,
uni0441,
uni0443,
uni0445,
uni0451,
uni0453,
uni0455,
uni0456,
uni0457,
uni0458,
uni045C,
uni045E,
Wgrave,
wgrave,
Wacute,
wacute,
Wdieresis,
wdieresis,
Ygrave,
ygrave,
minute,
second,
exclamdbl,
uni01F0,
uni02BC,
uni1E3E,
uni1E3F,
uni1E00,
uni1E01,
uni1F4D,
uni0400,
uni040D,
uni0450,
uni045D,
uni0470,
uni0471,
uni0476,
uni0477,
uni0498,
uni0499,
uni04AA,
uni04AB,
uni04AE,
uni04AF,
uni04C0,
uni04C1,
uni04C2,
uni04CF,
uni04D0,
uni04D1,
uni04D2,
uni04D3,
uni04D4,
uni04D5,
uni04D6,
uni04D7,
uni04DA,
uni04D9,
uni04DB,
uni04DC,
uni04DD,
uni04DE,
uni04DF,
uni04E2,
uni04E3,
uni04E4,
uni04E5,
uni04E6,
uni04E7,
uni04E8,
uni04E9,
uni04EA,
uni04EB,
uni04EC,
uni04ED,
uni04EE,
uni04EF,
uni04F0,
uni04F1,
uni04F2,
uni04F3,
uni04F4,
uni04F5,
uni04F8,
uni04F9,
uni04FC,
uni04FD,
uni0501,
uni0512,
uni0513,
uni1EA0,
uni1EA1,
uni1EA2,
uni1EA3,
uni1EA4,
uni1EA5,
uni1EA6,
uni1EA7,
uni1EA8,
uni1EA9,
uni1EAA,
uni1EAB,
uni1EAC,
uni1EAD,
uni1EAE,
uni1EAF,
uni1EB0,
uni1EB1,
uni1EB2,
uni1EB3,
uni1EB4,
uni1EB5,
uni1EB6,
uni1EB7,
uni1EB8,
uni1EB9,
uni1EBA,
uni1EBB,
uni1EBC,
uni1EBD,
uni1EBE,
uni1EBF,
uni1EC0,
uni1EC1,
uni1EC2,
uni1EC3,
uni1EC4,
uni1EC5,
uni1EC6,
uni1EC7,
uni1EC8,
uni1EC9,
uni1ECA,
uni1ECB,
uni1ECC,
uni1ECD,
uni1ECE,
uni1ECF,
uni1ED0,
uni1ED1,
uni1ED2,
uni1ED3,
uni1ED4,
uni1ED5,
uni1ED6,
uni1ED7,
uni1ED8,
uni1ED9,
uni1EDA,
uni1EDB,
uni1EDC,
uni1EDD,
uni1EDE,
uni1EDF,
uni1EE0,
uni1EE1,
uni1EE2,
uni1EE3,
uni1EE4,
uni1EE5,
uni1EE6,
uni1EE7,
uni1EE8,
uni1EE9,
uni1EEA,
uni1EEB,
uni1EEC,
uni1EED,
uni1EEE,
uni1EEF,
uni1EF0,
uni1EF1,
uni1EF4,
uni1EF5,
uni1EF6,
uni1EF7,
uni1EF8,
uni1EF9,
dcroat,
uni20AB,
uni049A,
uni049B,
uni04A2,
uni04A3,
uni04AC,
uni04AD,
uni04B2,
uni04B3,
uni04B6,
uni04B7,
uni04CB,
uni04CC,
uni04F6,
uni04F7,
uni0496,
uni0497,
uni04BE,
uni04BF,
uni04BB,
uni048D,
uni048C,
uni0462,
uni0492,
uni0493,
uni049E,
uni049F,
uni048A,
uni048B,
uni04C9,
uni04CA,
uni04CD,
uni04CE,
uni04C5,
uni04C6,
uni04B0,
uni04B1,
uni04FE,
uni04FF,
uni0511,
franc,
uni2015,
uni0002,
uni0009,
exclam
);
}
);
date = "2008-09-12 12:29:34 +0000";
designer = "Google / jan Inkepa";
designerURL = "Christian Robertson / jan Inkepa";
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
familyName = "linja sike pi kute mute";
features = (
{
code = "sub A by A.smcp;\012sub B by B.smcp;\012sub C by C.smcp;\012sub D by D.smcp;\012sub E by E.smcp;\012sub F by F.smcp;\012sub G by G.smcp;\012sub H by H.smcp;\012sub I by I.smcp;\012sub J by J.smcp;\012sub K by K.smcp;\012sub L by L.smcp;\012sub M by M.smcp;\012sub N by N.smcp;\012sub O by O.smcp;\012sub P by P.smcp;\012sub Q by Q.smcp;\012sub R by R.smcp;\012sub S by S.smcp;\012sub T by T.smcp;\012sub U by U.smcp;\012sub V by V.smcp;\012sub W by W.smcp;\012sub X by X.smcp;\012sub Y by Y.smcp;\012sub Z by Z.smcp;\012sub a by A.smcp;\012sub b by B.smcp;\012sub c by C.smcp;\012sub d by D.smcp;\012sub e by E.smcp;\012sub f by F.smcp;\012sub g by G.smcp;\012sub h by H.smcp;\012sub i by I.smcp;\012sub j by J.smcp;\012sub k by K.smcp;\012sub l by L.smcp;\012sub m by M.smcp;\012sub n by N.smcp;\012sub o by O.smcp;\012sub p by P.smcp;\012sub q by Q.smcp;\012sub r by R.smcp;\012sub s by S.smcp;\012sub t by T.smcp;\012sub u by U.smcp;\012sub v by V.smcp;\012sub w by W.smcp;\012sub x by X.smcp;\012sub y by Y.smcp;\012sub z by Z.smcp;\012sub germandbls by Germandbls.smcp;\012sub eth by Eth.smcp;\012sub Dcroat by Dcroat.smcp;\012sub Eth by Eth.smcp;\012sub Tbar by Tbar.smcp;\012sub tbar by Tbar.smcp;\012sub Agrave by Agrave.smcp;\012sub Aacute by Aacute.smcp;\012sub Acircumflex by Acircumflex.smcp;\012sub Atilde by Atilde.smcp;\012sub Adieresis by Adieresis.smcp;\012sub Aring by Aring.smcp;\012sub Aringacute by Aringacute.smcp;\012sub Ccedilla by Ccedilla.smcp;\012sub Egrave by Egrave.smcp;\012sub Eacute by Eacute.smcp;\012sub Ecircumflex by Ecircumflex.smcp;\012sub Edieresis by Edieresis.smcp;\012sub Igrave by Igrave.smcp;\012sub Iacute by Iacute.smcp;\012sub Icircumflex by Icircumflex.smcp;\012sub Idieresis by Idieresis.smcp;\012sub Ntilde by Ntilde.smcp;\012sub Ograve by Ograve.smcp;\012sub Oacute by Oacute.smcp;\012sub Ocircumflex by Ocircumflex.smcp;\012sub Otilde by Otilde.smcp;\012sub Odieresis by Odieresis.smcp;\012sub Ugrave by Ugrave.smcp;\012sub Uacute by Uacute.smcp;\012sub Ucircumflex by Ucircumflex.smcp;\012sub Udieresis by Udieresis.smcp;\012sub Yacute by Yacute.smcp;\012sub agrave by Agrave.smcp;\012sub aacute by Aacute.smcp;\012sub acircumflex by Acircumflex.smcp;\012sub atilde by Atilde.smcp;\012sub adieresis by Adieresis.smcp;\012sub aring by Aring.smcp;\012sub aringacute by Aringacute.smcp;\012sub ccedilla by Ccedilla.smcp;\012sub egrave by Egrave.smcp;\012sub eacute by Eacute.smcp;\012sub ecircumflex by Ecircumflex.smcp;\012sub edieresis by Edieresis.smcp;\012sub igrave by Igrave.smcp;\012sub iacute by Iacute.smcp;\012sub icircumflex by Icircumflex.smcp;\012sub idieresis by Idieresis.smcp;\012sub ntilde by Ntilde.smcp;\012sub ograve by Ograve.smcp;\012sub oacute by Oacute.smcp;\012sub ocircumflex by Ocircumflex.smcp;\012sub otilde by Otilde.smcp;\012sub odieresis by Odieresis.smcp;\012sub ugrave by Ugrave.smcp;\012sub uacute by Uacute.smcp;\012sub ucircumflex by Ucircumflex.smcp;\012sub udieresis by Udieresis.smcp;\012sub yacute by Yacute.smcp;\012sub ydieresis by Ydieresis.smcp;\012sub Amacron by Amacron.smcp;\012sub amacron by Amacron.smcp;\012sub Abreve by Abreve.smcp;\012sub abreve by Abreve.smcp;\012sub Aogonek by Aogonek.smcp;\012sub aogonek by Aogonek.smcp;\012sub Cacute by Cacute.smcp;\012sub cacute by Cacute.smcp;\012sub Ccircumflex by Ccircumflex.smcp;\012sub ccircumflex by Ccircumflex.smcp;\012sub Ccaron by Ccaron.smcp;\012sub ccaron by Ccaron.smcp;\012sub Dcaron by Dcaron.smcp;\012sub dcaron by Dcaron.smcp;\012sub Emacron by Emacron.smcp;\012sub emacron by Emacron.smcp;\012sub Ebreve by Ebreve.smcp;\012sub ebreve by Ebreve.smcp;\012sub Edotaccent by Edotaccent.smcp;\012sub edotaccent by Edotaccent.smcp;\012sub Eogonek by Eogonek.smcp;\012sub eogonek by Eogonek.smcp;\012sub Ecaron by Ecaron.smcp;\012sub ecaron by Ecaron.smcp;\012sub Gcircumflex by Gcircumflex.smcp;\012sub gcircumflex by Gcircumflex.smcp;\012sub Gbreve by Gbreve.smcp;\012sub gbreve by Gbreve.smcp;\012sub Gcommaaccent by Gcommaaccent.smcp;\012sub gcommaaccent by Gcommaaccent.smcp;\012sub Hcircumflex by Hcircumflex.smcp;\012sub hcircumflex by Hcircumflex.smcp;\012sub Itilde by Itilde.smcp;\012sub itilde by Itilde.smcp;\012sub Imacron by Imacron.smcp;\012sub imacron by Imacron.smcp;\012sub Ibreve by Ibreve.smcp;\012sub ibreve by Ibreve.smcp;\012sub Iogonek by Iogonek.smcp;\012sub iogonek by Iogonek.smcp;\012sub Idotaccent by Idotaccent.smcp;\012sub Jcircumflex by Jcircumflex.smcp;\012sub jcircumflex by Jcircumflex.smcp;\012sub Kcommaaccent by Kcommaaccent.smcp;\012sub kcommaaccent by Kcommaaccent.smcp;\012sub Lacute by Lacute.smcp;\012sub lacute by Lacute.smcp;\012sub Lcommaaccent by Lcommaaccent.smcp;\012sub lcommaaccent by Lcommaaccent.smcp;\012sub Lcaron by Lcaron.smcp;\012sub lcaron by Lcaron.smcp;\012sub Ldot by Ldot.smcp;\012sub ldot by Ldot.smcp;\012sub Nacute by Nacute.smcp;\012sub nacute by Nacute.smcp;\012sub Ncommaaccent by Ncommaaccent.smcp;\012sub ncommaaccent by Ncommaaccent.smcp;\012sub Ncaron by Ncaron.smcp;\012sub ncaron by Ncaron.smcp;\012sub Omacron by Omacron.smcp;\012sub omacron by Omacron.smcp;\012sub Obreve by Obreve.smcp;\012sub obreve by Obreve.smcp;\012sub Ohungarumlaut by Ohungarumlaut.smcp;\012sub ohungarumlaut by Ohungarumlaut.smcp;\012sub Racute by Racute.smcp;\012sub racute by Racute.smcp;\012sub Rcommaaccent by Rcommaaccent.smcp;\012sub rcommaaccent by Rcommaaccent.smcp;\012sub Rcaron by Rcaron.smcp;\012sub rcaron by Rcaron.smcp;\012sub Sacute by Sacute.smcp;\012sub sacute by Sacute.smcp;\012sub Scircumflex by Scircumflex.smcp;\012sub scircumflex by Scircumflex.smcp;\012sub Scedilla by Scedilla.smcp;\012sub scedilla by Scedilla.smcp;\012sub Scaron by Scaron.smcp;\012sub scaron by Scaron.smcp;\012sub uni0162 by uni0162.smcp;\012sub uni0163 by uni0162.smcp;\012sub Tcaron by Tcaron.smcp;\012sub tcaron by Tcaron.smcp;\012sub Utilde by Utilde.smcp;\012sub utilde by Utilde.smcp;\012sub Umacron by Umacron.smcp;\012sub umacron by Umacron.smcp;\012sub Ubreve by Ubreve.smcp;\012sub ubreve by Ubreve.smcp;\012sub Uring by Uring.smcp;\012sub uring by Uring.smcp;\012sub Uhungarumlaut by Uhungarumlaut.smcp;\012sub uhungarumlaut by Uhungarumlaut.smcp;\012sub Uogonek by Uogonek.smcp;\012sub uogonek by Uogonek.smcp;\012sub Wcircumflex by Wcircumflex.smcp;\012sub wcircumflex by Wcircumflex.smcp;\012sub Ycircumflex by Ycircumflex.smcp;\012sub ycircumflex by Ycircumflex.smcp;\012sub Ydieresis by Ydieresis.smcp;\012sub Zacute by Zacute.smcp;\012sub zacute by Zacute.smcp;\012sub Zdotaccent by Zdotaccent.smcp;\012sub zdotaccent by Zdotaccent.smcp;\012sub Zcaron by Zcaron.smcp;\012sub zcaron by Zcaron.smcp;\012sub dcroat by Dcroat.smcp;\012";
name = smcp;
}
);
fontMaster = (
{
ascender = 2146;
capHeight = 1456;
customParameters = (
{
name = typoAscender;
value = 2146;
},
{
name = typoDescender;
value = -555;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 2146;
},
{
name = winDescent;
value = 555;
},
{
name = hheaAscender;
value = 2146;
},
{
name = hheaDescender;
value = -555;
},
{
name = strikeoutPosition;
value = 512;
},
{
name = strikeoutSize;
value = 102;
},
{
name = "Prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 6 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 6 values pushed */\0120 71 51 31 4 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 6 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01277 1 58 8 38 8 20 7 4 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 6 \012WS[ ]	/* WriteStore */\012NPUSHB[ ]	/* 10 values pushed */\01278 0 68 6 48 6 29 5 4 8 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 10 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0124992 3776 2496 1344 4 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 14 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 6 values pushed */\0120 64 64 64 4 9 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01238 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012NPUSHB[ ]	/* 10 values pushed */\01278 0 60 8 40 8 22 7 4 12 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\0125 100 \012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "Fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0125 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0125 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 10 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0123 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0127 11 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01211 10 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 15 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01215 15 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01213 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01214 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01213 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01216 16 1 0 14 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012117 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 19 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01211 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01216 16 1 0 14 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01218 6 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012117 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 30 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01216 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01244 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01245 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01213 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01250 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01254 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0122 32 3 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0122 38 3 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0123 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01246 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01252 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01253 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01275 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 65 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 66 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01246 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01262 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01263 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0129 4 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = (
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
0,
185,
185,
151,
151,
1456,
0,
1082,
0,
-416,
2146,
-555,
1476,
-20,
1102,
-20,
-437,
2146,
-555,
185,
185,
151,
151,
1456,
0,
1456,
1082,
-20,
-416,
2146,
-555,
1476,
-20,
1477,
1102,
-20,
-416,
2146,
-555,
185,
185,
151,
151,
1456,
0,
1505,
1082,
0,
-416,
2146,
-555,
1476,
-20,
1505,
1102,
-20,
-437,
2146,
-555,
50,
50
);
}
);
descender = -555;
id = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
weightValue = 400;
widthValue = 5;
xHeight = 1082;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = .notdef;
},
{
glyphname = NULL;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 0;
}
);
note = NULL;
},
{
glyphname = CR;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = space;
unicode = 0020;
},
{
glyphname = quotedbl;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"505 1536 LINE",
"355 1536 LINE",
"355 1411 LINE",
"354 1057 LINE",
"484 1057 LINE",
"505 1427 LINE",
"505 1427 LINE"
);
},
{
closed = 1;
nodes = (
"863 1536 LINE",
"713 1536 LINE",
"713 1411 LINE",
"712 1057 LINE",
"841 1057 LINE",
"862 1427 LINE",
"862 1427 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 13 values pushed */
2 1 0 0 1 89 3 1 1 1 62 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
3 1 1 0 0 1 85 3 1 1 1 0 89 2 1 0 1 0 77 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
18 18 18 17 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = quotedbl;
unicode = 0022;
},
{
glyphname = numbersign;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"627 0 LINE",
"770 0 LINE",
"850 410 LINE",
"1102 410 LINE",
"1102 547 LINE",
"876 547 LINE",
"945 901 LINE",
"1177 901 LINE",
"1177 1040 LINE",
"972 1040 LINE",
"1054 1456 LINE",
"911 1456 LINE",
"829 1040 LINE",
"565 1040 LINE",
"647 1456 LINE",
"504 1456 LINE",
"422 1040 LINE",
"137 1040 LINE",
"137 901 LINE",
"395 901 LINE",
"326 547 LINE",
"61 547 LINE",
"61 410 LINE",
"300 410 LINE",
"220 0 LINE",
"363 0 LINE",
"443 410 LINE",
"707 410 LINE",
"707 410 LINE"
);
},
{
closed = 1;
nodes = (
"538 901 LINE",
"802 901 LINE",
"733 547 LINE",
"469 547 LINE",
"469 547 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
14 11 2 3 12 2 2 0 1 3 0 97 8 1 6 6 60 75 15 10 2 4 4 5 89 9 7 2 5 5 63 75 13 1 1 1 61 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
9 7 2 5 15 10 2 4 3 5 4 98 14 11 2 3 12 2 2 0 1 3 0 97 8 1 6 6 60 75 13 1 1 1 61 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 26 values pushed */
31 30 29 28 27 26 25 24 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 16 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = numbersign;
unicode = 0023;
},
{
glyphname = dollar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"907 320 OFFCURVE",
"868 233 OFFCURVE",
"796 172 OFFCURVE",
"692 140 OFFCURVE",
"627 140 QCURVE SMOOTH",
"576 140 OFFCURVE",
"476 168 OFFCURVE",
"397 234 OFFCURVE",
"347 345 OFFCURVE",
"347 429 QCURVE",
"162 429 LINE",
"162 316 OFFCURVE",
"228 154 OFFCURVE",
"338 47 OFFCURVE",
"481 -9 OFFCURVE",
"559 -17 QCURVE",
"559 -208 LINE",
"708 -208 LINE",
"708 -16 LINE",
"795 -7 OFFCURVE",
"938 53 OFFCURVE",
"1038 152 OFFCURVE",
"1093 290 OFFCURVE",
"1093 377 QCURVE SMOOTH",
"1093 466 OFFCURVE",
"1038 600 OFFCURVE",
"934 702 OFFCURVE",
"784 778 OFFCURVE",
"690 809 QCURVE SMOOTH",
"613 835 OFFCURVE",
"504 890 OFFCURVE",
"435 954 OFFCURVE",
"403 1032 OFFCURVE",
"403 1082 QCURVE SMOOTH",
"404 1189 OFFCURVE",
"528 1315 OFFCURVE",
"649 1315 QCURVE SMOOTH",
"708 1315 OFFCURVE",
"800 1269 OFFCURVE",
"863 1188 OFFCURVE",
"896 1075 OFFCURVE",
"896 1008 QCURVE",
"1080 1008 LINE",
"1079 1212 OFFCURVE",
"893 1449 OFFCURVE",
"725 1472 QCURVE",
"725 1692 LINE",
"576 1692 LINE",
"576 1472 LINE",
"495 1462 OFFCURVE",
"362 1400 OFFCURVE",
"269 1299 OFFCURVE",
"218 1163 OFFCURVE",
"218 1079 QCURVE SMOOTH",
"218 990 OFFCURVE",
"276 854 OFFCURVE",
"383 749 OFFCURVE",
"533 673 OFFCURVE",
"626 644 QCURVE SMOOTH",
"773 596 OFFCURVE",
"908 466 OFFCURVE",
"907 375 QCURVE",
"907 375 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 63 values pushed */
16 13 2 2 0 46 43 2 3 5 2 74 0 1 2 4 2 1 4 112 0 4 5 2 4 5 110 0 0 0 2 1 0 2 99 0 5 3 3 5 87 0 5 5 3 89 0 3 5 3 77 58 56 52 51 45 44 36 20 30 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dollar;
unicode = 0024;
},
{
glyphname = percent;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"44 1117 LINE SMOOTH",
"44 1060 OFFCURVE",
"79 958 OFFCURVE",
"147 881 OFFCURVE",
"248 836 OFFCURVE",
"313 836 QCURVE SMOOTH",
"378 836 OFFCURVE",
"478 881 OFFCURVE",
"545 958 OFFCURVE",
"580 1060 OFFCURVE",
"580 1117 QCURVE SMOOTH",
"580 1194 LINE SMOOTH",
"580 1251 OFFCURVE",
"545 1354 OFFCURVE",
"478 1432 OFFCURVE",
"377 1477 OFFCURVE",
"311 1477 QCURVE SMOOTH",
"246 1477 OFFCURVE",
"146 1432 OFFCURVE",
"79 1354 OFFCURVE",
"44 1251 OFFCURVE",
"44 1194 QCURVE",
"44 1194 LINE"
);
},
{
closed = 1;
nodes = (
"182 1194 LINE SMOOTH",
"182 1225 OFFCURVE",
"196 1284 OFFCURVE",
"227 1329 OFFCURVE",
"276 1356 OFFCURVE",
"311 1356 QCURVE SMOOTH",
"347 1356 OFFCURVE",
"396 1329 OFFCURVE",
"427 1284 OFFCURVE",
"442 1225 OFFCURVE",
"442 1194 QCURVE SMOOTH",
"442 1117 LINE SMOOTH",
"442 1086 OFFCURVE",
"427 1029 OFFCURVE",
"397 984 OFFCURVE",
"348 957 OFFCURVE",
"313 957 QCURVE SMOOTH",
"277 957 OFFCURVE",
"228 984 OFFCURVE",
"196 1029 OFFCURVE",
"182 1086 OFFCURVE",
"182 1117 QCURVE",
"182 1117 LINE"
);
},
{
closed = 1;
nodes = (
"645 260 LINE SMOOTH",
"645 203 OFFCURVE",
"680 101 OFFCURVE",
"748 24 OFFCURVE",
"849 -21 OFFCURVE",
"915 -21 QCURVE SMOOTH",
"980 -21 OFFCURVE",
"1079 24 OFFCURVE",
"1147 101 OFFCURVE",
"1182 203 OFFCURVE",
"1182 260 QCURVE SMOOTH",
"1182 338 LINE SMOOTH",
"1182 395 OFFCURVE",
"1147 497 OFFCURVE",
"1079 575 OFFCURVE",
"979 620 OFFCURVE",
"913 620 QCURVE SMOOTH",
"848 620 OFFCURVE",
"748 575 OFFCURVE",
"680 497 OFFCURVE",
"645 395 OFFCURVE",
"645 338 QCURVE",
"645 338 LINE"
);
},
{
closed = 1;
nodes = (
"783 338 LINE SMOOTH",
"783 369 OFFCURVE",
"797 427 OFFCURVE",
"828 472 OFFCURVE",
"877 499 OFFCURVE",
"913 499 QCURVE SMOOTH",
"948 499 OFFCURVE",
"998 472 OFFCURVE",
"1029 427 OFFCURVE",
"1043 369 OFFCURVE",
"1043 338 QCURVE SMOOTH",
"1043 260 LINE SMOOTH",
"1043 229 OFFCURVE",
"1029 171 OFFCURVE",
"999 126 OFFCURVE",
"950 99 OFFCURVE",
"915 99 QCURVE SMOOTH",
"879 99 OFFCURVE",
"829 126 OFFCURVE",
"798 171 OFFCURVE",
"783 229 OFFCURVE",
"783 260 QCURVE",
"783 260 LINE"
);
},
{
closed = 1;
nodes = (
"965 1225 LINE",
"854 1287 LINE",
"287 250 LINE",
"398 188 LINE",
"398 188 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
91 90 2 2 3 89 1 6 7 2 74 0 2 0 1 4 2 1 99 0 4 0 7 6 4 7 99 0 3 3 0 91 0 0 0 68 75 0 6 6 5 91 0 5 5 69 5 76 41 41 41 41 41 41 41 36 8 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = percent;
unicode = 0025;
},
{
glyphname = ampersand;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"107 287 OFFCURVE",
"168 142 OFFCURVE",
"280 38 OFFCURVE",
"440 -20 OFFCURVE",
"539 -20 QCURVE SMOOTH",
"637 -20 OFFCURVE",
"815 47 OFFCURVE",
"889 110 QCURVE",
"972 0 LINE",
"1193 0 LINE",
"1012 237 LINE",
"1082 325 OFFCURVE",
"1155 544 OFFCURVE",
"1155 672 QCURVE",
"988 672 LINE",
"987 584 OFFCURVE",
"947 432 OFFCURVE",
"912 368 QCURVE",
"605 771 LINE",
"699 851 LINE",
"743 884 OFFCURVE",
"819 952 OFFCURVE",
"874 1028 OFFCURVE",
"905 1115 OFFCURVE",
"905 1168 QCURVE SMOOTH",
"905 1230 OFFCURVE",
"861 1342 OFFCURVE",
"780 1427 OFFCURVE",
"664 1477 OFFCURVE",
"593 1477 QCURVE SMOOTH",
"511 1477 OFFCURVE",
"379 1431 OFFCURVE",
"285 1342 OFFCURVE",
"234 1211 OFFCURVE",
"234 1126 QCURVE SMOOTH",
"234 1038 OFFCURVE",
"313 876 OFFCURVE",
"380 785 QCURVE",
"319 742 OFFCURVE",
"219 653 OFFCURVE",
"147 554 OFFCURVE",
"107 440 OFFCURVE",
"107 373 QCURVE",
"107 373 LINE"
);
},
{
closed = 1;
nodes = (
"478 130 OFFCURVE",
"386 168 OFFCURVE",
"324 234 OFFCURVE",
"292 322 OFFCURVE",
"292 373 QCURVE SMOOTH",
"292 392 OFFCURVE",
"303 449 OFFCURVE",
"336 518 OFFCURVE",
"398 596 OFFCURVE",
"448 637 QCURVE SMOOTH",
"476 661 LINE",
"799 230 LINE",
"742 182 OFFCURVE",
"610 130 OFFCURVE",
"539 130 QCURVE",
"539 130 LINE"
);
},
{
closed = 1;
nodes = (
"420 1168 OFFCURVE",
"442 1239 OFFCURVE",
"485 1293 OFFCURVE",
"550 1325 OFFCURVE",
"593 1325 QCURVE SMOOTH",
"626 1325 OFFCURVE",
"678 1298 OFFCURVE",
"715 1255 OFFCURVE",
"734 1198 OFFCURVE",
"734 1168 QCURVE SMOOTH",
"734 1145 OFFCURVE",
"725 1097 OFFCURVE",
"703 1050 OFFCURVE",
"663 1004 OFFCURVE",
"632 983 QCURVE",
"515 890 LINE",
"470 955 OFFCURVE",
"420 1072 OFFCURVE",
"420 1128 QCURVE",
"420 1128 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 19 values pushed */
61 24 5 3 1 5 47 46 32 25 4 4 1 35 1 2 4 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 5 5 0 91 0 0 0 68 75 0 1 1 2 91 3 1 2 2 61 75 6 1 4 4 2 91 3 1 2 2 61 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
0 5 5 0 91 0 0 0 68 75 0 1 1 2 89 0 2 2 61 75 6 1 4 4 3 91 0 3 3 69 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
44 43 73 71 43 57 44 57 35 20 30 44 7 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ampersand;
unicode = 0026;
},
{
glyphname = quotesingle;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"653 1536 LINE",
"495 1536 LINE",
"495 1409 LINE",
"494 1057 LINE",
"632 1057 LINE",
"653 1425 LINE",
"653 1425 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 0 1 89 0 1 1 62 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
18 17 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = quotesingle;
unicode = 0027;
},
{
glyphname = parenleft;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"357 581 LINE SMOOTH",
"357 438 OFFCURVE",
"402 186 OFFCURVE",
"477 -29 OFFCURVE",
"576 -206 OFFCURVE",
"685 -345 OFFCURVE",
"796 -442 OFFCURVE",
"846 -470 QCURVE",
"885 -357 LINE",
"823 -307 OFFCURVE",
"700 -142 OFFCURVE",
"603 90 OFFCURVE",
"542 392 OFFCURVE",
"542 579 QCURVE SMOOTH",
"542 593 LINE SMOOTH",
"542 780 OFFCURVE",
"603 1081 OFFCURVE",
"700 1312 OFFCURVE",
"823 1474 OFFCURVE",
"885 1521 QCURVE",
"846 1643 LINE",
"796 1615 OFFCURVE",
"686 1517 OFFCURVE",
"577 1379 OFFCURVE",
"478 1201 OFFCURVE",
"402 986 OFFCURVE",
"357 734 OFFCURVE",
"357 591 QCURVE",
"357 591 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
20 7 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = parenleft;
unicode = 0028;
},
{
glyphname = parenright;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"849 591 LINE SMOOTH",
"849 734 OFFCURVE",
"804 986 OFFCURVE",
"728 1201 OFFCURVE",
"629 1379 OFFCURVE",
"520 1517 OFFCURVE",
"409 1615 OFFCURVE",
"359 1643 QCURVE",
"320 1530 LINE",
"377 1484 OFFCURVE",
"498 1320 OFFCURVE",
"599 1085 OFFCURVE",
"663 780 OFFCURVE",
"663 593 QCURVE SMOOTH",
"663 579 LINE SMOOTH",
"663 392 OFFCURVE",
"602 88 OFFCURVE",
"505 -146 OFFCURVE",
"382 -311 OFFCURVE",
"320 -357 QCURVE",
"359 -470 LINE",
"409 -442 OFFCURVE",
"520 -345 OFFCURVE",
"629 -206 OFFCURVE",
"728 -29 OFFCURVE",
"804 186 OFFCURVE",
"849 438 OFFCURVE",
"849 581 QCURVE",
"849 581 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
20 7 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = parenright;
unicode = 0029;
},
{
glyphname = asterisk;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"276 356 LINE",
"422 250 LINE",
"634 604 LINE",
"848 241 LINE",
"994 351 LINE",
"738 675 LINE",
"1120 769 LINE",
"1066 947 LINE",
"703 797 LINE",
"732 1224 LINE",
"554 1224 LINE",
"579 803 LINE",
"214 954 LINE",
"160 779 LINE",
"537 683 LINE",
"537 683 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 23 values pushed */
14 13 12 11 10 9 8 7 6 3 2 1 12 0 71 0 0 0 105 20 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = asterisk;
unicode = 002A;
},
{
glyphname = plus;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"710 1206 LINE",
"525 1206 LINE",
"525 781 LINE",
"119 781 LINE",
"119 597 LINE",
"525 597 LINE",
"525 146 LINE",
"710 146 LINE",
"710 597 LINE",
"1117 597 LINE",
"1117 781 LINE",
"710 781 LINE",
"710 781 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
0 5 0 2 5 85 4 1 0 3 1 1 2 0 1 97 0 5 5 2 89 0 2 5 2 77 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = plus;
unicode = 002B;
},
{
glyphname = comma;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"643 219 LINE",
"442 219 LINE",
"442 40 LINE SMOOTH",
"442 -45 OFFCURVE",
"402 -203 OFFCURVE",
"354 -273 QCURVE",
"469 -336 LINE",
"511 -300 OFFCURVE",
"575 -208 OFFCURVE",
"620 -107 OFFCURVE",
"643 -4 OFFCURVE",
"643 43 QCURVE",
"643 43 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
6 5 2 0 71 0 0 0 105 26 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = comma;
unicode = 002C;
},
{
glyphname = hyphen;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"983 713 LINE",
"218 713 LINE",
"218 561 LINE",
"983 561 LINE",
"983 561 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1230;
}
);
note = hyphen;
unicode = 002D;
},
{
glyphname = period;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"496 91 OFFCURVE",
"515 40 OFFCURVE",
"551 2 OFFCURVE",
"605 -19 OFFCURVE",
"641 -19 QCURVE SMOOTH",
"677 -19 OFFCURVE",
"732 2 OFFCURVE",
"769 40 OFFCURVE",
"788 91 OFFCURVE",
"788 120 QCURVE SMOOTH",
"788 150 OFFCURVE",
"769 202 OFFCURVE",
"732 241 OFFCURVE",
"677 263 OFFCURVE",
"641 263 QCURVE SMOOTH",
"605 263 OFFCURVE",
"551 241 OFFCURVE",
"515 202 OFFCURVE",
"496 150 OFFCURVE",
"496 120 QCURVE",
"496 120 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 0 0 1 91 0 1 1 69 1 76 40 36 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = period;
unicode = 002E;
},
{
glyphname = slash;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1025 1456 LINE",
"860 1456 LINE",
"252 -125 LINE",
"418 -125 LINE",
"418 -125 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 0 1 0 115 0 1 1 60 1 76 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = slash;
unicode = 002F;
},
{
glyphname = zero;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1088 898 LINE SMOOTH",
"1088 1037 OFFCURVE",
"1024 1252 OFFCURVE",
"903 1400 OFFCURVE",
"728 1477 OFFCURVE",
"616 1477 QCURVE SMOOTH",
"505 1477 OFFCURVE",
"330 1400 OFFCURVE",
"209 1252 OFFCURVE",
"145 1037 OFFCURVE",
"145 898 QCURVE SMOOTH",
"145 557 LINE SMOOTH",
"145 418 OFFCURVE",
"210 203 OFFCURVE",
"332 56 OFFCURVE",
"507 -20 OFFCURVE",
"618 -20 QCURVE SMOOTH",
"730 -20 OFFCURVE",
"904 56 OFFCURVE",
"1024 203 OFFCURVE",
"1088 418 OFFCURVE",
"1088 557 QCURVE",
"1088 557 LINE"
);
},
{
closed = 1;
nodes = (
"331 939 LINE SMOOTH",
"331 1128 OFFCURVE",
"470 1325 OFFCURVE",
"616 1325 QCURVE SMOOTH",
"745 1325 OFFCURVE",
"882 1174 OFFCURVE",
"898 1029 QCURVE",
"331 594 LINE",
"331 594 LINE"
);
},
{
closed = 1;
nodes = (
"902 518 LINE SMOOTH",
"902 330 OFFCURVE",
"765 130 OFFCURVE",
"618 130 QCURVE SMOOTH",
"493 130 OFFCURVE",
"353 278 OFFCURVE",
"336 419 QCURVE",
"902 852 LINE",
"902 852 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
31 30 23 22 4 3 2 1 74 0 2 2 1 91 0 1 1 68 75 0 3 3 0 91 0 0 0 69 0 76 38 40 41 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = zero;
unicode = 0030;
},
{
glyphname = one;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"774 1456 LINE",
"759 1456 LINE",
"208 1244 LINE",
"208 1075 LINE",
"589 1220 LINE",
"589 0 LINE",
"774 0 LINE",
"774 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
5 4 3 2 4 0 72 0 0 0 61 0 76 16 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = one;
unicode = 0031;
},
{
glyphname = two;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1067 151 LINE",
"336 151 LINE",
"727 575 LINE SMOOTH",
"782 635 OFFCURVE",
"881 756 OFFCURVE",
"956 880 OFFCURVE",
"1000 1007 OFFCURVE",
"1000 1072 QCURVE SMOOTH",
"1000 1159 OFFCURVE",
"939 1307 OFFCURVE",
"825 1415 OFFCURVE",
"660 1476 OFFCURVE",
"557 1476 QCURVE SMOOTH",
"445 1476 OFFCURVE",
"270 1404 OFFCURVE",
"149 1282 OFFCURVE",
"85 1119 OFFCURVE",
"85 1027 QCURVE",
"271 1027 LINE",
"271 1095 OFFCURVE",
"306 1205 OFFCURVE",
"377 1282 OFFCURVE",
"484 1324 OFFCURVE",
"557 1324 QCURVE SMOOTH",
"617 1324 OFFCURVE",
"712 1283 OFFCURVE",
"779 1213 OFFCURVE",
"814 1118 OFFCURVE",
"814 1064 QCURVE SMOOTH",
"814 1020 OFFCURVE",
"792 937 OFFCURVE",
"740 844 OFFCURVE",
"654 734 OFFCURVE",
"590 663 QCURVE SMOOTH",
"113 133 LINE",
"113 0 LINE",
"1067 0 LINE",
"1067 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
2 1 0 4 1 74 0 2 1 4 1 2 4 112 0 1 1 3 91 0 3 3 68 75 0 4 4 0 89 0 0 0 61 0 76 26 36 20 43 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = two;
unicode = 0032;
},
{
glyphname = three;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"390 667 LINE",
"522 667 LINE SMOOTH",
"591 667 OFFCURVE",
"706 635 OFFCURVE",
"787 569 OFFCURVE",
"832 470 OFFCURVE",
"832 402 QCURVE SMOOTH",
"832 333 OFFCURVE",
"793 232 OFFCURVE",
"721 164 OFFCURVE",
"619 131 OFFCURVE",
"556 131 QCURVE SMOOTH",
"493 131 OFFCURVE",
"390 167 OFFCURVE",
"318 233 OFFCURVE",
"279 327 OFFCURVE",
"279 384 QCURVE",
"94 384 LINE",
"94 288 OFFCURVE",
"167 138 OFFCURVE",
"291 34 OFFCURVE",
"460 -20 OFFCURVE",
"556 -20 QCURVE SMOOTH",
"654 -20 OFFCURVE",
"823 37 OFFCURVE",
"947 146 OFFCURVE",
"1017 304 OFFCURVE",
"1017 406 QCURVE SMOOTH",
"1017 456 OFFCURVE",
"994 558 OFFCURVE",
"937 650 OFFCURVE",
"842 724 OFFCURVE",
"771 747 QCURVE",
"830 772 OFFCURVE",
"915 847 OFFCURVE",
"969 932 OFFCURVE",
"995 1022 OFFCURVE",
"995 1064 QCURVE SMOOTH",
"995 1165 OFFCURVE",
"931 1319 OFFCURVE",
"815 1423 OFFCURVE",
"653 1476 OFFCURVE",
"555 1476 QCURVE SMOOTH",
"454 1476 OFFCURVE",
"289 1413 OFFCURVE",
"171 1304 OFFCURVE",
"106 1157 OFFCURVE",
"106 1074 QCURVE",
"292 1074 LINE",
"292 1131 OFFCURVE",
"330 1223 OFFCURVE",
"399 1289 OFFCURVE",
"496 1324 OFFCURVE",
"555 1324 QCURVE SMOOTH",
"680 1324 OFFCURVE",
"810 1195 OFFCURVE",
"810 1068 QCURVE SMOOTH",
"810 1013 OFFCURVE",
"772 921 OFFCURVE",
"699 855 OFFCURVE",
"592 817 OFFCURVE",
"522 817 QCURVE SMOOTH",
"390 817 LINE",
"390 817 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 66 values pushed */
30 1 7 0 1 74 0 2 1 0 1 2 0 112 0 5 7 6 7 5 6 112 0 0 0 7 5 0 7 99 0 1 1 3 91 0 3 3 68 75 0 6 6 4 91 0 4 4 69 4 76 62 60 52 50 46 45 41 39 36 20 38 32 8 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = three;
unicode = 0033;
},
{
glyphname = four;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"924 1456 LINE",
"727 1456 LINE",
"75 447 LINE",
"75 338 LINE",
"739 338 LINE",
"739 0 LINE",
"924 0 LINE",
"924 338 LINE",
"1127 338 LINE",
"1127 489 LINE",
"924 489 LINE",
"924 489 LINE"
);
},
{
closed = 1;
nodes = (
"709 1154 LINE",
"739 1210 LINE",
"739 489 LINE",
"280 489 LINE",
"280 489 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
13 1 0 4 8 1 1 0 2 74 5 1 0 3 1 1 2 0 1 98 0 4 4 60 75 0 2 2 61 2 76 17 18 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = four;
unicode = 0034;
},
{
glyphname = five;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"388 692 LINE",
"413 714 OFFCURVE",
"460 748 OFFCURVE",
"514 772 OFFCURVE",
"581 785 OFFCURVE",
"627 785 QCURVE SMOOTH",
"697 785 OFFCURVE",
"805 735 OFFCURVE",
"879 648 OFFCURVE",
"918 530 OFFCURVE",
"918 462 QCURVE SMOOTH",
"918 387 OFFCURVE",
"883 265 OFFCURVE",
"814 178 OFFCURVE",
"712 131 OFFCURVE",
"646 131 QCURVE SMOOTH",
"529 131 OFFCURVE",
"380 259 OFFCURVE",
"363 383 QCURVE",
"187 383 LINE",
"197 282 OFFCURVE",
"276 130 OFFCURVE",
"399 30 OFFCURVE",
"557 -20 OFFCURVE",
"646 -20 QCURVE SMOOTH",
"762 -20 OFFCURVE",
"934 53 OFFCURVE",
"1047 182 OFFCURVE",
"1103 360 OFFCURVE",
"1103 464 QCURVE SMOOTH",
"1103 574 OFFCURVE",
"1043 754 OFFCURVE",
"931 881 OFFCURVE",
"771 951 OFFCURVE",
"670 951 QCURVE SMOOTH",
"591 951 OFFCURVE",
"471 913 OFFCURVE",
"428 888 QCURVE",
"469 1276 LINE",
"1060 1276 LINE",
"1060 1456 LINE",
"313 1456 LINE",
"240 730 LINE",
"240 730 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
5 1 6 2 42 1 4 6 2 74 0 4 6 5 6 4 5 112 0 2 0 6 4 2 6 99 0 1 1 0 89 0 0 0 60 75 0 5 5 3 91 0 3 3 69 3 76 40 34 20 40 35 17 17 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = five;
unicode = 0035;
},
{
glyphname = six;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"840 1457 LINE SMOOTH",
"697 1457 OFFCURVE",
"483 1389 OFFCURVE",
"328 1271 OFFCURVE",
"226 1110 OFFCURVE",
"166 926 OFFCURVE",
"141 725 OFFCURVE",
"141 625 QCURVE SMOOTH",
"141 538 LINE SMOOTH",
"141 471 OFFCURVE",
"167 337 OFFCURVE",
"218 213 OFFCURVE",
"296 105 OFFCURVE",
"400 26 OFFCURVE",
"531 -20 OFFCURVE",
"610 -20 QCURVE SMOOTH",
"721 -20 OFFCURVE",
"890 58 OFFCURVE",
"1004 193 OFFCURVE",
"1061 373 OFFCURVE",
"1061 475 QCURVE SMOOTH",
"1061 564 OFFCURVE",
"1013 736 OFFCURVE",
"911 872 OFFCURVE",
"753 955 OFFCURVE",
"644 955 QCURVE SMOOTH",
"594 955 OFFCURVE",
"503 932 OFFCURVE",
"424 893 OFFCURVE",
"356 840 OFFCURVE",
"330 809 QCURVE",
"334 870 OFFCURVE",
"362 988 OFFCURVE",
"414 1096 OFFCURVE",
"493 1187 OFFCURVE",
"603 1253 OFFCURVE",
"748 1291 OFFCURVE",
"840 1291 QCURVE SMOOTH",
"856 1291 LINE",
"856 1457 LINE",
"856 1457 LINE"
);
},
{
closed = 1;
nodes = (
"681 801 OFFCURVE",
"781 745 OFFCURVE",
"847 651 OFFCURVE",
"879 530 OFFCURVE",
"879 466 QCURVE SMOOTH",
"879 394 OFFCURVE",
"844 271 OFFCURVE",
"775 183 OFFCURVE",
"675 133 OFFCURVE",
"610 133 QCURVE SMOOTH",
"554 133 OFFCURVE",
"452 186 OFFCURVE",
"374 288 OFFCURVE",
"328 437 OFFCURVE",
"328 533 QCURVE SMOOTH",
"328 595 LINE",
"345 641 OFFCURVE",
"403 717 OFFCURVE",
"479 771 OFFCURVE",
"567 801 OFFCURVE",
"614 801 QCURVE",
"614 801 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
9 1 4 1 45 1 5 4 2 74 0 1 6 1 4 5 1 4 99 0 0 0 3 91 0 3 3 60 75 0 5 5 2 91 0 2 2 69 2 76 41 40 52 50 40 60 41 60 29 40 42 33 7 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = six;
unicode = 0036;
},
{
glyphname = seven;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1096 1456 LINE",
"112 1456 LINE",
"112 1294 LINE",
"900 1294 LINE",
"299 0 LINE",
"493 0 LINE",
"1096 1352 LINE",
"1096 1352 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 1 1 2 1 74 0 1 1 2 89 0 2 2 60 75 0 0 0 61 0 76 17 17 17 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = seven;
unicode = 0037;
},
{
glyphname = eight;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1070 1171 OFFCURVE",
"1004 1320 OFFCURVE",
"888 1422 OFFCURVE",
"730 1476 OFFCURVE",
"638 1476 QCURVE SMOOTH",
"545 1476 OFFCURVE",
"388 1422 OFFCURVE",
"275 1320 OFFCURVE",
"211 1171 OFFCURVE",
"211 1076 QCURVE SMOOTH",
"211 1022 OFFCURVE",
"241 924 OFFCURVE",
"295 841 OFFCURVE",
"373 774 OFFCURVE",
"421 750 QCURVE",
"365 726 OFFCURVE",
"275 654 OFFCURVE",
"211 563 OFFCURVE",
"177 454 OFFCURVE",
"177 393 QCURVE SMOOTH",
"177 293 OFFCURVE",
"249 139 OFFCURVE",
"374 34 OFFCURVE",
"543 -20 OFFCURVE",
"641 -20 QCURVE SMOOTH",
"737 -20 OFFCURVE",
"905 35 OFFCURVE",
"1030 140 OFFCURVE",
"1103 294 OFFCURVE",
"1103 393 QCURVE SMOOTH",
"1103 454 OFFCURVE",
"1068 562 OFFCURVE",
"1003 654 OFFCURVE",
"912 725 OFFCURVE",
"856 749 QCURVE",
"953 797 OFFCURVE",
"1069 967 OFFCURVE",
"1070 1076 QCURVE",
"1070 1076 LINE"
);
},
{
closed = 1;
nodes = (
"918 334 OFFCURVE",
"877 235 OFFCURVE",
"804 167 OFFCURVE",
"702 131 OFFCURVE",
"641 131 QCURVE SMOOTH",
"577 131 OFFCURVE",
"474 167 OFFCURVE",
"402 235 OFFCURVE",
"363 334 OFFCURVE",
"363 397 QCURVE SMOOTH",
"363 458 OFFCURVE",
"402 560 OFFCURVE",
"474 633 OFFCURVE",
"576 673 OFFCURVE",
"639 673 QCURVE SMOOTH",
"700 673 OFFCURVE",
"803 633 OFFCURVE",
"877 560 OFFCURVE",
"918 458 OFFCURVE",
"918 397 QCURVE",
"918 397 LINE"
);
},
{
closed = 1;
nodes = (
"884 1017 OFFCURVE",
"848 925 OFFCURVE",
"783 860 OFFCURVE",
"693 825 OFFCURVE",
"640 825 QCURVE SMOOTH",
"586 825 OFFCURVE",
"497 860 OFFCURVE",
"432 925 OFFCURVE",
"397 1016 OFFCURVE",
"397 1073 QCURVE SMOOTH",
"397 1130 OFFCURVE",
"432 1223 OFFCURVE",
"496 1289 OFFCURVE",
"584 1324 OFFCURVE",
"638 1324 QCURVE SMOOTH",
"692 1324 OFFCURVE",
"782 1287 OFFCURVE",
"847 1220 OFFCURVE",
"884 1128 OFFCURVE",
"884 1073 QCURVE",
"884 1073 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
23 3 2 2 5 1 74 0 5 0 2 3 5 2 99 0 4 4 1 91 0 1 1 68 75 0 3 3 0 91 0 0 0 69 0 76 74 72 64 62 54 52 44 42 34 32 44 6 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = eight;
unicode = 0038;
},
{
glyphname = nine;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"354 164 LINE",
"354 -1 LINE",
"373 -1 LINE SMOOTH",
"524 -1 OFFCURVE",
"744 69 OFFCURVE",
"898 189 OFFCURVE",
"994 350 OFFCURVE",
"1047 532 OFFCURVE",
"1065 727 OFFCURVE",
"1065 820 QCURVE SMOOTH",
"1065 887 LINE SMOOTH",
"1065 959 OFFCURVE",
"1043 1102 OFFCURVE",
"996 1233 OFFCURVE",
"922 1346 OFFCURVE",
"819 1429 OFFCURVE",
"684 1476 OFFCURVE",
"600 1476 QCURVE SMOOTH",
"488 1476 OFFCURVE",
"319 1395 OFFCURVE",
"206 1258 OFFCURVE",
"149 1075 OFFCURVE",
"149 972 QCURVE SMOOTH",
"149 884 OFFCURVE",
"197 710 OFFCURVE",
"299 572 OFFCURVE",
"456 487 OFFCURVE",
"564 487 QCURVE SMOOTH",
"620 487 OFFCURVE",
"715 510 OFFCURVE",
"793 550 OFFCURVE",
"855 603 OFFCURVE",
"879 633 QCURVE",
"876 572 OFFCURVE",
"854 455 OFFCURVE",
"807 350 OFFCURVE",
"733 263 OFFCURVE",
"622 199 OFFCURVE",
"472 164 OFFCURVE",
"373 164 QCURVE",
"373 164 LINE"
);
},
{
closed = 1;
nodes = (
"527 640 OFFCURVE",
"428 699 OFFCURVE",
"363 795 OFFCURVE",
"331 918 OFFCURVE",
"331 982 QCURVE SMOOTH",
"331 1054 OFFCURVE",
"367 1179 OFFCURVE",
"436 1270 OFFCURVE",
"536 1322 OFFCURVE",
"601 1322 QCURVE SMOOTH",
"658 1322 OFFCURVE",
"759 1266 OFFCURVE",
"836 1161 OFFCURVE",
"881 1009 OFFCURVE",
"881 912 QCURVE SMOOTH",
"881 852 LINE",
"864 805 OFFCURVE",
"805 728 OFFCURVE",
"730 671 OFFCURVE",
"641 640 OFFCURVE",
"594 640 QCURVE",
"594 640 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
45 1 4 5 7 1 1 4 2 74 7 1 4 0 1 0 4 1 99 0 5 5 2 91 0 2 2 68 75 6 1 0 0 3 91 0 3 3 61 3 76 41 40 1 0 52 50 40 60 41 60 37 36 23 21 13 11 0 39 1 39 8 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = nine;
unicode = 0039;
},
{
glyphname = colon;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 50, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 50, 876}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = colon;
unicode = 003A;
},
{
glyphname = semicolon;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, 41, 876}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 132, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = semicolon;
unicode = 003B;
},
{
glyphname = less;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1018 903 LINE",
"1018 1099 LINE",
"170 721 LINE",
"170 575 LINE",
"1018 196 LINE",
"1018 392 LINE",
"406 628 LINE",
"353 646 LINE",
"406 663 LINE",
"406 663 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
7 4 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = less;
unicode = 003C;
},
{
glyphname = equal;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1066 941 LINE",
"173 941 LINE",
"173 780 LINE",
"1066 780 LINE",
"1066 780 LINE"
);
},
{
closed = 1;
nodes = (
"1066 525 LINE",
"173 525 LINE",
"173 365 LINE",
"1066 365 LINE",
"1066 365 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
0 1 0 0 3 1 0 97 0 3 2 2 3 85 0 3 3 2 89 0 2 3 2 77 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = equal;
unicode = 003D;
},
{
glyphname = greater;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"825 669 LINE",
"885 650 LINE",
"825 633 LINE",
"178 389 LINE",
"178 197 LINE",
"1061 576 LINE",
"1061 722 LINE",
"178 1100 LINE",
"178 909 LINE",
"178 909 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
4 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = greater;
unicode = 003E;
},
{
glyphname = question;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"696 410 LINE",
"696 449 OFFCURVE",
"700 510 OFFCURVE",
"716 564 OFFCURVE",
"749 616 OFFCURVE",
"779 645 QCURVE SMOOTH",
"826 687 OFFCURVE",
"923 785 OFFCURVE",
"1001 898 OFFCURVE",
"1051 1025 OFFCURVE",
"1051 1097 QCURVE SMOOTH",
"1051 1187 OFFCURVE",
"993 1327 OFFCURVE",
"883 1425 OFFCURVE",
"724 1476 OFFCURVE",
"623 1476 QCURVE SMOOTH",
"532 1476 OFFCURVE",
"375 1427 OFFCURVE",
"260 1334 OFFCURVE",
"192 1200 OFFCURVE",
"191 1116 QCURVE",
"376 1116 LINE",
"376 1168 OFFCURVE",
"418 1243 OFFCURVE",
"487 1292 OFFCURVE",
"576 1315 OFFCURVE",
"623 1315 QCURVE SMOOTH",
"740 1315 OFFCURVE",
"866 1200 OFFCURVE",
"866 1091 QCURVE SMOOTH",
"866 1041 OFFCURVE",
"828 951 OFFCURVE",
"769 870 OFFCURVE",
"698 796 OFFCURVE",
"664 761 QCURVE SMOOTH",
"614 715 OFFCURVE",
"554 648 OFFCURVE",
"522 575 OFFCURVE",
"512 482 OFFCURVE",
"511 410 QCURVE",
"511 410 LINE"
);
},
{
closed = 1;
nodes = (
"490 51 OFFCURVE",
"547 -11 OFFCURVE",
"604 -11 QCURVE SMOOTH",
"661 -11 OFFCURVE",
"720 51 OFFCURVE",
"720 97 QCURVE SMOOTH",
"720 145 OFFCURVE",
"661 209 OFFCURVE",
"604 209 QCURVE SMOOTH",
"547 209 OFFCURVE",
"490 145 OFFCURVE",
"490 97 QCURVE",
"490 97 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 1 0 3 0 1 3 112 6 1 3 4 0 3 4 110 0 0 0 2 91 0 2 2 68 75 0 4 4 5 91 0 5 5 61 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 1 0 3 0 1 3 112 6 1 3 4 0 3 4 110 0 0 0 2 91 0 2 2 68 75 0 4 4 5 91 0 5 5 69 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 1 0 3 0 1 3 112 6 1 3 4 0 3 4 110 0 0 0 2 91 0 2 2 68 75 0 4 4 5 91 0 5 5 61 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 1 0 3 0 1 3 112 6 1 3 4 0 3 4 110 0 0 0 2 91 0 2 2 68 75 0 4 4 5 91 0 5 5 69 5 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 50 48 44 42 0 39 0 39 36 20 44 7 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = question;
unicode = 003F;
},
{
glyphname = at;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1163 940 OFFCURVE",
"1099 1187 OFFCURVE",
"970 1363 OFFCURVE",
"780 1458 OFFCURVE",
"658 1458 QCURVE SMOOTH",
"572 1458 OFFCURVE",
"419 1402 OFFCURVE",
"291 1300 OFFCURVE",
"188 1159 OFFCURVE",
"115 989 OFFCURVE",
"73 794 OFFCURVE",
"69 691 QCURVE SMOOTH",
"64 538 OFFCURVE",
"123 281 OFFCURVE",
"256 95 OFFCURVE",
"467 -8 OFFCURVE",
"614 -8 QCURVE SMOOTH",
"646 -8 OFFCURVE",
"718 1 OFFCURVE",
"788 20 OFFCURVE",
"852 48 OFFCURVE",
"877 67 QCURVE",
"845 184 LINE",
"823 169 OFFCURVE",
"769 145 OFFCURVE",
"709 128 OFFCURVE",
"647 119 OFFCURVE",
"617 119 QCURVE SMOOTH",
"505 119 OFFCURVE",
"340 196 OFFCURVE",
"234 343 OFFCURVE",
"186 555 OFFCURVE",
"191 691 QCURVE SMOOTH",
"195 831 OFFCURVE",
"265 1067 OFFCURVE",
"387 1237 OFFCURVE",
"554 1332 OFFCURVE",
"655 1332 QCURVE SMOOTH",
"751 1332 OFFCURVE",
"901 1258 OFFCURVE",
"1004 1118 OFFCURVE",
"1054 916 OFFCURVE",
"1050 789 QCURVE SMOOTH",
"1049 716 OFFCURVE",
"1029 586 OFFCURVE",
"991 489 OFFCURVE",
"934 432 OFFCURVE",
"897 432 QCURVE SMOOTH",
"881 432 OFFCURVE",
"853 442 OFFCURVE",
"834 471 OFFCURVE",
"824 522 OFFCURVE",
"827 563 QCURVE SMOOTH",
"871 1067 LINE",
"845 1103 OFFCURVE",
"757 1156 OFFCURVE",
"690 1156 QCURVE SMOOTH",
"619 1156 OFFCURVE",
"501 1089 OFFCURVE",
"412 964 OFFCURVE",
"356 785 OFFCURVE",
"347 674 QCURVE SMOOTH",
"341 596 OFFCURVE",
"358 466 OFFCURVE",
"403 372 OFFCURVE",
"475 320 OFFCURVE",
"524 320 QCURVE SMOOTH",
"586 320 OFFCURVE",
"689 385 OFFCURVE",
"724 441 QCURVE",
"741 384 OFFCURVE",
"822 320 OFFCURVE",
"883 320 QCURVE SMOOTH",
"957 320 OFFCURVE",
"1059 406 OFFCURVE",
"1124 542 OFFCURVE",
"1156 709 OFFCURVE",
"1159 789 QCURVE",
"1159 789 LINE"
);
},
{
closed = 1;
nodes = (
"478 756 OFFCURVE",
"511 889 OFFCURVE",
"565 982 OFFCURVE",
"644 1033 OFFCURVE",
"697 1033 QCURVE SMOOTH",
"727 1033 OFFCURVE",
"755 1020 QCURVE",
"716 575 LINE",
"686 512 OFFCURVE",
"606 458 OFFCURVE",
"557 458 QCURVE SMOOTH",
"509 458 OFFCURVE",
"465 572 OFFCURVE",
"470 674 QCURVE",
"470 674 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 20 values pushed */
24 1 9 2 85 78 8 3 3 9 55 1 5 0 56 1 6 5 4 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
24 1 9 2 85 78 2 8 9 8 1 3 8 55 1 5 0 56 1 6 5 5 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 2 0 9 3 2 9 99 8 1 3 1 1 0 5 3 0 99 0 4 4 7 91 0 7 7 60 75 0 5 5 6 91 0 6 6 61 6 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 44 values pushed */
0 2 0 9 8 2 9 99 0 8 3 0 8 87 0 3 1 1 0 5 3 0 99 0 4 4 7 91 0 7 7 60 75 0 5 5 6 91 0 6 6 61 6 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
88 86 38 42 41 40 40 39 40 36 36 10 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = at;
unicode = 0040;
},
{
glyphname = A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"984 0 LINE",
"1168 0 LINE",
"706 1456 LINE",
"551 1456 LINE",
"81 0 LINE",
"266 0 LINE",
"383 377 LINE",
"869 377 LINE",
"869 377 LINE"
);
},
{
closed = 1;
nodes = (
"628 1170 LINE",
"820 538 LINE",
"433 538 LINE",
"433 538 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
10 1 4 2 1 74 0 4 0 0 1 4 0 98 0 2 2 60 75 3 1 1 1 61 1 76 17 17 17 17 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = A;
unicode = 0041;
},
{
glyphname = B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"638 0 LINE SMOOTH",
"731 1 OFFCURVE",
"906 57 OFFCURVE",
"1040 162 OFFCURVE",
"1120 318 OFFCURVE",
"1119 420 QCURVE SMOOTH",
"1119 485 OFFCURVE",
"1080 597 OFFCURVE",
"1010 686 OFFCURVE",
"913 749 OFFCURVE",
"855 766 QCURVE",
"901 786 OFFCURVE",
"983 842 OFFCURVE",
"1044 917 OFFCURVE",
"1079 1011 OFFCURVE",
"1080 1068 QCURVE SMOOTH",
"1081 1170 OFFCURVE",
"1001 1316 OFFCURVE",
"867 1410 OFFCURVE",
"695 1455 OFFCURVE",
"605 1456 QCURVE SMOOTH",
"172 1456 LINE",
"172 0 LINE",
"172 0 LINE"
);
},
{
closed = 1;
nodes = (
"653 681 LINE SMOOTH",
"712 679 OFFCURVE",
"814 643 OFFCURVE",
"890 576 OFFCURVE",
"933 480 OFFCURVE",
"932 418 QCURVE SMOOTH",
"932 357 OFFCURVE",
"885 261 OFFCURVE",
"805 195 OFFCURVE",
"701 158 OFFCURVE",
"643 157 QCURVE SMOOTH",
"358 157 LINE",
"358 681 LINE",
"358 681 LINE"
);
},
{
closed = 1;
nodes = (
"358 1298 LINE",
"611 1298 LINE SMOOTH",
"665 1297 OFFCURVE",
"768 1271 OFFCURVE",
"847 1216 OFFCURVE",
"894 1130 OFFCURVE",
"894 1069 QCURVE SMOOTH",
"894 1012 OFFCURVE",
"846 926 OFFCURVE",
"768 867 OFFCURVE",
"668 836 OFFCURVE",
"616 835 QCURVE SMOOTH",
"358 835 LINE",
"358 835 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
12 1 3 4 1 74 0 4 7 1 3 2 4 3 99 0 5 5 0 91 0 0 0 60 75 0 2 2 1 91 6 1 1 1 61 1 76 23 23 0 0 48 46 38 36 23 35 23 34 26 24 0 22 0 21 33 8 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = B;
unicode = 0042;
},
{
glyphname = C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"932 438 LINE",
"923 372 OFFCURVE",
"879 259 OFFCURVE",
"805 176 OFFCURVE",
"698 130 OFFCURVE",
"625 130 QCURVE SMOOTH",
"558 130 OFFCURVE",
"458 173 OFFCURVE",
"384 248 OFFCURVE",
"336 346 OFFCURVE",
"306 457 OFFCURVE",
"293 572 OFFCURVE",
"293 626 QCURVE SMOOTH",
"293 831 LINE SMOOTH",
"293 885 OFFCURVE",
"306 1000 OFFCURVE",
"336 1110 OFFCURVE",
"385 1208 OFFCURVE",
"458 1282 OFFCURVE",
"559 1325 OFFCURVE",
"625 1325 QCURVE SMOOTH",
"698 1325 OFFCURVE",
"805 1276 OFFCURVE",
"879 1190 OFFCURVE",
"923 1076 OFFCURVE",
"932 1010 QCURVE",
"1117 1010 LINE",
"1105 1114 OFFCURVE",
"1030 1286 OFFCURVE",
"906 1409 OFFCURVE",
"734 1476 OFFCURVE",
"625 1476 QCURVE SMOOTH",
"534 1476 OFFCURVE",
"388 1425 OFFCURVE",
"273 1335 OFFCURVE",
"190 1212 OFFCURVE",
"135 1068 OFFCURVE",
"108 910 OFFCURVE",
"107 829 QCURVE SMOOTH",
"107 626 LINE SMOOTH",
"108 545 OFFCURVE",
"135 387 OFFCURVE",
"190 243 OFFCURVE",
"273 121 OFFCURVE",
"388 31 OFFCURVE",
"535 -20 OFFCURVE",
"625 -20 QCURVE SMOOTH",
"730 -20 OFFCURVE",
"901 47 OFFCURVE",
"1026 168 OFFCURVE",
"1104 337 OFFCURVE",
"1117 438 QCURVE",
"1117 438 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
0 2 3 5 3 2 5 112 6 1 5 4 3 5 4 110 0 3 3 1 91 0 1 1 68 75 0 4 4 0 91 0 0 0 69 0 76 0 0 0 51 0 51 45 36 20 45 36 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = C;
unicode = 0043;
},
{
glyphname = D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"492 0 LINE SMOOTH",
"644 1 OFFCURVE",
"883 100 OFFCURVE",
"1048 277 OFFCURVE",
"1135 524 OFFCURVE",
"1136 674 QCURVE SMOOTH",
"1136 781 LINE SMOOTH",
"1135 931 OFFCURVE",
"1048 1178 OFFCURVE",
"883 1355 OFFCURVE",
"644 1454 OFFCURVE",
"492 1456 QCURVE SMOOTH",
"155 1456 LINE",
"155 0 LINE",
"155 0 LINE"
);
},
{
closed = 1;
nodes = (
"492 1304 LINE SMOOTH",
"610 1302 OFFCURVE",
"782 1222 OFFCURVE",
"894 1083 OFFCURVE",
"950 894 OFFCURVE",
"951 783 QCURVE SMOOTH",
"951 674 LINE SMOOTH",
"950 563 OFFCURVE",
"895 373 OFFCURVE",
"782 233 OFFCURVE",
"610 152 OFFCURVE",
"492 151 QCURVE SMOOTH",
"343 151 LINE",
"343 1304 LINE",
"343 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
5 1 3 3 0 91 0 0 0 60 75 0 2 2 1 91 4 1 1 1 61 1 76 14 14 0 0 14 27 14 26 17 15 0 13 0 12 33 6 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = D;
unicode = 0044;
},
{
glyphname = E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"975 830 LINE",
"367 830 LINE",
"367 1298 LINE",
"1067 1298 LINE",
"1067 1456 LINE",
"182 1456 LINE",
"182 0 LINE",
"1076 0 LINE",
"1076 157 LINE",
"367 157 LINE",
"367 673 LINE",
"975 673 LINE",
"975 673 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 5 0 0 1 5 0 97 0 4 4 3 89 0 3 3 60 75 0 1 1 2 89 0 2 2 61 2 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = E;
unicode = 0045;
},
{
glyphname = F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"984 800 LINE",
"378 800 LINE",
"378 1298 LINE",
"1085 1298 LINE",
"1085 1456 LINE",
"191 1456 LINE",
"191 0 LINE",
"378 0 LINE",
"378 643 LINE",
"984 643 LINE",
"984 643 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
0 4 0 0 1 4 0 97 0 3 3 2 89 0 2 2 60 75 0 1 1 61 1 76 17 17 17 17 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = F;
unicode = 0046;
},
{
glyphname = G;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1113 725 LINE",
"641 725 LINE",
"641 569 LINE",
"937 569 LINE",
"935 242 LINE",
"912 209 OFFCURVE",
"844 168 OFFCURVE",
"766 144 OFFCURVE",
"683 136 OFFCURVE",
"645 137 QCURVE SMOOTH",
"579 138 OFFCURVE",
"475 183 OFFCURVE",
"396 259 OFFCURVE",
"340 359 OFFCURVE",
"304 471 OFFCURVE",
"287 588 OFFCURVE",
"286 643 QCURVE SMOOTH",
"286 814 LINE SMOOTH",
"286 868 OFFCURVE",
"300 984 OFFCURVE",
"332 1096 OFFCURVE",
"382 1197 OFFCURVE",
"458 1273 OFFCURVE",
"560 1318 OFFCURVE",
"626 1318 QCURVE SMOOTH",
"695 1318 OFFCURVE",
"799 1275 OFFCURVE",
"874 1199 OFFCURVE",
"920 1092 OFFCURVE",
"931 1029 QCURVE",
"1114 1029 LINE",
"1105 1131 OFFCURVE",
"1027 1296 OFFCURVE",
"899 1413 OFFCURVE",
"727 1476 OFFCURVE",
"625 1476 QCURVE SMOOTH",
"533 1476 OFFCURVE",
"385 1422 OFFCURVE",
"268 1329 OFFCURVE",
"184 1202 OFFCURVE",
"128 1054 OFFCURVE",
"101 893 OFFCURVE",
"100 812 QCURVE SMOOTH",
"100 643 LINE SMOOTH",
"101 561 OFFCURVE",
"132 400 OFFCURVE",
"193 253 OFFCURVE",
"283 127 OFFCURVE",
"403 34 OFFCURVE",
"554 -19 OFFCURVE",
"644 -20 QCURVE SMOOTH",
"786 -21 OFFCURVE",
"1024 83 OFFCURVE",
"1116 191 QCURVE",
"1116 191 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
49 0 2 4 5 1 74 0 2 3 6 3 2 6 112 0 6 0 5 4 6 5 97 0 3 3 1 91 0 1 1 68 75 0 4 4 0 91 0 0 0 69 0 76 17 21 45 36 20 45 34 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = G;
unicode = 0047;
},
{
glyphname = H;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1087 1456 LINE",
"912 1456 LINE",
"912 830 LINE",
"315 830 LINE",
"315 1456 LINE",
"141 1456 LINE",
"141 0 LINE",
"315 0 LINE",
"315 673 LINE",
"912 673 LINE",
"912 0 LINE",
"1087 0 LINE",
"1087 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 4 0 1 0 4 1 97 5 1 3 3 60 75 2 1 0 0 61 0 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = H;
unicode = 0048;
},
{
glyphname = I;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"174 1295 LINE",
"515 1295 LINE",
"515 160 LINE",
"174 160 LINE",
"174 0 LINE",
"1054 0 LINE",
"1054 160 LINE",
"705 160 LINE",
"705 1295 LINE",
"1054 1295 LINE",
"1054 1456 LINE",
"174 1456 LINE",
"174 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
5 1 1 1 0 89 0 0 0 60 75 4 1 2 2 3 89 0 3 3 61 3 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = I;
unicode = 0049;
},
{
glyphname = J;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"857 443 LINE SMOOTH",
"855 381 OFFCURVE",
"816 270 OFFCURVE",
"743 186 OFFCURVE",
"639 137 OFFCURVE",
"573 137 QCURVE SMOOTH",
"509 137 OFFCURVE",
"406 179 OFFCURVE",
"332 256 OFFCURVE",
"289 360 OFFCURVE",
"286 421 QCURVE",
"98 421 LINE",
"107 320 OFFCURVE",
"181 157 OFFCURVE",
"304 42 OFFCURVE",
"471 -20 OFFCURVE",
"573 -20 QCURVE SMOOTH",
"674 -20 OFFCURVE",
"845 49 OFFCURVE",
"971 172 OFFCURVE",
"1044 342 OFFCURVE",
"1046 443 QCURVE SMOOTH",
"1046 1456 LINE",
"857 1456 LINE",
"857 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
0 2 0 3 0 2 3 112 0 0 0 60 75 0 3 3 1 91 0 1 1 69 1 76 36 20 37 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = J;
unicode = 004A;
},
{
glyphname = K;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"963 0 LINE",
"1188 0 LINE",
"645 819 LINE",
"1154 1456 LINE",
"929 1456 LINE",
"502 921 LINE",
"361 745 LINE",
"361 1456 LINE",
"172 1456 LINE",
"172 0 LINE",
"361 0 LINE",
"361 492 LINE",
"523 676 LINE",
"523 676 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
10 6 1 3 0 1 1 74 2 1 1 1 60 75 3 1 0 0 61 0 76 18 19 17 18 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = K;
unicode = 004B;
},
{
glyphname = L;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"383 1456 LINE",
"198 1456 LINE",
"198 0 LINE",
"1095 0 LINE",
"1095 157 LINE",
"383 157 LINE",
"383 157 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 2 2 60 75 0 0 0 1 90 0 1 1 61 1 76 17 17 16 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = L;
unicode = 004C;
},
{
glyphname = M;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"148 1456 LINE",
"148 0 LINE",
"328 0 LINE",
"328 581 LINE",
"313 1168 LINE",
"560 405 LINE",
"666 405 LINE",
"935 1189 LINE",
"920 581 LINE",
"920 0 LINE",
"1100 0 LINE",
"1100 1456 LINE",
"870 1456 LINE",
"614 728 LINE",
"377 1456 LINE",
"377 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
10 7 1 3 2 0 1 74 0 2 0 1 0 2 1 112 5 4 2 0 0 60 75 3 1 1 1 61 1 76 0 0 0 14 0 14 19 19 17 18 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = M;
unicode = 004D;
},
{
glyphname = N;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1086 1456 LINE",
"899 1456 LINE",
"896 370 LINE",
"331 1456 LINE",
"143 1456 LINE",
"143 0 LINE",
"330 0 LINE",
"333 1088 LINE",
"898 0 LINE",
"1086 0 LINE",
"1086 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
7 2 2 0 2 1 74 3 1 2 2 60 75 1 1 0 0 61 0 76 18 17 18 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = N;
unicode = 004E;
},
{
glyphname = O;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1121 810 LINE SMOOTH",
"1120 888 OFFCURVE",
"1095 1048 OFFCURVE",
"1042 1196 OFFCURVE",
"961 1325 OFFCURVE",
"849 1421 OFFCURVE",
"703 1476 OFFCURVE",
"613 1476 QCURVE SMOOTH",
"523 1476 OFFCURVE",
"378 1421 OFFCURVE",
"266 1324 OFFCURVE",
"185 1195 OFFCURVE",
"132 1047 OFFCURVE",
"107 888 OFFCURVE",
"106 810 QCURVE SMOOTH",
"106 644 LINE SMOOTH",
"107 566 OFFCURVE",
"133 408 OFFCURVE",
"186 260 OFFCURVE",
"268 131 OFFCURVE",
"380 35 OFFCURVE",
"525 -20 OFFCURVE",
"615 -20 QCURVE SMOOTH",
"705 -20 OFFCURVE",
"850 35 OFFCURVE",
"962 131 OFFCURVE",
"1043 259 OFFCURVE",
"1095 407 OFFCURVE",
"1120 566 OFFCURVE",
"1121 644 QCURVE",
"1121 644 LINE"
);
},
{
closed = 1;
nodes = (
"938 644 LINE SMOOTH",
"937 592 OFFCURVE",
"926 478 OFFCURVE",
"897 367 OFFCURVE",
"850 266 OFFCURVE",
"779 189 OFFCURVE",
"680 143 OFFCURVE",
"615 143 QCURVE SMOOTH",
"550 143 OFFCURVE",
"452 189 OFFCURVE",
"380 266 OFFCURVE",
"332 368 OFFCURVE",
"302 479 OFFCURVE",
"289 593 OFFCURVE",
"288 644 QCURVE SMOOTH",
"288 812 LINE SMOOTH",
"289 863 OFFCURVE",
"302 976 OFFCURVE",
"331 1087 OFFCURVE",
"379 1188 OFFCURVE",
"451 1265 OFFCURVE",
"549 1311 OFFCURVE",
"613 1311 QCURVE SMOOTH",
"678 1311 OFFCURVE",
"776 1266 OFFCURVE",
"848 1189 OFFCURVE",
"896 1088 OFFCURVE",
"925 977 OFFCURVE",
"937 864 OFFCURVE",
"938 812 QCURVE",
"938 812 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 2 2 1 91 0 1 1 68 75 0 3 3 0 91 0 0 0 69 0 76 45 45 45 38 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = O;
unicode = 004F;
},
{
glyphname = P;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"663 584 LINE SMOOTH",
"761 585 OFFCURVE",
"936 643 OFFCURVE",
"1068 753 OFFCURVE",
"1145 914 OFFCURVE",
"1145 1019 QCURVE SMOOTH",
"1145 1124 OFFCURVE",
"1068 1286 OFFCURVE",
"936 1396 OFFCURVE",
"761 1454 OFFCURVE",
"663 1456 QCURVE SMOOTH",
"191 1456 LINE",
"191 0 LINE",
"376 0 LINE",
"376 584 LINE",
"376 584 LINE"
);
},
{
closed = 1;
nodes = (
"376 1304 LINE",
"663 1304 LINE SMOOTH",
"727 1303 OFFCURVE",
"836 1263 OFFCURVE",
"915 1189 OFFCURVE",
"960 1083 OFFCURVE",
"960 1017 QCURVE SMOOTH",
"960 951 OFFCURVE",
"915 848 OFFCURVE",
"835 776 OFFCURVE",
"727 737 OFFCURVE",
"663 736 QCURVE SMOOTH",
"376 736 LINE",
"376 736 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
0 3 5 1 2 0 3 2 99 0 4 4 1 91 0 1 1 60 75 0 0 0 61 0 76 0 0 27 25 17 15 0 14 0 13 33 17 6 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = P;
unicode = 0050;
},
{
glyphname = Q;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1134 791 LINE SMOOTH",
"1133 871 OFFCURVE",
"1107 1036 OFFCURVE",
"1054 1188 OFFCURVE",
"971 1321 OFFCURVE",
"856 1419 OFFCURVE",
"707 1476 OFFCURVE",
"614 1476 QCURVE SMOOTH",
"521 1476 OFFCURVE",
"372 1419 OFFCURVE",
"257 1320 OFFCURVE",
"175 1187 OFFCURVE",
"121 1035 OFFCURVE",
"95 871 OFFCURVE",
"94 791 QCURVE SMOOTH",
"94 663 LINE SMOOTH",
"95 583 OFFCURVE",
"121 420 OFFCURVE",
"175 268 OFFCURVE",
"259 135 OFFCURVE",
"374 37 OFFCURVE",
"522 -20 OFFCURVE",
"615 -20 QCURVE SMOOTH",
"687 -20 OFFCURVE",
"749 -2 QCURVE",
"1037 -246 LINE",
"1164 -125 LINE",
"913 84 LINE",
"971 133 OFFCURVE",
"1054 266 OFFCURVE",
"1107 418 OFFCURVE",
"1133 582 OFFCURVE",
"1134 663 QCURVE",
"1134 663 LINE"
);
},
{
closed = 1;
nodes = (
"950 663 LINE SMOOTH",
"949 608 OFFCURVE",
"938 489 OFFCURVE",
"909 373 OFFCURVE",
"861 269 OFFCURVE",
"787 190 OFFCURVE",
"684 143 OFFCURVE",
"615 143 QCURVE SMOOTH",
"547 143 OFFCURVE",
"444 190 OFFCURVE",
"370 270 OFFCURVE",
"321 374 OFFCURVE",
"291 490 OFFCURVE",
"278 609 OFFCURVE",
"278 663 QCURVE SMOOTH",
"278 793 LINE SMOOTH",
"278 847 OFFCURVE",
"291 966 OFFCURVE",
"321 1081 OFFCURVE",
"370 1185 OFFCURVE",
"444 1264 OFFCURVE",
"546 1311 OFFCURVE",
"614 1311 QCURVE SMOOTH",
"683 1311 OFFCURVE",
"786 1265 OFFCURVE",
"860 1186 OFFCURVE",
"909 1082 OFFCURVE",
"938 967 OFFCURVE",
"949 848 OFFCURVE",
"950 793 QCURVE",
"950 793 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
8 5 2 0 3 1 74 7 6 2 0 71 0 2 2 1 91 0 1 1 68 75 0 3 3 0 91 0 0 0 69 0 76 45 45 45 41 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Q;
unicode = 0051;
},
{
glyphname = R;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"942 0 LINE",
"1137 0 LINE",
"1138 12 LINE",
"829 634 LINE",
"889 660 OFFCURVE",
"989 734 OFFCURVE",
"1061 830 OFFCURVE",
"1102 948 OFFCURVE",
"1102 1019 QCURVE SMOOTH",
"1102 1129 OFFCURVE",
"1025 1292 OFFCURVE",
"890 1400 OFFCURVE",
"710 1454 OFFCURVE",
"608 1456 QCURVE SMOOTH",
"181 1456 LINE",
"181 0 LINE",
"365 0 LINE",
"365 594 LINE",
"656 594 LINE",
"656 594 LINE"
);
},
{
closed = 1;
nodes = (
"365 1304 LINE",
"608 1304 LINE SMOOTH",
"675 1303 OFFCURVE",
"788 1267 OFFCURVE",
"870 1196 OFFCURVE",
"916 1091 OFFCURVE",
"916 1021 QCURVE SMOOTH",
"916 955 OFFCURVE",
"868 854 OFFCURVE",
"785 784 OFFCURVE",
"675 747 OFFCURVE",
"613 746 QCURVE SMOOTH",
"365 746 LINE",
"365 746 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
15 1 0 4 1 74 0 4 0 0 1 4 0 97 0 5 5 2 91 0 2 2 60 75 3 1 1 1 61 1 76 40 33 42 33 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = R;
unicode = 0052;
},
{
glyphname = S;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"936 308 OFFCURVE",
"884 221 OFFCURVE",
"802 164 OFFCURVE",
"697 137 OFFCURVE",
"643 137 QCURVE SMOOTH",
"575 137 OFFCURVE",
"460 174 OFFCURVE",
"372 247 OFFCURVE",
"316 352 OFFCURVE",
"307 420 QCURVE",
"118 420 LINE",
"121 316 OFFCURVE",
"213 153 OFFCURVE",
"360 40 OFFCURVE",
"546 -20 OFFCURVE",
"643 -20 QCURVE SMOOTH",
"730 -20 OFFCURVE",
"904 29 OFFCURVE",
"1042 126 OFFCURVE",
"1129 272 OFFCURVE",
"1129 370 QCURVE SMOOTH",
"1129 435 OFFCURVE",
"1092 542 OFFCURVE",
"1026 631 OFFCURVE",
"938 701 OFFCURVE",
"836 757 OFFCURVE",
"726 800 OFFCURVE",
"672 817 QCURVE SMOOTH",
"623 832 OFFCURVE",
"512 872 OFFCURVE",
"417 932 OFFCURVE",
"355 1019 OFFCURVE",
"354 1082 QCURVE SMOOTH",
"354 1140 OFFCURVE",
"401 1228 OFFCURVE",
"480 1288 OFFCURVE",
"581 1318 OFFCURVE",
"634 1318 QCURVE SMOOTH",
"700 1318 OFFCURVE",
"805 1277 OFFCURVE",
"881 1203 OFFCURVE",
"927 1100 OFFCURVE",
"935 1037 QCURVE",
"1125 1037 LINE",
"1123 1137 OFFCURVE",
"1041 1299 OFFCURVE",
"905 1413 OFFCURVE",
"729 1476 OFFCURVE",
"634 1476 QCURVE SMOOTH",
"548 1476 OFFCURVE",
"378 1423 OFFCURVE",
"244 1321 OFFCURVE",
"161 1173 OFFCURVE",
"161 1079 QCURVE SMOOTH",
"161 985 OFFCURVE",
"244 846 OFFCURVE",
"375 744 OFFCURVE",
"534 674 OFFCURVE",
"611 649 QCURVE SMOOTH",
"664 632 OFFCURVE",
"779 590 OFFCURVE",
"875 527 OFFCURVE",
"936 435 OFFCURVE",
"936 368 QCURVE",
"936 368 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
0 1 2 4 2 1 4 112 0 4 5 2 4 5 110 0 2 2 0 91 0 0 0 68 75 0 5 5 3 91 0 3 3 69 3 76 60 58 54 53 49 47 36 20 46 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = S;
unicode = 0053;
},
{
glyphname = T;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1156 1456 LINE",
"76 1456 LINE",
"76 1298 LINE",
"526 1298 LINE",
"526 0 LINE",
"706 0 LINE",
"706 1298 LINE",
"1156 1298 LINE",
"1156 1298 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
2 1 0 0 3 89 0 3 3 60 75 0 1 1 61 1 76 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = T;
unicode = 0054;
},
{
glyphname = U;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"909 1456 LINE",
"906 470 LINE SMOOTH",
"904 405 OFFCURVE",
"866 285 OFFCURVE",
"793 192 OFFCURVE",
"685 137 OFFCURVE",
"614 137 QCURVE SMOOTH",
"543 137 OFFCURVE",
"434 193 OFFCURVE",
"361 285 OFFCURVE",
"322 405 OFFCURVE",
"321 470 QCURVE SMOOTH",
"317 1456 LINE",
"141 1456 LINE",
"139 470 LINE SMOOTH",
"140 368 OFFCURVE",
"210 189 OFFCURVE",
"334 56 OFFCURVE",
"508 -20 OFFCURVE",
"614 -20 QCURVE SMOOTH",
"718 -20 OFFCURVE",
"892 57 OFFCURVE",
"1018 190 OFFCURVE",
"1088 368 OFFCURVE",
"1090 470 QCURVE SMOOTH",
"1088 1456 LINE",
"1088 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
4 3 2 1 1 60 75 0 2 2 0 91 0 0 0 69 0 76 0 0 0 25 0 25 37 21 37 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = U;
unicode = 0055;
},
{
glyphname = V;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"269 1456 LINE",
"71 1456 LINE",
"531 0 LINE",
"692 0 LINE",
"1151 1456 LINE",
"954 1456 LINE",
"610 298 LINE",
"610 298 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
2 1 0 0 60 75 0 1 1 61 1 76 17 17 17 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = V;
unicode = 0056;
},
{
glyphname = W;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"708 1456 LINE",
"547 1456 LINE",
"360 394 LINE",
"249 1456 LINE",
"73 1456 LINE",
"250 0 LINE",
"440 0 LINE",
"629 1097 LINE",
"816 0 LINE",
"1005 0 LINE",
"1182 1456 LINE",
"1007 1456 LINE",
"896 394 LINE",
"896 394 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
10 5 2 1 0 1 74 4 3 2 0 0 60 75 2 1 1 1 61 1 76 18 17 18 17 17 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = W;
unicode = 0057;
},
{
glyphname = X;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"315 1456 LINE",
"98 1456 LINE",
"521 734 LINE",
"87 0 LINE",
"306 0 LINE",
"629 582 LINE",
"951 0 LINE",
"1167 0 LINE",
"734 734 LINE",
"1157 1456 LINE",
"939 1456 LINE",
"625 885 LINE",
"625 885 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
9 6 3 3 1 0 1 74 3 1 0 0 60 75 2 1 1 1 61 1 76 18 18 18 17 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = X;
unicode = 0058;
},
{
glyphname = Y;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"272 1456 LINE",
"61 1456 LINE",
"514 543 LINE",
"517 0 LINE",
"689 0 LINE",
"692 543 LINE",
"1145 1456 LINE",
"935 1456 LINE",
"603 725 LINE",
"603 725 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
6 3 2 1 0 1 74 2 1 0 0 60 75 0 1 1 61 1 76 18 18 17 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Y;
unicode = 0059;
},
{
glyphname = Z;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1052 1315 LINE",
"1050 1456 LINE",
"127 1456 LINE",
"127 1298 LINE",
"839 1298 LINE",
"114 144 LINE",
"116 0 LINE",
"1079 0 LINE",
"1079 157 LINE",
"325 157 LINE",
"325 157 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
9 1 2 3 4 1 1 0 2 74 0 2 2 3 89 0 3 3 60 75 0 0 0 1 89 0 1 1 61 1 76 17 18 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Z;
unicode = 005A;
},
{
glyphname = bracketleft;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"822 1664 LINE",
"426 1664 LINE",
"426 -312 LINE",
"822 -312 LINE",
"822 -160 LINE",
"601 -160 LINE",
"601 1512 LINE",
"822 1512 LINE",
"822 1512 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
0 3 0 0 1 3 0 97 0 1 2 2 1 85 0 1 1 2 89 0 2 1 2 77 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = bracketleft;
unicode = 005B;
},
{
glyphname = backslash;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"839 -125 LINE",
"1006 -125 LINE",
"398 1456 LINE",
"231 1456 LINE",
"231 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 1 0 1 115 0 0 0 60 0 76 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = backslash;
unicode = 005C;
},
{
glyphname = bracketright;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"405 1512 LINE",
"627 1512 LINE",
"627 -160 LINE",
"405 -160 LINE",
"405 -312 LINE",
"802 -312 LINE",
"802 1664 LINE",
"405 1664 LINE",
"405 1664 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
0 0 0 3 2 0 3 97 0 2 1 1 2 85 0 2 2 1 89 0 1 2 1 77 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = bracketright;
unicode = 005D;
},
{
glyphname = asciicircum;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"598 1163 LINE",
"613 1231 LINE",
"628 1163 LINE",
"826 677 LINE",
"997 677 LINE",
"678 1456 LINE",
"551 1456 LINE",
"231 677 LINE",
"403 677 LINE",
"403 677 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
7 1 0 1 1 74 2 1 0 1 0 115 0 1 1 60 1 76 17 17 16 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = asciicircum;
unicode = 005E;
},
{
glyphname = underscore;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1072 0 LINE",
"155 0 LINE",
"155 -151 LINE",
"1072 -151 LINE",
"1072 -151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = underscore;
unicode = 005F;
},
{
glyphname = grave;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"638 1481 LINE",
"415 1481 LINE",
"663 1215 LINE",
"813 1215 LINE",
"813 1215 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 60 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 62 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 60 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
16 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 62 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 60 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 62 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 60 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 62 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 60 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
42 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 0 1 0 115 0 1 1 62 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 1 0 1 114 0 0 0 105 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = grave;
unicode = 0060;
},
{
glyphname = a;
lastChange = "2019-10-18 12:09:01 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"445 -20 OFFCURVE",
"306 30 OFFCURVE",
"209 115 OFFCURVE",
"156 232 OFFCURVE",
"156 300 QCURVE SMOOTH",
"156 389 OFFCURVE",
"227 523 OFFCURVE",
"357 612 OFFCURVE",
"540 656 OFFCURVE",
"653 656 QCURVE SMOOTH",
"855 656 LINE",
"855 741 LINE SMOOTH",
"855 790 OFFCURVE",
"819 868 OFFCURVE",
"753 923 OFFCURVE",
"658 953 OFFCURVE",
"599 953 QCURVE SMOOTH",
"544 953 OFFCURVE",
"457 925 OFFCURVE",
"397 879 OFFCURVE",
"364 816 OFFCURVE",
"364 782 QCURVE",
"178 782 LINE",
"179 841 OFFCURVE",
"238 955 OFFCURVE",
"349 1046 OFFCURVE",
"508 1102 OFFCURVE",
"609 1102 QCURVE SMOOTH",
"701 1102 OFFCURVE",
"859 1057 OFFCURVE",
"974 966 OFFCURVE",
"1034 822 OFFCURVE",
"1040 739 QCURVE SMOOTH",
"1036 499 OFFCURVE",
"1034 309 QCURVE",
"1034 30 OFFCURVE",
"678 -19 OFFCURVE",
"584 -20 OFFCURVE",
"531 -20 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"156 306 LINE",
"342 306 LINE",
"358 104 LINE",
"358 -416 LINE",
"156 -416 LINE"
);
},
{
closed = 1;
nodes = (
"558 141 LINE",
"612 141 OFFCURVE",
"869 169 OFFCURVE",
"855 306 QCURVE",
"855 525 LINE",
"683 525 LINE SMOOTH",
"521 525 OFFCURVE",
"341 429 OFFCURVE",
"341 326 QCURVE SMOOTH",
"341 286 OFFCURVE",
"368 218 OFFCURVE",
"422 169 OFFCURVE",
"504 141 OFFCURVE",
"558 141 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
52 1 5 6 45 3 2 0 5 2 74 0 3 2 1 2 3 1 112 0 1 0 6 5 1 6 99 0 2 2 4 91 0 4 4 71 75 7 1 5 5 0 91 0 0 0 69 0 76 48 47 55 53 47 61 48 61 36 20 37 40 39 8 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = a;
unicode = 0061;
changeCount = 132;
},
{
glyphname = b;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1091 550 LINE SMOOTH",
"1091 671 OFFCURVE",
"1035 874 OFFCURVE",
"927 1020 OFFCURVE",
"767 1102 OFFCURVE",
"663 1102 QCURVE SMOOTH",
"563 1102 OFFCURVE",
"413 1032 OFFCURVE",
"360 966 QCURVE",
"360 1536 LINE",
"175 1536 LINE",
"175 0 LINE",
"345 0 LINE",
"354 123 LINE",
"408 54 OFFCURVE",
"561 -20 OFFCURVE",
"665 -20 QCURVE SMOOTH",
"768 -20 OFFCURVE",
"927 64 OFFCURVE",
"1035 212 OFFCURVE",
"1091 413 OFFCURVE",
"1091 529 QCURVE",
"1091 529 LINE"
);
},
{
closed = 1;
nodes = (
"906 529 LINE SMOOTH",
"906 450 OFFCURVE",
"873 308 OFFCURVE",
"804 200 OFFCURVE",
"695 137 OFFCURVE",
"619 137 QCURVE SMOOTH",
"571 137 OFFCURVE",
"491 162 OFFCURVE",
"427 208 OFFCURVE",
"378 269 OFFCURVE",
"360 305 QCURVE",
"360 778 LINE",
"377 814 OFFCURVE",
"426 875 OFFCURVE",
"489 920 OFFCURVE",
"569 945 OFFCURVE",
"617 945 QCURVE SMOOTH",
"697 945 OFFCURVE",
"807 881 OFFCURVE",
"875 772 OFFCURVE",
"906 629 OFFCURVE",
"906 550 QCURVE",
"906 550 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
13 1 4 3 33 32 2 5 4 8 1 0 5 3 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 15 values pushed */
13 1 4 3 33 32 2 5 4 8 1 1 5 3 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 2 2 62 75 0 4 4 3 91 0 3 3 71 75 0 5 5 0 91 1 1 0 0 69 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 2 2 62 75 0 4 4 3 91 0 3 3 71 75 0 1 1 61 75 0 5 5 0 91 0 0 0 69 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 4 4 3 91 0 3 3 71 75 0 2 2 1 89 0 1 1 61 75 0 5 5 0 91 0 0 0 69 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
41 41 35 17 19 36 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = b;
unicode = 0062;
},
{
glyphname = c;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"548 130 OFFCURVE",
"431 199 OFFCURVE",
"360 310 OFFCURVE",
"329 449 OFFCURVE",
"329 520 QCURVE SMOOTH",
"329 562 LINE SMOOTH",
"329 632 OFFCURVE",
"360 770 OFFCURVE",
"432 881 OFFCURVE",
"549 950 OFFCURVE",
"635 950 QCURVE SMOOTH",
"691 950 OFFCURVE",
"788 912 OFFCURVE",
"858 846 OFFCURVE",
"899 759 OFFCURVE",
"900 710 QCURVE",
"1075 710 LINE",
"1075 792 OFFCURVE",
"1009 936 OFFCURVE",
"892 1041 OFFCURVE",
"731 1102 OFFCURVE",
"635 1102 QCURVE SMOOTH",
"512 1102 OFFCURVE",
"328 1014 OFFCURVE",
"205 865 OFFCURVE",
"143 669 OFFCURVE",
"143 562 QCURVE SMOOTH",
"143 520 LINE SMOOTH",
"143 412 OFFCURVE",
"205 217 OFFCURVE",
"328 68 OFFCURVE",
"512 -20 OFFCURVE",
"635 -20 QCURVE SMOOTH",
"721 -20 OFFCURVE",
"879 39 OFFCURVE",
"1001 138 OFFCURVE",
"1074 269 OFFCURVE",
"1075 341 QCURVE",
"900 341 LINE",
"899 296 OFFCURVE",
"854 219 OFFCURVE",
"780 162 OFFCURVE",
"685 130 OFFCURVE",
"635 130 QCURVE",
"635 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
0 4 5 1 5 4 1 112 0 1 0 5 1 0 110 0 5 5 3 91 0 3 3 71 75 6 1 0 0 2 91 0 2 2 69 2 76 1 0 34 32 28 27 23 21 12 10 6 5 0 43 1 43 7 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = c;
unicode = 0063;
},
{
glyphname = d;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"139 529 LINE SMOOTH",
"139 413 OFFCURVE",
"201 212 OFFCURVE",
"313 64 OFFCURVE",
"472 -20 OFFCURVE",
"570 -20 QCURVE SMOOTH",
"670 -20 OFFCURVE",
"820 48 OFFCURVE",
"874 114 QCURVE",
"882 0 LINE",
"1052 0 LINE",
"1052 1536 LINE",
"867 1536 LINE",
"867 975 LINE",
"814 1037 OFFCURVE",
"669 1102 OFFCURVE",
"572 1102 QCURVE SMOOTH",
"473 1102 OFFCURVE",
"313 1020 OFFCURVE",
"200 874 OFFCURVE",
"139 671 OFFCURVE",
"139 550 QCURVE",
"139 550 LINE"
);
},
{
closed = 1;
nodes = (
"324 550 LINE SMOOTH",
"324 629 OFFCURVE",
"358 772 OFFCURVE",
"429 881 OFFCURVE",
"540 945 OFFCURVE",
"618 945 QCURVE SMOOTH",
"709 945 OFFCURVE",
"831 860 OFFCURVE",
"867 794 QCURVE",
"867 292 LINE",
"849 257 OFFCURVE",
"801 200 OFFCURVE",
"739 159 OFFCURVE",
"663 137 OFFCURVE",
"616 137 QCURVE SMOOTH",
"539 137 OFFCURVE",
"429 200 OFFCURVE",
"358 308 OFFCURVE",
"324 450 OFFCURVE",
"324 529 QCURVE",
"324 529 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
8 1 5 0 33 32 2 4 5 13 1 2 4 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 1 1 62 75 0 5 5 0 91 0 0 0 71 75 0 4 4 2 91 3 1 2 2 61 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 1 62 75 0 5 5 0 91 0 0 0 71 75 0 2 2 61 75 0 4 4 3 91 0 3 3 69 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 5 5 0 91 0 0 0 71 75 0 1 1 2 89 0 2 2 61 75 0 4 4 3 91 0 3 3 69 3 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
39 41 35 17 19 36 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = d;
unicode = 0064;
},
{
glyphname = e;
lastChange = "2019-10-18 12:31:48 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"731 -20 OFFCURVE",
"865 15 OFFCURVE",
"971 73 OFFCURVE",
"1052 148 OFFCURVE",
"1079 189 QCURVE",
"966 277 LINE",
"915 211 OFFCURVE",
"761 131 OFFCURVE",
"662 131 QCURVE SMOOTH",
"587 131 OFFCURVE",
"463 187 OFFCURVE",
"374 284 OFFCURVE",
"323 414 OFFCURVE",
"320 488 QCURVE",
"1093 488 LINE",
"1093 571 LINE SMOOTH",
"1093 684 OFFCURVE",
"1036 878 OFFCURVE",
"920 1021 OFFCURVE",
"745 1102 OFFCURVE",
"628 1102 QCURVE SMOOTH",
"535 1102 OFFCURVE",
"358 1026 OFFCURVE",
"219 883 OFFCURVE",
"135 676 OFFCURVE",
"135 545 QCURVE SMOOTH",
"135 503 LINE SMOOTH",
"135 390 OFFCURVE",
"211 198 OFFCURVE",
"347 58 OFFCURVE",
"538 -20 OFFCURVE",
"652 -20 QCURVE",
"652 -20 LINE"
);
},
{
closed = 1;
nodes = (
"699 950 OFFCURVE",
"802 898 OFFCURVE",
"870 814 OFFCURVE",
"905 708 OFFCURVE",
"908 654 QCURVE SMOOTH",
"908 640 LINE",
"326 640 LINE",
"337 715 OFFCURVE",
"392 830 OFFCURVE",
"472 909 OFFCURVE",
"572 950 OFFCURVE",
"628 950 QCURVE",
"628 950 LINE"
);
},
{
closed = 1;
nodes = (
"1028 912 OFFCURVE",
"866 1058 OFFCURVE",
"708 1113 OFFCURVE",
"608 1134 QCURVE SMOOTH",
"532 1150 OFFCURVE",
"433 1181 OFFCURVE",
"374 1221 OFFCURVE",
"350 1271 OFFCURVE",
"350 1303 QCURVE SMOOTH",
"350 1334 OFFCURVE",
"380 1392 OFFCURVE",
"439 1436 OFFCURVE",
"528 1462 OFFCURVE",
"587 1462 QCURVE SMOOTH",
"644 1462 OFFCURVE",
"735 1430 OFFCURVE",
"799 1378 OFFCURVE",
"835 1311 OFFCURVE",
"835 1276 QCURVE",
"1020 1276 LINE",
"1020 1347 OFFCURVE",
"959 1470 OFFCURVE",
"847 1562 OFFCURVE",
"687 1614 OFFCURVE",
"587 1614 QCURVE SMOOTH",
"494 1614 OFFCURVE",
"339 1564 OFFCURVE",
"227 1478 OFFCURVE",
"165 1363 OFFCURVE",
"165 1297 QCURVE SMOOTH",
"165 1230 OFFCURVE",
"225 1129 OFFCURVE",
"334 1054 OFFCURVE",
"487 1001 OFFCURVE",
"580 981 QCURVE SMOOTH",
"656 965 OFFCURVE",
"758 929 OFFCURVE",
"820 885 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"894 185 LINE",
"894 -426 LINE",
"1079 -426 LINE",
"1079 189 LINE"
);
},
{
closed = 1;
nodes = (
"135 484 LINE",
"135 -426 LINE",
"320 -426 LINE",
"320 488 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
27 26 2 3 2 1 74 0 5 0 2 3 5 2 97 7 1 4 4 1 91 0 1 1 71 75 0 3 3 0 91 6 1 0 0 69 0 76 33 32 1 0 38 37 32 43 33 43 24 22 18 17 12 10 0 31 1 31 8 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = e;
unicode = 0065;
changeCount = 67;
},
{
glyphname = f;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"636 0 LINE",
"636 939 LINE",
"1053 939 LINE",
"1053 1082 LINE",
"636 1082 LINE",
"636 1158 LINE SMOOTH",
"636 1291 OFFCURVE",
"767 1421 OFFCURVE",
"897 1422 QCURVE SMOOTH",
"959 1422 OFFCURVE",
"1068 1401 OFFCURVE",
"1109 1387 QCURVE",
"1131 1540 LINE",
"1065 1557 OFFCURVE",
"940 1579 OFFCURVE",
"874 1579 QCURVE SMOOTH",
"778 1579 OFFCURVE",
"622 1525 OFFCURVE",
"511 1419 OFFCURVE",
"450 1262 OFFCURVE",
"450 1158 QCURVE SMOOTH",
"450 1082 LINE",
"152 1082 LINE",
"152 939 LINE",
"450 939 LINE",
"450 0 LINE",
"450 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
13 1 3 2 14 1 1 3 2 74 0 2 0 3 1 2 3 99 5 1 0 0 1 89 4 1 1 1 63 75 7 1 6 6 61 6 76 0 0 0 25 0 25 17 19 37 37 17 17 8 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1230;
}
);
note = f;
unicode = 0066;
},
{
glyphname = g;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"140 529 LINE SMOOTH",
"140 413 OFFCURVE",
"200 212 OFFCURVE",
"311 64 OFFCURVE",
"471 -20 OFFCURVE",
"570 -20 QCURVE SMOOTH",
"667 -20 OFFCURVE",
"814 45 OFFCURVE",
"868 107 QCURVE",
"868 14 LINE SMOOTH",
"868 -56 OFFCURVE",
"828 -164 OFFCURVE",
"753 -237 OFFCURVE",
"647 -275 OFFCURVE",
"581 -275 QCURVE SMOOTH",
"544 -275 OFFCURVE",
"470 -260 OFFCURVE",
"396 -226 OFFCURVE",
"324 -169 OFFCURVE",
"290 -128 QCURVE",
"194 -239 LINE",
"231 -292 OFFCURVE",
"334 -364 OFFCURVE",
"445 -407 OFFCURVE",
"553 -426 OFFCURVE",
"595 -426 QCURVE SMOOTH",
"697 -426 OFFCURVE",
"865 -366 OFFCURVE",
"986 -250 OFFCURVE",
"1053 -84 OFFCURVE",
"1053 23 QCURVE SMOOTH",
"1053 1082 LINE",
"885 1082 LINE",
"876 964 LINE",
"823 1031 OFFCURVE",
"672 1102 OFFCURVE",
"572 1102 QCURVE SMOOTH",
"471 1102 OFFCURVE",
"311 1020 OFFCURVE",
"199 874 OFFCURVE",
"140 671 OFFCURVE",
"140 550 QCURVE",
"140 550 LINE"
);
},
{
closed = 1;
nodes = (
"325 550 LINE SMOOTH",
"325 629 OFFCURVE",
"358 772 OFFCURVE",
"429 881 OFFCURVE",
"540 945 OFFCURVE",
"618 945 QCURVE SMOOTH",
"664 945 OFFCURVE",
"740 922 OFFCURVE",
"802 881 OFFCURVE",
"850 825 OFFCURVE",
"868 791 QCURVE",
"868 295 LINE",
"850 260 OFFCURVE",
"802 202 OFFCURVE",
"741 160 OFFCURVE",
"664 137 OFFCURVE",
"616 137 QCURVE SMOOTH",
"539 137 OFFCURVE",
"429 200 OFFCURVE",
"358 308 OFFCURVE",
"325 450 OFFCURVE",
"325 529 QCURVE",
"325 529 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 20 values pushed */
8 1 6 0 53 52 2 5 6 33 1 4 5 22 21 2 3 4 4 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 20 values pushed */
8 1 6 1 53 52 2 5 6 33 1 4 5 22 21 2 3 4 4 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
0 6 6 0 91 1 1 0 0 71 75 0 5 5 4 91 0 4 4 69 75 0 3 3 2 91 0 2 2 65 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 1 1 63 75 0 6 6 0 91 0 0 0 71 75 0 5 5 4 91 0 4 4 69 75 0 3 3 2 91 0 2 2 65 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
41 41 39 41 37 19 36 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = g;
unicode = 0067;
},
{
glyphname = h;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"359 1536 LINE",
"174 1536 LINE",
"174 0 LINE",
"359 0 LINE",
"359 786 LINE",
"404 858 OFFCURVE",
"549 945 OFFCURVE",
"638 945 QCURVE SMOOTH",
"756 946 OFFCURVE",
"883 816 OFFCURVE",
"883 683 QCURVE SMOOTH",
"883 0 LINE",
"1068 0 LINE",
"1068 681 LINE SMOOTH",
"1068 790 OFFCURVE",
"1015 949 OFFCURVE",
"917 1053 OFFCURVE",
"778 1102 OFFCURVE",
"693 1102 QCURVE SMOOTH",
"587 1101 OFFCURVE",
"417 1006 OFFCURVE",
"359 921 QCURVE",
"359 921 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
17 0 2 1 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 4 4 62 75 0 2 2 0 91 0 0 0 71 75 3 1 1 1 61 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 22 values pushed */
0 2 2 0 91 0 0 0 71 75 0 4 4 1 89 3 1 1 1 61 1 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
17 19 35 21 34 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = h;
unicode = 0068;
},
{
glyphname = i;
lastChange = "2019-10-18 12:22:09 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"93 1255 LINE",
"93 0 LINE",
"269 0 LINE",
"269 861 LINE",
"284 899 OFFCURVE",
"348 945 OFFCURVE",
"406 945 QCURVE SMOOTH",
"469 946 OFFCURVE",
"530 909 OFFCURVE",
"539 842 QCURVE",
"703 833 LINE",
"706 855 OFFCURVE",
"724 896 OFFCURVE",
"756 927 OFFCURVE",
"804 945 OFFCURVE",
"837 945 QCURVE SMOOTH",
"962 946 OFFCURVE",
"962 810 QCURVE SMOOTH",
"962 0 LINE",
"1138 0 LINE",
"1138 808 LINE SMOOTH",
"1138 956 OFFCURVE",
"1010 1102 OFFCURVE",
"891 1102 QCURVE SMOOTH",
"816 1101 OFFCURVE",
"711 1038 OFFCURVE",
"679 986 QCURVE",
"629 1102 OFFCURVE",
"480 1102 QCURVE SMOOTH",
"404 1101 OFFCURVE",
"297 1037 OFFCURVE",
"264 980 QCURVE",
"259 1255 LINE",
"259 1255 LINE"
);
},
{
closed = 1;
nodes = (
"539 1255 LINE",
"539 166 LINE SMOOTH",
"539 89 OFFCURVE",
"500 -16 OFFCURVE",
"432 -80 OFFCURVE",
"340 -107 OFFCURVE",
"288 -107 QCURVE SMOOTH",
"274 -107 OFFCURVE",
"225 -106 OFFCURVE",
"172 -103 OFFCURVE",
"120 -98 OFFCURVE",
"103 -95 QCURVE",
"90 -247 LINE",
"145 -257 OFFCURVE",
"244 -264 OFFCURVE",
"301 -264 QCURVE SMOOTH",
"401 -264 OFFCURVE",
"558 -207 OFFCURVE",
"667 -98 OFFCURVE",
"724 62 OFFCURVE",
"724 166 QCURVE SMOOTH",
"724 1255 LINE"
);
},
{
closed = 1;
nodes = (
"513 1495 OFFCURVE",
"567 1434 OFFCURVE",
"623 1434 QCURVE SMOOTH",
"679 1434 OFFCURVE",
"735 1495 OFFCURVE",
"735 1540 QCURVE SMOOTH",
"735 1585 OFFCURVE",
"679 1648 OFFCURVE",
"623 1648 QCURVE SMOOTH",
"567 1648 OFFCURVE",
"513 1585 OFFCURVE",
"513 1540 QCURVE",
"513 1540 LINE"
);
},
{
closed = 1;
nodes = (
"65 1494 OFFCURVE",
"120 1434 OFFCURVE",
"176 1434 QCURVE SMOOTH",
"231 1434 OFFCURVE",
"287 1494 OFFCURVE",
"287 1539 QCURVE SMOOTH",
"287 1585 OFFCURVE",
"231 1648 OFFCURVE",
"176 1648 QCURVE SMOOTH",
"120 1648 OFFCURVE",
"65 1585 OFFCURVE",
"65 1539 QCURVE",
"65 1539 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
0 6 6 5 91 0 5 5 68 75 0 4 4 0 89 0 0 0 63 75 3 1 1 1 2 89 0 2 2 61 2 76 36 35 17 17 17 17 16 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = i;
unicode = 0069;
changeCount = 2;
},
{
glyphname = j;
lastChange = "2019-10-18 12:41:44 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"93 1255 LINE",
"93 0 LINE",
"269 0 LINE",
"269 861 LINE",
"284 899 OFFCURVE",
"348 945 OFFCURVE",
"406 945 QCURVE SMOOTH",
"469 946 OFFCURVE",
"530 909 OFFCURVE",
"539 842 QCURVE",
"703 833 LINE",
"706 855 OFFCURVE",
"724 896 OFFCURVE",
"756 927 OFFCURVE",
"804 945 OFFCURVE",
"837 945 QCURVE SMOOTH",
"962 946 OFFCURVE",
"962 810 QCURVE SMOOTH",
"962 0 LINE",
"1138 0 LINE",
"1138 808 LINE SMOOTH",
"1138 956 OFFCURVE",
"1010 1102 OFFCURVE",
"891 1102 QCURVE SMOOTH",
"816 1101 OFFCURVE",
"711 1038 OFFCURVE",
"679 986 QCURVE",
"629 1102 OFFCURVE",
"480 1102 QCURVE SMOOTH",
"404 1101 OFFCURVE",
"297 1037 OFFCURVE",
"264 980 QCURVE",
"259 1255 LINE",
"259 1255 LINE"
);
},
{
closed = 1;
nodes = (
"539 1255 LINE",
"539 166 LINE SMOOTH",
"539 89 OFFCURVE",
"500 -16 OFFCURVE",
"432 -80 OFFCURVE",
"340 -107 OFFCURVE",
"288 -107 QCURVE SMOOTH",
"274 -107 OFFCURVE",
"225 -106 OFFCURVE",
"172 -103 OFFCURVE",
"120 -98 OFFCURVE",
"103 -95 QCURVE",
"90 -247 LINE",
"145 -257 OFFCURVE",
"244 -264 OFFCURVE",
"301 -264 QCURVE SMOOTH",
"401 -264 OFFCURVE",
"558 -207 OFFCURVE",
"667 -98 OFFCURVE",
"724 62 OFFCURVE",
"724 166 QCURVE SMOOTH",
"724 1255 LINE"
);
},
{
closed = 1;
nodes = (
"513 1495 OFFCURVE",
"567 1434 OFFCURVE",
"623 1434 QCURVE SMOOTH",
"679 1434 OFFCURVE",
"735 1495 OFFCURVE",
"735 1540 QCURVE SMOOTH",
"735 1585 OFFCURVE",
"679 1648 OFFCURVE",
"623 1648 QCURVE SMOOTH",
"567 1648 OFFCURVE",
"513 1585 OFFCURVE",
"513 1540 QCURVE",
"513 1540 LINE"
);
},
{
closed = 1;
nodes = (
"65 1494 OFFCURVE",
"120 1434 OFFCURVE",
"176 1434 QCURVE SMOOTH",
"231 1434 OFFCURVE",
"287 1494 OFFCURVE",
"287 1539 QCURVE SMOOTH",
"287 1585 OFFCURVE",
"231 1648 OFFCURVE",
"176 1648 QCURVE SMOOTH",
"120 1648 OFFCURVE",
"65 1585 OFFCURVE",
"65 1539 QCURVE",
"65 1539 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 50 values pushed */
11 1 2 3 10 1 1 2 2 74 0 5 5 4 91 0 4 4 68 75 0 3 3 0 89 0 0 0 63 75 0 2 2 1 91 0 1 1 73 1 76 36 35 21 68 53 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = j;
unicode = 006A;
changeCount = 6;
},
{
glyphname = k;
lastChange = "2019-10-18 12:38:54 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"122 529 LINE SMOOTH",
"122 412 OFFCURVE",
"163 212 OFFCURVE",
"239 64 OFFCURVE",
"349 -20 OFFCURVE",
"418 -20 QCURVE SMOOTH",
"487 -20 OFFCURVE",
"596 64 OFFCURVE",
"673 212 OFFCURVE",
"714 412 OFFCURVE",
"714 529 QCURVE SMOOTH",
"714 551 LINE SMOOTH",
"714 668 OFFCURVE",
"673 869 OFFCURVE",
"596 1017 OFFCURVE",
"486 1102 OFFCURVE",
"417 1102 QCURVE SMOOTH",
"349 1102 OFFCURVE",
"239 1017 OFFCURVE",
"163 869 OFFCURVE",
"122 668 OFFCURVE",
"122 551 QCURVE",
"122 551 LINE"
);
},
{
closed = 1;
nodes = (
"281 550 LINE SMOOTH",
"281 621 OFFCURVE",
"297 751 OFFCURVE",
"331 849 OFFCURVE",
"383 908 OFFCURVE",
"417 908 QCURVE SMOOTH",
"452 908 OFFCURVE",
"504 849 OFFCURVE",
"538 751 OFFCURVE",
"554 621 OFFCURVE",
"554 550 QCURVE SMOOTH",
"554 530 LINE SMOOTH",
"554 458 OFFCURVE",
"538 328 OFFCURVE",
"504 230 OFFCURVE",
"452 172 OFFCURVE",
"418 172 QCURVE SMOOTH",
"384 172 OFFCURVE",
"331 230 OFFCURVE",
"297 328 OFFCURVE",
"281 458 OFFCURVE",
"281 530 QCURVE",
"281 530 LINE"
);
},
{
closed = 1;
nodes = (
"903 -12 LINE",
"1107 -12 LINE",
"747 619 LINE",
"1059 1070 LINE",
"863 1070 LINE",
"610 714 LINE",
"656 493 LINE",
"620 493 LINE"
);
},
{
closed = 1;
nodes = (
"329 1702 LINE",
"329 1440 LINE",
"122 1440 LINE",
"122 1256 LINE",
"329 1256 LINE",
"329 999 LINE",
"515 999 LINE",
"515 1256 LINE",
"927 1256 LINE",
"927 1440 LINE",
"515 1440 LINE",
"515 1702 LINE",
"515 1702 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
10 6 1 3 0 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 1 1 62 75 0 2 2 63 75 3 1 0 0 61 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
0 1 1 0 89 3 1 0 0 61 75 0 2 2 63 75 3 1 0 0 61 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
18 19 17 18 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = k;
unicode = 006B;
changeCount = 11;
},
{
glyphname = l;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"203 1375 LINE",
"571 1375 LINE",
"571 160 LINE",
"203 160 LINE",
"203 0 LINE",
"1109 0 LINE",
"1109 160 LINE",
"756 160 LINE",
"756 1536 LINE",
"203 1536 LINE",
"203 1536 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 4 4 0 89 0 0 0 62 75 3 1 1 1 2 89 0 2 2 61 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 20 values pushed */
0 0 0 4 1 0 4 97 3 1 1 1 2 89 0 2 2 61 2 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
17 17 17 17 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = l;
unicode = 006C;
},
{
glyphname = m;
lastChange = "2019-10-18 12:17:12 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"93 1255 LINE",
"93 0 LINE",
"269 0 LINE",
"269 861 LINE",
"284 899 OFFCURVE",
"348 945 OFFCURVE",
"406 945 QCURVE SMOOTH",
"469 946 OFFCURVE",
"530 909 OFFCURVE",
"539 842 QCURVE",
"703 833 LINE",
"706 855 OFFCURVE",
"724 896 OFFCURVE",
"756 927 OFFCURVE",
"804 945 OFFCURVE",
"837 945 QCURVE SMOOTH",
"962 946 OFFCURVE",
"962 810 QCURVE SMOOTH",
"962 0 LINE",
"1138 0 LINE",
"1138 808 LINE SMOOTH",
"1138 956 OFFCURVE",
"1010 1102 OFFCURVE",
"891 1102 QCURVE SMOOTH",
"816 1101 OFFCURVE",
"711 1038 OFFCURVE",
"679 986 QCURVE",
"629 1102 OFFCURVE",
"480 1102 QCURVE SMOOTH",
"404 1101 OFFCURVE",
"297 1037 OFFCURVE",
"264 980 QCURVE",
"259 1255 LINE",
"259 1255 LINE"
);
},
{
closed = 1;
nodes = (
"539 1255 LINE",
"539 166 LINE SMOOTH",
"539 89 OFFCURVE",
"500 -16 OFFCURVE",
"432 -80 OFFCURVE",
"340 -107 OFFCURVE",
"288 -107 QCURVE SMOOTH",
"274 -107 OFFCURVE",
"225 -106 OFFCURVE",
"172 -103 OFFCURVE",
"120 -98 OFFCURVE",
"103 -95 QCURVE",
"90 -247 LINE",
"145 -257 OFFCURVE",
"244 -264 OFFCURVE",
"301 -264 QCURVE SMOOTH",
"401 -264 OFFCURVE",
"558 -207 OFFCURVE",
"667 -98 OFFCURVE",
"724 62 OFFCURVE",
"724 166 QCURVE SMOOTH",
"724 1255 LINE"
);
},
{
closed = 1;
nodes = (
"513 1495 OFFCURVE",
"567 1434 OFFCURVE",
"623 1434 QCURVE SMOOTH",
"679 1434 OFFCURVE",
"735 1495 OFFCURVE",
"735 1540 QCURVE SMOOTH",
"735 1585 OFFCURVE",
"679 1648 OFFCURVE",
"623 1648 QCURVE SMOOTH",
"567 1648 OFFCURVE",
"513 1585 OFFCURVE",
"513 1540 QCURVE",
"513 1540 LINE"
);
},
{
closed = 1;
nodes = (
"65 1494 OFFCURVE",
"120 1434 OFFCURVE",
"176 1434 QCURVE SMOOTH",
"231 1434 OFFCURVE",
"287 1494 OFFCURVE",
"287 1539 QCURVE SMOOTH",
"287 1585 OFFCURVE",
"231 1648 OFFCURVE",
"176 1648 QCURVE SMOOTH",
"120 1648 OFFCURVE",
"65 1585 OFFCURVE",
"65 1539 QCURVE",
"65 1539 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 12 values pushed */
6 1 2 3 0 31 22 2 2 3 2 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 12 values pushed */
6 1 2 3 7 31 22 2 2 3 2 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
5 1 3 3 0 91 8 7 1 3 0 0 71 75 6 4 2 2 2 61 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
8 1 7 7 63 75 5 1 3 3 0 91 1 1 0 0 71 75 6 4 2 2 2 61 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 34 0 34 19 35 21 34 19 35 35 9 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = m;
unicode = 006D;
changeCount = 71;
},
{
glyphname = n;
lastChange = "2019-10-18 12:31:40 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"731 -20 OFFCURVE",
"865 15 OFFCURVE",
"971 73 OFFCURVE",
"1052 148 OFFCURVE",
"1079 189 QCURVE",
"966 277 LINE",
"915 211 OFFCURVE",
"761 131 OFFCURVE",
"662 131 QCURVE SMOOTH",
"587 131 OFFCURVE",
"463 187 OFFCURVE",
"374 284 OFFCURVE",
"323 414 OFFCURVE",
"320 488 QCURVE",
"1093 488 LINE",
"1093 571 LINE SMOOTH",
"1093 684 OFFCURVE",
"1036 878 OFFCURVE",
"920 1021 OFFCURVE",
"745 1102 OFFCURVE",
"628 1102 QCURVE SMOOTH",
"535 1102 OFFCURVE",
"358 1026 OFFCURVE",
"219 883 OFFCURVE",
"135 676 OFFCURVE",
"135 545 QCURVE SMOOTH",
"135 503 LINE SMOOTH",
"135 390 OFFCURVE",
"211 198 OFFCURVE",
"347 58 OFFCURVE",
"538 -20 OFFCURVE",
"652 -20 QCURVE",
"652 -20 LINE"
);
},
{
closed = 1;
nodes = (
"699 950 OFFCURVE",
"802 898 OFFCURVE",
"870 814 OFFCURVE",
"905 708 OFFCURVE",
"908 654 QCURVE SMOOTH",
"908 640 LINE",
"326 640 LINE",
"337 715 OFFCURVE",
"392 830 OFFCURVE",
"472 909 OFFCURVE",
"572 950 OFFCURVE",
"628 950 QCURVE",
"628 950 LINE"
);
},
{
closed = 1;
nodes = (
"1028 912 OFFCURVE",
"866 1058 OFFCURVE",
"708 1113 OFFCURVE",
"608 1134 QCURVE SMOOTH",
"532 1150 OFFCURVE",
"433 1181 OFFCURVE",
"374 1221 OFFCURVE",
"350 1271 OFFCURVE",
"350 1303 QCURVE SMOOTH",
"350 1334 OFFCURVE",
"380 1392 OFFCURVE",
"439 1436 OFFCURVE",
"528 1462 OFFCURVE",
"587 1462 QCURVE SMOOTH",
"644 1462 OFFCURVE",
"735 1430 OFFCURVE",
"799 1378 OFFCURVE",
"835 1311 OFFCURVE",
"835 1276 QCURVE",
"1020 1276 LINE",
"1020 1347 OFFCURVE",
"959 1470 OFFCURVE",
"847 1562 OFFCURVE",
"687 1614 OFFCURVE",
"587 1614 QCURVE SMOOTH",
"494 1614 OFFCURVE",
"339 1564 OFFCURVE",
"227 1478 OFFCURVE",
"165 1363 OFFCURVE",
"165 1297 QCURVE SMOOTH",
"165 1230 OFFCURVE",
"225 1129 OFFCURVE",
"334 1054 OFFCURVE",
"487 1001 OFFCURVE",
"580 981 QCURVE SMOOTH",
"656 965 OFFCURVE",
"758 929 OFFCURVE",
"820 885 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"894 185 LINE",
"894 -426 LINE",
"1079 -426 LINE",
"1079 189 LINE"
);
},
{
closed = 1;
nodes = (
"135 484 LINE",
"135 -426 LINE",
"320 -426 LINE",
"320 488 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
20 1 2 1 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 2 2 0 91 5 4 2 0 0 71 75 3 1 1 1 61 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
5 1 4 4 63 75 0 2 2 0 91 0 0 0 71 75 3 1 1 1 61 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
0 0 0 23 0 23 19 37 21 35 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = n;
unicode = 006E;
changeCount = 4;
},
{
glyphname = o;
lastChange = "2019-10-18 12:39:12 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"122 529 LINE SMOOTH",
"122 412 OFFCURVE",
"163 212 OFFCURVE",
"239 64 OFFCURVE",
"349 -20 OFFCURVE",
"418 -20 QCURVE SMOOTH",
"487 -20 OFFCURVE",
"596 64 OFFCURVE",
"673 212 OFFCURVE",
"714 412 OFFCURVE",
"714 529 QCURVE SMOOTH",
"714 551 LINE SMOOTH",
"714 668 OFFCURVE",
"673 869 OFFCURVE",
"596 1017 OFFCURVE",
"486 1102 OFFCURVE",
"417 1102 QCURVE SMOOTH",
"349 1102 OFFCURVE",
"239 1017 OFFCURVE",
"163 869 OFFCURVE",
"122 668 OFFCURVE",
"122 551 QCURVE",
"122 551 LINE"
);
},
{
closed = 1;
nodes = (
"281 550 LINE SMOOTH",
"281 621 OFFCURVE",
"297 751 OFFCURVE",
"331 849 OFFCURVE",
"383 908 OFFCURVE",
"417 908 QCURVE SMOOTH",
"452 908 OFFCURVE",
"504 849 OFFCURVE",
"538 751 OFFCURVE",
"554 621 OFFCURVE",
"554 550 QCURVE SMOOTH",
"554 530 LINE SMOOTH",
"554 458 OFFCURVE",
"538 328 OFFCURVE",
"504 230 OFFCURVE",
"452 172 OFFCURVE",
"418 172 QCURVE SMOOTH",
"384 172 OFFCURVE",
"331 230 OFFCURVE",
"297 328 OFFCURVE",
"281 458 OFFCURVE",
"281 530 QCURVE",
"281 530 LINE"
);
},
{
closed = 1;
nodes = (
"903 -12 LINE",
"1107 -12 LINE",
"747 619 LINE",
"1059 1070 LINE",
"863 1070 LINE",
"610 714 LINE",
"656 493 LINE",
"620 493 LINE"
);
},
{
closed = 1;
nodes = (
"329 1702 LINE",
"329 1440 LINE",
"122 1440 LINE",
"122 1256 LINE",
"329 1256 LINE",
"329 999 LINE",
"515 999 LINE",
"515 1256 LINE",
"927 1256 LINE",
"927 1440 LINE",
"515 1440 LINE",
"515 1702 LINE",
"515 1702 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 91 0 0 0 71 75 0 2 2 1 91 0 1 1 69 1 76 41 41 41 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = o;
unicode = 006F;
changeCount = 52;
},
{
glyphname = p;
lastChange = "2019-10-18 12:21:56 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"445 -20 OFFCURVE",
"306 30 OFFCURVE",
"209 115 OFFCURVE",
"156 232 OFFCURVE",
"156 300 QCURVE SMOOTH",
"156 389 OFFCURVE",
"227 523 OFFCURVE",
"357 612 OFFCURVE",
"540 656 OFFCURVE",
"653 656 QCURVE SMOOTH",
"855 656 LINE",
"855 741 LINE SMOOTH",
"855 790 OFFCURVE",
"819 868 OFFCURVE",
"753 923 OFFCURVE",
"658 953 OFFCURVE",
"599 953 QCURVE SMOOTH",
"544 953 OFFCURVE",
"457 925 OFFCURVE",
"397 879 OFFCURVE",
"364 816 OFFCURVE",
"364 782 QCURVE",
"178 782 LINE",
"179 841 OFFCURVE",
"238 955 OFFCURVE",
"349 1046 OFFCURVE",
"508 1102 OFFCURVE",
"609 1102 QCURVE SMOOTH",
"701 1102 OFFCURVE",
"859 1057 OFFCURVE",
"974 966 OFFCURVE",
"1034 822 OFFCURVE",
"1040 739 QCURVE SMOOTH",
"1036 499 OFFCURVE",
"1034 309 QCURVE",
"1034 30 OFFCURVE",
"678 -19 OFFCURVE",
"584 -20 OFFCURVE",
"531 -20 QCURVE SMOOTH"
);
},
{
closed = 1;
nodes = (
"156 306 LINE",
"342 306 LINE",
"358 104 LINE",
"358 -416 LINE",
"156 -416 LINE"
);
},
{
closed = 1;
nodes = (
"558 141 LINE",
"612 141 OFFCURVE",
"869 169 OFFCURVE",
"855 306 QCURVE",
"855 525 LINE",
"683 525 LINE SMOOTH",
"521 525 OFFCURVE",
"341 429 OFFCURVE",
"341 326 QCURVE SMOOTH",
"341 286 OFFCURVE",
"368 218 OFFCURVE",
"422 169 OFFCURVE",
"504 141 OFFCURVE",
"558 141 QCURVE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
13 1 4 2 31 30 2 5 4 8 1 0 5 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 4 4 2 91 3 1 2 2 63 75 0 5 5 0 91 0 0 0 69 75 0 1 1 65 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 2 2 63 75 0 4 4 3 91 0 3 3 71 75 0 5 5 0 91 0 0 0 69 75 0 1 1 65 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
37 41 35 17 19 36 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = p;
unicode = 0070;
changeCount = 2;
},
{
glyphname = q;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"140 529 LINE SMOOTH",
"140 413 OFFCURVE",
"199 212 OFFCURVE",
"311 64 OFFCURVE",
"472 -20 OFFCURVE",
"575 -20 QCURVE SMOOTH",
"669 -20 OFFCURVE",
"813 41 OFFCURVE",
"867 98 QCURVE",
"867 -416 LINE",
"1052 -416 LINE",
"1052 1082 LINE",
"882 1082 LINE",
"874 975 LINE",
"820 1037 OFFCURVE",
"673 1102 OFFCURVE",
"577 1102 QCURVE SMOOTH",
"473 1102 OFFCURVE",
"310 1020 OFFCURVE",
"198 874 OFFCURVE",
"140 671 OFFCURVE",
"140 550 QCURVE",
"140 550 LINE"
);
},
{
closed = 1;
nodes = (
"325 550 LINE SMOOTH",
"325 629 OFFCURVE",
"360 773 OFFCURVE",
"433 884 OFFCURVE",
"545 950 OFFCURVE",
"622 950 QCURVE SMOOTH",
"665 950 OFFCURVE",
"738 929 OFFCURVE",
"799 891 OFFCURVE",
"848 840 OFFCURVE",
"867 809 QCURVE",
"867 275 LINE",
"829 211 OFFCURVE",
"709 131 OFFCURVE",
"620 131 QCURVE SMOOTH",
"543 131 OFFCURVE",
"432 196 OFFCURVE",
"360 306 OFFCURVE",
"325 450 OFFCURVE",
"325 529 QCURVE",
"325 529 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
8 1 5 0 31 30 2 4 5 13 1 3 4 3 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 15 values pushed */
8 1 5 1 31 30 2 4 5 13 1 3 4 3 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 5 5 0 91 1 1 0 0 71 75 0 4 4 3 91 0 3 3 69 75 0 2 2 65 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 1 1 63 75 0 5 5 0 91 0 0 0 71 75 0 4 4 3 91 0 3 3 69 75 0 2 2 65 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
39 41 35 17 19 36 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = q;
unicode = 0071;
},
{
glyphname = r;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"765 1102 OFFCURVE",
"580 999 OFFCURVE",
"514 910 QCURVE",
"505 1082 LINE",
"329 1082 LINE",
"329 0 LINE",
"515 0 LINE",
"515 694 LINE",
"553 800 OFFCURVE",
"714 918 OFFCURVE",
"844 918 QCURVE SMOOTH",
"897 918 OFFCURVE",
"994 907 OFFCURVE",
"1048 895 QCURVE",
"1073 1076 LINE",
"1059 1082 OFFCURVE",
"1016 1092 OFFCURVE",
"965 1099 OFFCURVE",
"909 1102 OFFCURVE",
"883 1102 QCURVE",
"883 1102 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 12 values pushed */
5 1 1 0 17 12 6 3 2 1 2 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 12 values pushed */
5 1 1 3 17 12 6 3 2 1 2 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
0 1 1 0 91 3 4 2 0 0 71 75 0 2 2 61 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 22 values pushed */
0 3 3 63 75 0 1 1 0 91 4 1 0 0 71 75 0 2 2 61 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
2 0 16 15 14 13 10 8 0 19 2 19 5 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = r;
unicode = 0072;
},
{
glyphname = s;
lastChange = "2019-10-18 12:32:19 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"731 -20 OFFCURVE",
"865 15 OFFCURVE",
"971 73 OFFCURVE",
"1052 148 OFFCURVE",
"1079 189 QCURVE",
"966 277 LINE",
"915 211 OFFCURVE",
"761 131 OFFCURVE",
"662 131 QCURVE SMOOTH",
"587 131 OFFCURVE",
"463 187 OFFCURVE",
"374 284 OFFCURVE",
"323 414 OFFCURVE",
"320 488 QCURVE",
"1093 488 LINE",
"1093 571 LINE SMOOTH",
"1093 684 OFFCURVE",
"1036 878 OFFCURVE",
"920 1021 OFFCURVE",
"745 1102 OFFCURVE",
"628 1102 QCURVE SMOOTH",
"535 1102 OFFCURVE",
"358 1026 OFFCURVE",
"219 883 OFFCURVE",
"135 676 OFFCURVE",
"135 545 QCURVE SMOOTH",
"135 503 LINE SMOOTH",
"135 390 OFFCURVE",
"211 198 OFFCURVE",
"347 58 OFFCURVE",
"538 -20 OFFCURVE",
"652 -20 QCURVE",
"652 -20 LINE"
);
},
{
closed = 1;
nodes = (
"699 950 OFFCURVE",
"802 898 OFFCURVE",
"870 814 OFFCURVE",
"905 708 OFFCURVE",
"908 654 QCURVE SMOOTH",
"908 640 LINE",
"326 640 LINE",
"337 715 OFFCURVE",
"392 830 OFFCURVE",
"472 909 OFFCURVE",
"572 950 OFFCURVE",
"628 950 QCURVE",
"628 950 LINE"
);
},
{
closed = 1;
nodes = (
"1028 912 OFFCURVE",
"866 1058 OFFCURVE",
"708 1113 OFFCURVE",
"608 1134 QCURVE SMOOTH",
"532 1150 OFFCURVE",
"433 1181 OFFCURVE",
"374 1221 OFFCURVE",
"350 1271 OFFCURVE",
"350 1303 QCURVE SMOOTH",
"350 1334 OFFCURVE",
"380 1392 OFFCURVE",
"439 1436 OFFCURVE",
"528 1462 OFFCURVE",
"587 1462 QCURVE SMOOTH",
"644 1462 OFFCURVE",
"735 1430 OFFCURVE",
"799 1378 OFFCURVE",
"835 1311 OFFCURVE",
"835 1276 QCURVE",
"1020 1276 LINE",
"1020 1347 OFFCURVE",
"959 1470 OFFCURVE",
"847 1562 OFFCURVE",
"687 1614 OFFCURVE",
"587 1614 QCURVE SMOOTH",
"494 1614 OFFCURVE",
"339 1564 OFFCURVE",
"227 1478 OFFCURVE",
"165 1363 OFFCURVE",
"165 1297 QCURVE SMOOTH",
"165 1230 OFFCURVE",
"225 1129 OFFCURVE",
"334 1054 OFFCURVE",
"487 1001 OFFCURVE",
"580 981 QCURVE SMOOTH",
"656 965 OFFCURVE",
"758 929 OFFCURVE",
"820 885 OFFCURVE"
);
},
{
closed = 1;
nodes = (
"894 185 LINE",
"894 -426 LINE",
"1079 -426 LINE",
"1079 189 LINE"
);
},
{
closed = 1;
nodes = (
"135 484 LINE",
"135 -426 LINE",
"320 -426 LINE",
"320 488 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
0 1 2 4 2 1 4 112 0 4 5 2 4 5 110 0 2 2 0 91 0 0 0 71 75 0 5 5 3 91 0 3 3 69 3 76 58 56 52 51 47 45 36 20 46 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = s;
unicode = 0073;
changeCount = 4;
},
{
glyphname = t;
lastChange = "2019-10-18 12:38:59 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"122 529 LINE SMOOTH",
"122 412 OFFCURVE",
"163 212 OFFCURVE",
"239 64 OFFCURVE",
"349 -20 OFFCURVE",
"418 -20 QCURVE SMOOTH",
"487 -20 OFFCURVE",
"596 64 OFFCURVE",
"673 212 OFFCURVE",
"714 412 OFFCURVE",
"714 529 QCURVE SMOOTH",
"714 551 LINE SMOOTH",
"714 668 OFFCURVE",
"673 869 OFFCURVE",
"596 1017 OFFCURVE",
"486 1102 OFFCURVE",
"417 1102 QCURVE SMOOTH",
"349 1102 OFFCURVE",
"239 1017 OFFCURVE",
"163 869 OFFCURVE",
"122 668 OFFCURVE",
"122 551 QCURVE",
"122 551 LINE"
);
},
{
closed = 1;
nodes = (
"281 550 LINE SMOOTH",
"281 621 OFFCURVE",
"297 751 OFFCURVE",
"331 849 OFFCURVE",
"383 908 OFFCURVE",
"417 908 QCURVE SMOOTH",
"452 908 OFFCURVE",
"504 849 OFFCURVE",
"538 751 OFFCURVE",
"554 621 OFFCURVE",
"554 550 QCURVE SMOOTH",
"554 530 LINE SMOOTH",
"554 458 OFFCURVE",
"538 328 OFFCURVE",
"504 230 OFFCURVE",
"452 172 OFFCURVE",
"418 172 QCURVE SMOOTH",
"384 172 OFFCURVE",
"331 230 OFFCURVE",
"297 328 OFFCURVE",
"281 458 OFFCURVE",
"281 530 QCURVE",
"281 530 LINE"
);
},
{
closed = 1;
nodes = (
"903 -12 LINE",
"1107 -12 LINE",
"747 619 LINE",
"1059 1070 LINE",
"863 1070 LINE",
"610 714 LINE",
"656 493 LINE",
"620 493 LINE"
);
},
{
closed = 1;
nodes = (
"329 1702 LINE",
"329 1440 LINE",
"122 1440 LINE",
"122 1256 LINE",
"329 1256 LINE",
"329 999 LINE",
"515 999 LINE",
"515 1256 LINE",
"927 1256 LINE",
"927 1440 LINE",
"515 1440 LINE",
"515 1702 LINE",
"515 1702 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
15 1 2 1 16 1 3 2 2 74 7 1 6 0 6 114 4 1 1 1 0 89 5 1 0 0 63 75 0 2 2 3 91 0 3 3 69 3 76 0 0 0 31 0 31 17 21 41 37 17 17 8 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = t;
unicode = 0074;
changeCount = 27;
},
{
glyphname = u;
lastChange = "2019-10-18 12:35:53 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"999 0 LINE",
"1139 0 LINE",
"1139 1082 LINE",
"988 1082 LINE",
"988 306 LINE",
"967 228 OFFCURVE",
"883 136 OFFCURVE",
"813 136 QCURVE SMOOTH",
"782 136 OFFCURVE",
"732 164 OFFCURVE",
"698 233 OFFCURVE",
"681 349 OFFCURVE",
"681 437 QCURVE SMOOTH",
"681 1082 LINE",
"536 1082 LINE",
"536 439 LINE SMOOTH",
"536 318 OFFCURVE",
"568 145 OFFCURVE",
"660 33 OFFCURVE",
"744 -20 OFFCURVE",
"796 -20 QCURVE SMOOTH",
"860 -20 OFFCURVE",
"959 37 OFFCURVE",
"992 117 QCURVE",
"992 117 LINE"
);
},
{
closed = 1;
nodes = (
"684 270 LINE",
"681 1082 LINE",
"536 1082 LINE",
"536 306 LINE",
"517 228 OFFCURVE",
"437 136 OFFCURVE",
"375 136 QCURVE SMOOTH",
"345 136 OFFCURVE",
"299 164 OFFCURVE",
"267 233 OFFCURVE",
"252 349 OFFCURVE",
"252 437 QCURVE SMOOTH",
"252 535 LINE",
"125 535 LINE",
"125 439 LINE SMOOTH",
"125 319 OFFCURVE",
"157 145 OFFCURVE",
"232 33 OFFCURVE",
"310 -20 OFFCURVE",
"358 -20 QCURVE SMOOTH",
"418 -20 OFFCURVE",
"568 89 OFFCURVE",
"598 169 QCURVE",
"598 169 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
19 1 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
3 1 1 1 63 75 0 2 2 0 91 4 1 0 0 69 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 22 values pushed */
3 1 1 1 63 75 0 4 4 61 75 0 2 2 0 91 0 0 0 69 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
17 19 37 21 34 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = u;
unicode = 0075;
changeCount = 19;
},
{
glyphname = v;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"288 1082 LINE",
"98 1082 LINE",
"543 0 LINE",
"684 0 LINE",
"1125 1082 LINE",
"936 1082 LINE",
"633 266 LINE",
"615 199 LINE",
"598 266 LINE",
"598 266 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
1 1 1 0 1 74 2 1 0 0 63 75 0 1 1 61 1 76 17 17 19 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = v;
unicode = 0076;
},
{
glyphname = w;
lastChange = "2019-10-18 12:36:01 +0000";
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"999 0 LINE",
"1139 0 LINE",
"1139 1082 LINE",
"988 1082 LINE",
"988 306 LINE",
"967 228 OFFCURVE",
"883 136 OFFCURVE",
"813 136 QCURVE SMOOTH",
"782 136 OFFCURVE",
"732 164 OFFCURVE",
"698 233 OFFCURVE",
"681 349 OFFCURVE",
"681 437 QCURVE SMOOTH",
"681 1082 LINE",
"536 1082 LINE",
"536 439 LINE SMOOTH",
"536 318 OFFCURVE",
"568 145 OFFCURVE",
"660 33 OFFCURVE",
"744 -20 OFFCURVE",
"796 -20 QCURVE SMOOTH",
"860 -20 OFFCURVE",
"959 37 OFFCURVE",
"992 117 QCURVE",
"992 117 LINE"
);
},
{
closed = 1;
nodes = (
"684 270 LINE",
"681 1082 LINE",
"536 1082 LINE",
"536 306 LINE",
"517 228 OFFCURVE",
"437 136 OFFCURVE",
"375 136 QCURVE SMOOTH",
"345 136 OFFCURVE",
"299 164 OFFCURVE",
"267 233 OFFCURVE",
"252 349 OFFCURVE",
"252 437 QCURVE SMOOTH",
"252 535 LINE",
"125 535 LINE",
"125 439 LINE SMOOTH",
"125 319 OFFCURVE",
"157 145 OFFCURVE",
"232 33 OFFCURVE",
"310 -20 OFFCURVE",
"358 -20 QCURVE SMOOTH",
"418 -20 OFFCURVE",
"568 89 OFFCURVE",
"598 169 QCURVE",
"598 169 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
13 6 1 3 2 0 1 74 4 1 2 0 0 63 75 3 1 2 2 61 2 76 17 20 17 20 19 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = w;
unicode = 0077;
changeCount = 31;
},
{
glyphname = x;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"335 1082 LINE",
"121 1082 LINE",
"524 547 LINE",
"110 0 LINE",
"326 0 LINE",
"625 412 LINE",
"924 0 LINE",
"1138 0 LINE",
"724 547 LINE",
"1127 1082 LINE",
"910 1082 LINE",
"621 681 LINE",
"621 681 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
9 6 3 3 1 0 1 74 3 1 0 0 63 75 2 1 1 1 61 1 76 18 18 18 17 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = x;
unicode = 0078;
},
{
glyphname = y;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"275 1082 LINE",
"68 1082 LINE",
"534 51 LINE",
"460 -93 LINE SMOOTH",
"450 -113 OFFCURVE",
"415 -175 OFFCURVE",
"366 -233 OFFCURVE",
"303 -275 OFFCURVE",
"265 -275 QCURVE SMOOTH",
"258 -275 OFFCURVE",
"234 -274 OFFCURVE",
"208 -272 OFFCURVE",
"184 -270 OFFCURVE",
"177 -270 QCURVE",
"147 -421 LINE",
"156 -423 OFFCURVE",
"184 -429 OFFCURVE",
"216 -434 OFFCURVE",
"248 -437 OFFCURVE",
"261 -437 QCURVE SMOOTH",
"334 -437 OFFCURVE",
"446 -383 OFFCURVE",
"530 -303 OFFCURVE",
"589 -209 OFFCURVE",
"608 -167 QCURVE SMOOTH",
"1157 1082 LINE",
"950 1082 LINE",
"620 253 LINE",
"572 384 LINE",
"572 384 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
26 1 2 2 0 1 74 4 1 0 0 63 75 3 1 2 2 1 92 0 1 1 73 1 76 22 49 36 53 18 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = y;
unicode = 0079;
},
{
glyphname = z;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1049 951 LINE",
"1049 1082 LINE",
"169 1082 LINE",
"169 929 LINE",
"806 929 LINE",
"160 136 LINE",
"160 0 LINE",
"1085 0 LINE",
"1085 151 LINE",
"396 151 LINE",
"396 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
9 1 2 3 4 1 1 0 2 74 0 2 2 3 89 0 3 3 63 75 0 0 0 1 89 0 1 1 61 1 76 17 18 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = z;
unicode = 007A;
},
{
glyphname = braceleft;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"999 -251 LINE",
"937 -249 OFFCURVE",
"856 -185 OFFCURVE",
"807 -86 OFFCURVE",
"787 37 OFFCURVE",
"787 99 QCURVE SMOOTH",
"787 268 LINE SMOOTH",
"786 387 OFFCURVE",
"676 568 OFFCURVE",
"560 614 QCURVE",
"676 661 OFFCURVE",
"786 842 OFFCURVE",
"787 962 QCURVE SMOOTH",
"787 1132 LINE SMOOTH",
"787 1193 OFFCURVE",
"799 1317 OFFCURVE",
"842 1416 OFFCURVE",
"927 1480 OFFCURVE",
"999 1482 QCURVE",
"978 1597 LINE",
"909 1595 OFFCURVE",
"800 1555 OFFCURVE",
"716 1487 OFFCURVE",
"657 1397 OFFCURVE",
"619 1294 OFFCURVE",
"601 1185 OFFCURVE",
"601 1132 QCURVE SMOOTH",
"601 962 LINE SMOOTH",
"601 817 OFFCURVE",
"464 688 OFFCURVE",
"323 688 QCURVE",
"323 543 LINE",
"464 542 OFFCURVE",
"601 412 OFFCURVE",
"601 268 QCURVE SMOOTH",
"601 99 LINE SMOOTH",
"601 46 OFFCURVE",
"621 -63 OFFCURVE",
"662 -166 OFFCURVE",
"723 -256 OFFCURVE",
"807 -324 OFFCURVE",
"913 -364 OFFCURVE",
"978 -366 QCURVE",
"978 -366 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
33 1 1 2 1 74 0 3 0 4 2 3 4 99 0 2 0 1 5 2 1 99 0 5 0 0 5 87 0 5 5 0 91 0 0 5 0 79 42 41 17 25 17 25 16 6 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = braceleft;
unicode = 007B;
},
{
glyphname = bar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"689 1456 LINE",
"540 1456 LINE",
"540 -398 LINE",
"689 -398 LINE",
"689 -398 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 1 1 60 75 0 0 0 65 0 76 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = bar;
unicode = 007C;
},
{
glyphname = braceright;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"344 -366 LINE",
"442 -364 OFFCURVE",
"584 -278 OFFCURVE",
"677 -144 OFFCURVE",
"721 19 OFFCURVE",
"721 99 QCURVE SMOOTH",
"721 268 LINE SMOOTH",
"721 412 OFFCURVE",
"859 542 OFFCURVE",
"999 543 QCURVE",
"999 688 LINE",
"859 688 OFFCURVE",
"721 817 OFFCURVE",
"721 962 QCURVE SMOOTH",
"721 1132 LINE SMOOTH",
"721 1185 OFFCURVE",
"703 1294 OFFCURVE",
"665 1397 OFFCURVE",
"606 1487 OFFCURVE",
"522 1555 OFFCURVE",
"413 1595 OFFCURVE",
"344 1597 QCURVE",
"324 1482 LINE",
"396 1480 OFFCURVE",
"480 1416 OFFCURVE",
"523 1317 OFFCURVE",
"536 1193 OFFCURVE",
"536 1132 QCURVE SMOOTH",
"536 962 LINE SMOOTH",
"536 842 OFFCURVE",
"646 661 OFFCURVE",
"762 614 QCURVE",
"646 568 OFFCURVE",
"536 387 OFFCURVE",
"536 268 QCURVE SMOOTH",
"536 99 LINE SMOOTH",
"536 37 OFFCURVE",
"515 -86 OFFCURVE",
"466 -185 OFFCURVE",
"384 -249 OFFCURVE",
"323 -251 QCURVE",
"323 -251 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
9 1 4 3 1 74 0 2 0 1 3 2 1 99 0 3 0 4 0 3 4 99 0 0 5 5 0 87 0 0 0 5 91 0 5 0 5 79 40 39 32 31 30 29 20 19 18 17 16 6 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = braceright;
unicode = 007D;
},
{
glyphname = asciitilde;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1046 758 LINE",
"1046 720 OFFCURVE",
"1020 650 OFFCURVE",
"975 597 OFFCURVE",
"914 565 OFFCURVE",
"879 565 QCURVE SMOOTH",
"823 564 OFFCURVE",
"726 615 OFFCURVE",
"669 663 QCURVE SMOOTH",
"630 695 OFFCURVE",
"555 747 OFFCURVE",
"477 783 OFFCURVE",
"394 802 OFFCURVE",
"348 802 QCURVE SMOOTH",
"281 802 OFFCURVE",
"171 749 OFFCURVE",
"92 659 OFFCURVE",
"48 539 OFFCURVE",
"48 473 QCURVE",
"182 456 LINE",
"182 494 OFFCURVE",
"208 561 OFFCURVE",
"252 610 OFFCURVE",
"313 639 OFFCURVE",
"348 639 QCURVE SMOOTH",
"404 640 OFFCURVE",
"504 587 OFFCURVE",
"559 542 QCURVE SMOOTH",
"599 508 OFFCURVE",
"674 456 OFFCURVE",
"751 420 OFFCURVE",
"832 402 OFFCURVE",
"879 402 QCURVE SMOOTH",
"946 402 OFFCURVE",
"1056 458 OFFCURVE",
"1136 552 OFFCURVE",
"1180 674 OFFCURVE",
"1180 740 QCURVE",
"1180 740 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
37 0 2 1 2 19 18 2 0 3 2 74 0 2 0 1 3 2 1 99 0 3 0 0 3 87 0 3 3 0 91 0 0 3 0 79 38 41 38 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = asciitilde;
unicode = 007E;
},
{
glyphname = exclamdown;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"522 -372 LINE",
"707 -372 LINE",
"707 611 LINE",
"522 611 LINE",
"522 611 LINE"
);
},
{
closed = 1;
nodes = (
"728 1038 OFFCURVE",
"669 1103 OFFCURVE",
"613 1103 QCURVE SMOOTH",
"556 1103 OFFCURVE",
"498 1038 OFFCURVE",
"498 990 QCURVE SMOOTH",
"498 944 OFFCURVE",
"556 881 OFFCURVE",
"613 881 QCURVE SMOOTH",
"669 881 OFFCURVE",
"728 944 OFFCURVE",
"728 990 QCURVE",
"728 990 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 2 2 3 91 0 3 3 71 75 0 0 0 1 89 0 1 1 65 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
0 0 0 1 0 1 93 0 2 2 3 91 0 3 3 71 2 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
36 35 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = exclamdown;
unicode = 00A1;
},
{
glyphname = cent;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"552 130 OFFCURVE",
"435 199 OFFCURVE",
"364 310 OFFCURVE",
"333 449 OFFCURVE",
"333 520 QCURVE SMOOTH",
"333 562 LINE SMOOTH",
"333 632 OFFCURVE",
"364 770 OFFCURVE",
"436 881 OFFCURVE",
"553 950 OFFCURVE",
"639 950 QCURVE SMOOTH",
"695 950 OFFCURVE",
"792 912 OFFCURVE",
"862 846 OFFCURVE",
"903 759 OFFCURVE",
"904 710 QCURVE",
"1079 710 LINE",
"1079 783 OFFCURVE",
"1026 913 OFFCURVE",
"930 1015 OFFCURVE",
"798 1084 OFFCURVE",
"718 1096 QCURVE",
"718 1318 LINE",
"533 1318 LINE",
"533 1092 LINE",
"437 1074 OFFCURVE",
"292 975 OFFCURVE",
"196 832 OFFCURVE",
"147 657 OFFCURVE",
"147 562 QCURVE SMOOTH",
"147 520 LINE SMOOTH",
"147 425 OFFCURVE",
"196 249 OFFCURVE",
"292 107 OFFCURVE",
"437 8 OFFCURVE",
"533 -10 QCURVE",
"533 -245 LINE",
"718 -245 LINE",
"718 -13 LINE",
"791 -1 OFFCURVE",
"922 65 OFFCURVE",
"1020 160 OFFCURVE",
"1078 277 OFFCURVE",
"1079 341 QCURVE",
"904 341 LINE",
"903 296 OFFCURVE",
"858 219 OFFCURVE",
"784 162 OFFCURVE",
"689 130 OFFCURVE",
"639 130 QCURVE",
"639 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
28 25 2 5 3 14 11 2 2 0 2 74 0 4 5 1 5 4 1 112 0 1 0 5 1 0 110 0 3 0 5 4 3 5 99 6 1 0 2 2 0 87 6 1 0 0 2 89 0 2 0 2 77 1 0 40 38 34 33 27 26 13 12 6 5 0 49 1 49 7 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = cent;
unicode = 00A2;
},
{
glyphname = sterling;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"778 626 LINE",
"778 778 LINE",
"458 778 LINE",
"450 1039 LINE SMOOTH",
"450 1106 OFFCURVE",
"487 1213 OFFCURVE",
"551 1286 OFFCURVE",
"640 1325 OFFCURVE",
"691 1325 QCURVE SMOOTH",
"739 1325 OFFCURVE",
"826 1298 OFFCURVE",
"893 1241 OFFCURVE",
"932 1152 OFFCURVE",
"932 1089 QCURVE",
"1118 1089 LINE",
"1118 1176 OFFCURVE",
"1062 1318 OFFCURVE",
"957 1420 OFFCURVE",
"805 1476 OFFCURVE",
"709 1476 QCURVE SMOOTH",
"613 1476 OFFCURVE",
"449 1416 OFFCURVE",
"331 1303 OFFCURVE",
"264 1141 OFFCURVE",
"264 1039 QCURVE",
"273 778 LINE",
"113 778 LINE",
"113 626 LINE",
"278 626 LINE",
"286 400 LINE SMOOTH",
"286 368 OFFCURVE",
"278 287 OFFCURVE",
"256 214 OFFCURVE",
"219 158 OFFCURVE",
"192 151 QCURVE",
"117 151 LINE",
"117 0 LINE",
"1147 0 LINE",
"1148 151 LINE",
"410 151 LINE",
"442 199 OFFCURVE",
"471 331 OFFCURVE",
"471 400 QCURVE SMOOTH",
"463 626 LINE",
"463 626 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
0 6 7 4 7 6 4 112 8 1 4 10 9 2 3 0 4 3 97 0 7 7 5 91 0 5 5 68 75 2 1 0 0 1 89 0 1 1 61 1 76 0 0 0 43 0 43 21 36 20 37 17 22 17 17 20 11 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = sterling;
unicode = 00A3;
},
{
glyphname = currency;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1038 -27 LINE",
"1170 109 LINE",
"1054 228 LINE",
"1090 290 OFFCURVE",
"1130 435 OFFCURVE",
"1130 515 QCURVE SMOOTH",
"1130 600 OFFCURVE",
"1086 752 OFFCURVE",
"1046 816 QCURVE",
"1170 944 LINE",
"1038 1080 LINE",
"918 955 LINE",
"858 1000 OFFCURVE",
"714 1049 OFFCURVE",
"634 1049 QCURVE SMOOTH",
"554 1049 OFFCURVE",
"411 1001 OFFCURVE",
"351 957 QCURVE",
"234 1079 LINE",
"103 944 LINE",
"223 820 LINE",
"181 755 OFFCURVE",
"137 601 OFFCURVE",
"137 515 QCURVE SMOOTH",
"137 434 OFFCURVE",
"177 287 OFFCURVE",
"215 224 QCURVE",
"103 109 LINE",
"234 -26 LINE",
"338 82 LINE",
"400 34 OFFCURVE",
"549 -20 OFFCURVE",
"634 -20 QCURVE SMOOTH",
"719 -20 OFFCURVE",
"869 34 OFFCURVE",
"931 84 QCURVE",
"931 84 LINE"
);
},
{
closed = 1;
nodes = (
"309 589 OFFCURVE",
"359 721 OFFCURVE",
"446 820 OFFCURVE",
"565 878 OFFCURVE",
"634 878 QCURVE SMOOTH",
"703 878 OFFCURVE",
"821 820 OFFCURVE",
"908 721 OFFCURVE",
"957 589 OFFCURVE",
"957 515 QCURVE SMOOTH",
"957 441 OFFCURVE",
"908 309 OFFCURVE",
"821 210 OFFCURVE",
"703 151 OFFCURVE",
"634 151 QCURVE SMOOTH",
"565 151 OFFCURVE",
"446 210 OFFCURVE",
"359 309 OFFCURVE",
"309 441 OFFCURVE",
"309 515 QCURVE",
"309 515 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
26 24 18 16 4 3 1 33 27 15 9 4 2 3 34 8 6 3 0 2 3 74 25 17 2 1 72 35 7 2 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 3 3 1 91 0 1 1 63 75 0 2 2 0 91 0 0 0 69 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 19 values pushed */
0 1 0 3 2 1 3 99 0 2 2 0 91 0 0 0 69 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
52 50 42 40 22 20 34 4 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = currency;
unicode = 00A4;
},
{
glyphname = yen;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"245 1456 LINE",
"33 1456 LINE",
"454 736 LINE",
"138 736 LINE",
"138 615 LINE",
"518 615 LINE",
"518 446 LINE",
"138 446 LINE",
"138 326 LINE",
"518 326 LINE",
"518 0 LINE",
"703 0 LINE",
"703 326 LINE",
"1092 326 LINE",
"1092 446 LINE",
"703 446 LINE",
"703 613 LINE",
"704 615 LINE",
"1092 615 LINE",
"1092 736 LINE",
"774 736 LINE",
"1195 1456 LINE",
"983 1456 LINE",
"614 779 LINE",
"614 779 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
9 1 1 8 1 2 3 1 2 98 7 1 3 6 1 4 5 3 4 97 10 1 0 0 60 75 0 5 5 61 5 76 23 22 21 20 17 17 17 17 17 18 17 17 17 11 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = yen;
unicode = 00A5;
},
{
glyphname = brokenbar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"696 -270 LINE",
"696 521 LINE",
"511 521 LINE",
"511 -270 LINE",
"511 -270 LINE"
);
},
{
closed = 1;
nodes = (
"696 1456 LINE",
"511 1456 LINE",
"511 698 LINE",
"696 698 LINE",
"696 698 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 33 values pushed */
0 0 4 1 1 0 1 93 0 2 2 3 89 0 3 3 60 2 76 0 0 7 6 5 4 0 3 0 3 17 5 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = brokenbar;
unicode = 00A6;
},
{
glyphname = section;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1140 525 OFFCURVE",
"1075 658 OFFCURVE",
"953 754 OFFCURVE",
"780 824 OFFCURVE",
"672 854 QCURVE SMOOTH",
"572 882 OFFCURVE",
"438 931 OFFCURVE",
"357 988 OFFCURVE",
"323 1060 OFFCURVE",
"323 1112 QCURVE SMOOTH",
"323 1157 OFFCURVE",
"361 1235 OFFCURVE",
"438 1292 OFFCURVE",
"551 1325 OFFCURVE",
"626 1325 QCURVE SMOOTH",
"699 1325 OFFCURVE",
"814 1281 OFFCURVE",
"892 1206 OFFCURVE",
"933 1103 OFFCURVE",
"933 1045 QCURVE",
"1118 1045 LINE",
"1118 1149 OFFCURVE",
"1049 1310 OFFCURVE",
"922 1419 OFFCURVE",
"740 1476 OFFCURVE",
"626 1476 QCURVE SMOOTH",
"517 1476 OFFCURVE",
"337 1425 OFFCURVE",
"209 1329 OFFCURVE",
"138 1194 OFFCURVE",
"138 1110 QCURVE SMOOTH",
"138 1010 OFFCURVE",
"209 874 OFFCURVE",
"275 825 QCURVE",
"189 784 OFFCURVE",
"93 645 OFFCURVE",
"93 551 QCURVE SMOOTH",
"93 456 OFFCURVE",
"159 322 OFFCURVE",
"281 224 OFFCURVE",
"454 155 OFFCURVE",
"560 126 QCURVE SMOOTH",
"656 97 OFFCURVE",
"789 45 OFFCURVE",
"873 -12 OFFCURVE",
"911 -82 OFFCURVE",
"911 -130 QCURVE SMOOTH",
"911 -177 OFFCURVE",
"869 -255 OFFCURVE",
"790 -311 OFFCURVE",
"678 -343 OFFCURVE",
"608 -343 QCURVE SMOOTH",
"548 -343 OFFCURVE",
"428 -314 OFFCURVE",
"332 -247 OFFCURVE",
"272 -140 OFFCURVE",
"272 -62 QCURVE",
"87 -64 LINE",
"87 -184 OFFCURVE",
"177 -349 OFFCURVE",
"323 -450 OFFCURVE",
"510 -495 OFFCURVE",
"608 -495 QCURVE SMOOTH",
"717 -495 OFFCURVE",
"896 -446 OFFCURVE",
"1025 -352 OFFCURVE",
"1096 -216 OFFCURVE",
"1096 -128 QCURVE SMOOTH",
"1096 -28 OFFCURVE",
"1023 108 OFFCURVE",
"954 156 QCURVE",
"1042 196 OFFCURVE",
"1140 334 OFFCURVE",
"1140 431 QCURVE",
"1140 431 LINE"
);
},
{
closed = 1;
nodes = (
"694 662 OFFCURVE",
"830 609 OFFCURVE",
"916 549 OFFCURVE",
"956 476 OFFCURVE",
"956 428 QCURVE SMOOTH",
"955 357 OFFCURVE",
"869 258 OFFCURVE",
"793 238 QCURVE",
"756 252 OFFCURVE",
"676 276 OFFCURVE",
"632 289 QCURVE SMOOTH",
"532 317 OFFCURVE",
"396 367 OFFCURVE",
"314 426 OFFCURVE",
"278 500 OFFCURVE",
"278 553 QCURVE SMOOTH",
"278 624 OFFCURVE",
"357 724 OFFCURVE",
"435 742 QCURVE",
"472 728 OFFCURVE",
"553 703 OFFCURVE",
"598 691 QCURVE",
"598 691 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
88 77 40 3 4 1 4 1 74 0 4 5 1 5 4 1 112 0 1 2 5 1 2 110 0 2 0 0 2 0 95 0 5 5 3 91 0 3 3 68 5 76 60 58 54 53 49 47 36 20 42 6 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = section;
unicode = 00A7;
},
{
glyphname = dieresis;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"287 1326 OFFCURVE",
"342 1266 OFFCURVE",
"396 1266 QCURVE SMOOTH",
"450 1266 OFFCURVE",
"506 1326 OFFCURVE",
"506 1371 QCURVE SMOOTH",
"506 1416 OFFCURVE",
"450 1477 OFFCURVE",
"396 1477 QCURVE SMOOTH",
"342 1477 OFFCURVE",
"287 1416 OFFCURVE",
"287 1371 QCURVE",
"287 1371 LINE"
);
},
{
closed = 1;
nodes = (
"717 1325 OFFCURVE",
"772 1264 OFFCURVE",
"826 1264 QCURVE SMOOTH",
"880 1264 OFFCURVE",
"936 1325 OFFCURVE",
"936 1369 QCURVE SMOOTH",
"936 1414 OFFCURVE",
"880 1476 OFFCURVE",
"826 1476 QCURVE SMOOTH",
"772 1476 OFFCURVE",
"717 1414 OFFCURVE",
"717 1369 QCURVE",
"717 1369 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
3 1 1 1 0 91 2 1 0 0 68 1 76 36 36 36 34 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dieresis;
unicode = 00A8;
},
{
glyphname = copyright;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"752 443 LINE",
"751 371 OFFCURVE",
"685 305 OFFCURVE",
"613 305 QCURVE SMOOTH",
"575 305 OFFCURVE",
"518 335 OFFCURVE",
"480 387 OFFCURVE",
"462 457 OFFCURVE",
"462 498 QCURVE SMOOTH",
"462 586 LINE SMOOTH",
"462 626 OFFCURVE",
"480 697 OFFCURVE",
"518 748 OFFCURVE",
"575 778 OFFCURVE",
"613 778 QCURVE SMOOTH",
"685 778 OFFCURVE",
"752 712 OFFCURVE",
"753 641 QCURVE",
"863 641 LINE",
"863 756 OFFCURVE",
"731 876 OFFCURVE",
"613 876 QCURVE SMOOTH",
"551 876 OFFCURVE",
"455 832 OFFCURVE",
"389 754 OFFCURVE",
"353 647 OFFCURVE",
"353 585 QCURVE SMOOTH",
"353 498 LINE SMOOTH",
"353 435 OFFCURVE",
"389 329 OFFCURVE",
"455 252 OFFCURVE",
"551 208 OFFCURVE",
"613 208 QCURVE SMOOTH",
"731 208 OFFCURVE",
"862 327 OFFCURVE",
"862 443 QCURVE",
"862 443 LINE"
);
},
{
closed = 1;
nodes = (
"177 639 OFFCURVE",
"245 810 OFFCURVE",
"365 938 OFFCURVE",
"528 1011 OFFCURVE",
"623 1011 QCURVE SMOOTH",
"717 1011 OFFCURVE",
"880 938 OFFCURVE",
"1000 810 OFFCURVE",
"1068 639 OFFCURVE",
"1068 542 QCURVE SMOOTH",
"1068 444 OFFCURVE",
"1000 272 OFFCURVE",
"880 143 OFFCURVE",
"717 68 OFFCURVE",
"623 68 QCURVE SMOOTH",
"528 68 OFFCURVE",
"365 142 OFFCURVE",
"245 271 OFFCURVE",
"177 444 OFFCURVE",
"177 542 QCURVE",
"177 542 LINE"
);
},
{
closed = 1;
nodes = (
"90 425 OFFCURVE",
"172 220 OFFCURVE",
"315 67 OFFCURVE",
"510 -21 OFFCURVE",
"623 -21 QCURVE SMOOTH",
"736 -21 OFFCURVE",
"930 67 OFFCURVE",
"1073 220 OFFCURVE",
"1155 425 OFFCURVE",
"1155 542 QCURVE SMOOTH",
"1155 659 OFFCURVE",
"1073 863 OFFCURVE",
"930 1014 OFFCURVE",
"736 1102 OFFCURVE",
"623 1102 QCURVE SMOOTH",
"548 1102 OFFCURVE",
"410 1062 OFFCURVE",
"292 990 OFFCURVE",
"195 888 OFFCURVE",
"127 763 OFFCURVE",
"90 620 OFFCURVE",
"90 542 QCURVE",
"90 542 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
0 2 3 5 3 2 5 112 10 1 5 4 3 5 4 110 0 1 0 3 2 1 3 99 0 4 0 0 6 4 0 99 0 7 7 8 91 0 8 8 71 75 0 6 6 9 91 0 9 9 69 9 76 0 0 74 72 64 62 52 50 42 40 0 35 0 35 41 34 18 41 34 11 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = copyright;
unicode = 00A9;
},
{
glyphname = ordfeminine;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"945 705 LINE",
"931 750 OFFCURVE",
"919 838 OFFCURVE",
"919 886 QCURVE SMOOTH",
"919 1200 LINE SMOOTH",
"919 1268 OFFCURVE",
"877 1372 OFFCURVE",
"802 1441 OFFCURVE",
"695 1476 OFFCURVE",
"630 1476 QCURVE SMOOTH",
"561 1476 OFFCURVE",
"447 1442 OFFCURVE",
"366 1380 OFFCURVE",
"321 1294 OFFCURVE",
"320 1243 QCURVE",
"481 1231 LINE",
"482 1283 OFFCURVE",
"563 1336 OFFCURVE",
"630 1336 QCURVE SMOOTH",
"693 1336 OFFCURVE",
"755 1266 OFFCURVE",
"756 1201 QCURVE SMOOTH",
"756 1149 LINE",
"615 1149 LINE SMOOTH",
"457 1149 OFFCURVE",
"284 1030 OFFCURVE",
"284 918 QCURVE SMOOTH",
"284 813 OFFCURVE",
"415 691 OFFCURVE",
"533 691 QCURVE SMOOTH",
"617 692 OFFCURVE",
"729 759 OFFCURVE",
"759 802 QCURVE",
"765 749 OFFCURVE",
"780 705 QCURVE",
"780 705 LINE"
);
},
{
closed = 1;
nodes = (
"510 828 OFFCURVE",
"446 877 OFFCURVE",
"446 922 QCURVE SMOOTH",
"446 971 OFFCURVE",
"537 1037 OFFCURVE",
"616 1037 QCURVE SMOOTH",
"756 1037 LINE",
"756 928 LINE",
"748 910 OFFCURVE",
"709 874 OFFCURVE",
"658 845 OFFCURVE",
"599 828 OFFCURVE",
"572 828 QCURVE",
"572 828 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
35 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 15 values pushed */
20 19 2 1 2 40 1 5 6 2 1 0 5 3 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 15 values pushed */
20 19 2 1 2 40 1 5 6 2 1 4 5 3 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
8 1 5 7 4 2 0 5 0 95 0 2 2 3 91 0 3 3 68 75 0 6 6 1 91 0 1 1 71 6 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
35 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 0 6 5 1 6 99 8 1 5 7 4 2 0 5 0 95 0 2 2 3 91 0 3 3 68 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
7 1 4 5 0 5 4 0 112 0 1 0 6 5 1 6 99 8 1 5 0 0 5 0 95 0 2 2 3 91 0 3 3 68 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 21 values pushed */
36 35 0 0 43 41 35 47 36 47 0 34 0 34 39 35 36 36 9 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ordfeminine;
unicode = 00AA;
},
{
glyphname = guillemotleft;
layers = (
{
components = (
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, -184, -35}";
},
{
name = guilsinglleft;
transform = "{1, 0, 0, 1, 151, -35}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = guillemotleft;
unicode = 00AB;
},
{
glyphname = logicalnot;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1019 800 LINE",
"189 800 LINE",
"189 639 LINE",
"834 639 LINE",
"834 375 LINE",
"1019 375 LINE",
"1019 375 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 0 1 1 0 103 0 2 1 1 2 85 0 2 2 1 89 0 1 2 1 77 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 0 1 0 115 0 2 1 1 2 85 0 2 2 1 89 0 1 2 1 77 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 6 values pushed */
17 17 16 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = logicalnot;
unicode = 00AC;
},
{
glyphname = registered;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"87 423 OFFCURVE",
"169 218 OFFCURVE",
"312 67 OFFCURVE",
"507 -21 OFFCURVE",
"620 -21 QCURVE SMOOTH",
"733 -21 OFFCURVE",
"927 67 OFFCURVE",
"1070 218 OFFCURVE",
"1152 423 OFFCURVE",
"1152 540 QCURVE SMOOTH",
"1152 657 OFFCURVE",
"1070 862 OFFCURVE",
"927 1014 OFFCURVE",
"733 1101 OFFCURVE",
"620 1101 QCURVE SMOOTH",
"507 1101 OFFCURVE",
"312 1014 OFFCURVE",
"169 862 OFFCURVE",
"87 657 OFFCURVE",
"87 540 QCURVE",
"87 540 LINE"
);
},
{
closed = 1;
nodes = (
"174 638 OFFCURVE",
"242 810 OFFCURVE",
"362 937 OFFCURVE",
"525 1010 OFFCURVE",
"620 1010 QCURVE SMOOTH",
"714 1010 OFFCURVE",
"877 937 OFFCURVE",
"997 810 OFFCURVE",
"1065 638 OFFCURVE",
"1065 540 QCURVE SMOOTH",
"1065 442 OFFCURVE",
"997 271 OFFCURVE",
"877 143 OFFCURVE",
"714 69 OFFCURVE",
"620 69 QCURVE SMOOTH",
"525 69 OFFCURVE",
"362 143 OFFCURVE",
"242 271 OFFCURVE",
"174 442 OFFCURVE",
"174 540 QCURVE",
"174 540 LINE"
);
},
{
closed = 1;
nodes = (
"633 485 LINE",
"753 232 LINE",
"863 232 LINE",
"716 519 LINE",
"782 541 OFFCURVE",
"852 619 OFFCURVE",
"852 675 QCURVE SMOOTH",
"852 723 OFFCURVE",
"818 795 OFFCURVE",
"755 843 OFFCURVE",
"667 867 OFFCURVE",
"612 867 QCURVE SMOOTH",
"401 867 LINE",
"401 232 LINE",
"508 232 LINE",
"508 485 LINE",
"508 485 LINE"
);
},
{
closed = 1;
nodes = (
"508 770 LINE",
"612 770 LINE SMOOTH",
"685 770 OFFCURVE",
"745 726 OFFCURVE",
"745 671 QCURVE SMOOTH",
"745 629 OFFCURVE",
"675 583 OFFCURVE",
"627 582 QCURVE SMOOTH",
"508 582 LINE",
"508 582 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 73 values pushed */
52 1 7 8 1 74 6 1 4 7 2 7 4 2 112 0 5 0 9 8 5 9 99 0 8 10 1 7 4 8 7 97 0 3 3 0 91 0 0 0 71 75 0 2 2 1 91 0 1 1 69 1 76 40 40 64 62 58 56 40 55 40 55 24 33 21 40 40 40 36 11 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = registered;
unicode = 00AE;
},
{
glyphname = macron;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"971 1456 LINE",
"257 1456 LINE",
"257 1313 LINE",
"971 1313 LINE",
"971 1313 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 0 0 1 89 0 1 1 60 0 76 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = macron;
unicode = "00AF,02C9";
},
{
glyphname = degree;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"361 1162 OFFCURVE",
"402 1069 OFFCURVE",
"471 1000 OFFCURVE",
"564 960 OFFCURVE",
"616 960 QCURVE SMOOTH",
"667 960 OFFCURVE",
"758 1000 OFFCURVE",
"826 1069 OFFCURVE",
"866 1163 OFFCURVE",
"866 1216 QCURVE SMOOTH",
"866 1269 OFFCURVE",
"826 1364 OFFCURVE",
"758 1435 OFFCURVE",
"667 1476 OFFCURVE",
"616 1476 QCURVE SMOOTH",
"564 1476 OFFCURVE",
"471 1435 OFFCURVE",
"402 1364 OFFCURVE",
"361 1269 OFFCURVE",
"361 1216 QCURVE",
"361 1216 LINE"
);
},
{
closed = 1;
nodes = (
"485 1244 OFFCURVE",
"506 1293 OFFCURVE",
"541 1329 OFFCURVE",
"589 1349 OFFCURVE",
"616 1349 QCURVE SMOOTH",
"643 1349 OFFCURVE",
"689 1329 OFFCURVE",
"724 1293 OFFCURVE",
"743 1244 OFFCURVE",
"743 1216 QCURVE SMOOTH",
"743 1189 OFFCURVE",
"724 1142 OFFCURVE",
"689 1107 OFFCURVE",
"643 1088 OFFCURVE",
"616 1088 QCURVE SMOOTH",
"589 1088 OFFCURVE",
"541 1107 OFFCURVE",
"506 1142 OFFCURVE",
"485 1189 OFFCURVE",
"485 1216 QCURVE",
"485 1216 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 91 0 0 0 68 75 0 1 1 2 91 0 2 2 63 1 76 40 40 40 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = degree;
unicode = 00B0;
},
{
glyphname = plusminus;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"709 1267 LINE",
"541 1267 LINE",
"541 855 LINE",
"156 855 LINE",
"156 703 LINE",
"541 703 LINE",
"541 289 LINE",
"709 289 LINE",
"709 703 LINE",
"1072 703 LINE",
"1072 855 LINE",
"709 855 LINE",
"709 855 LINE"
);
},
{
closed = 1;
nodes = (
"1030 152 LINE",
"195 152 LINE",
"195 1 LINE",
"1030 1 LINE",
"1030 1 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
4 1 0 3 1 1 2 0 1 97 0 5 0 2 7 5 2 97 0 7 7 6 89 0 6 6 61 6 76 17 17 17 17 17 17 17 16 8 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = plusminus;
unicode = 00B1;
},
{
glyphname = twosuperior;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"934 795 LINE",
"535 795 LINE",
"710 940 LINE",
"753 979 OFFCURVE",
"824 1050 OFFCURVE",
"875 1119 OFFCURVE",
"902 1190 OFFCURVE",
"902 1230 QCURVE SMOOTH",
"902 1285 OFFCURVE",
"862 1372 OFFCURVE",
"788 1434 OFFCURVE",
"682 1467 OFFCURVE",
"616 1467 QCURVE SMOOTH",
"547 1467 OFFCURVE",
"436 1426 OFFCURVE",
"358 1355 OFFCURVE",
"316 1259 OFFCURVE",
"316 1205 QCURVE",
"474 1205 LINE",
"475 1263 OFFCURVE",
"546 1338 OFFCURVE",
"620 1338 QCURVE SMOOTH",
"678 1338 OFFCURVE",
"744 1277 OFFCURVE",
"744 1228 QCURVE SMOOTH",
"744 1193 OFFCURVE",
"688 1106 OFFCURVE",
"623 1046 QCURVE SMOOTH",
"335 775 LINE",
"335 667 LINE",
"934 667 LINE",
"934 667 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
2 1 0 4 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 2 1 4 1 2 4 112 0 4 0 0 4 0 93 0 1 1 3 91 0 3 3 60 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 2 1 4 1 2 4 112 0 4 0 0 4 0 93 0 1 1 3 91 0 3 3 68 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 2 1 4 1 2 4 112 0 4 0 0 4 0 93 0 1 1 3 91 0 3 3 60 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 2 1 4 1 2 4 112 0 4 0 0 4 0 93 0 1 1 3 91 0 3 3 68 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
26 36 18 39 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = twosuperior;
unicode = 00B2;
},
{
glyphname = threesuperior;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"526 1009 LINE",
"610 1009 LINE SMOOTH",
"682 1009 OFFCURVE",
"769 957 OFFCURVE",
"769 894 QCURVE SMOOTH",
"770 843 OFFCURVE",
"694 783 OFFCURVE",
"626 783 QCURVE SMOOTH",
"561 783 OFFCURVE",
"482 842 OFFCURVE",
"481 888 QCURVE",
"323 888 LINE",
"323 827 OFFCURVE",
"374 739 OFFCURVE",
"457 682 OFFCURVE",
"564 655 OFFCURVE",
"621 655 QCURVE SMOOTH",
"685 655 OFFCURVE",
"797 686 OFFCURVE",
"880 744 OFFCURVE",
"927 830 OFFCURVE",
"927 886 QCURVE SMOOTH",
"927 1028 OFFCURVE",
"777 1070 QCURVE",
"842 1095 OFFCURVE",
"913 1185 OFFCURVE",
"913 1241 QCURVE SMOOTH",
"913 1296 OFFCURVE",
"870 1380 OFFCURVE",
"792 1437 OFFCURVE",
"684 1466 OFFCURVE",
"620 1466 QCURVE SMOOTH",
"560 1466 OFFCURVE",
"456 1435 OFFCURVE",
"379 1378 OFFCURVE",
"334 1296 OFFCURVE",
"334 1245 QCURVE",
"491 1245 LINE",
"492 1289 OFFCURVE",
"566 1337 OFFCURVE",
"623 1337 QCURVE SMOOTH",
"690 1337 OFFCURVE",
"756 1279 OFFCURVE",
"756 1234 QCURVE SMOOTH",
"756 1183 OFFCURVE",
"680 1125 OFFCURVE",
"610 1125 QCURVE SMOOTH",
"526 1125 LINE",
"526 1125 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
24 1 7 0 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 44 values pushed */
0 2 1 0 1 2 0 112 0 5 7 6 7 5 6 112 0 6 0 4 6 4 95 0 1 1 3 91 0 3 3 60 75 0 7 7 0 91 0 0 0 71 7 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 42 values pushed */
0 2 1 0 1 2 0 112 0 5 7 6 7 5 6 112 0 0 0 7 5 0 7 99 0 6 0 4 6 4 95 0 1 1 3 91 0 3 3 60 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
36 34 20 45 36 18 36 32 8 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = threesuperior;
unicode = 00B3;
},
{
glyphname = acute;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"410 1215 LINE",
"550 1215 LINE",
"818 1481 LINE",
"594 1481 LINE",
"594 1481 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 60 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 62 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 60 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
16 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 62 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 60 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 62 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 60 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 62 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 60 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
42 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
0 1 0 1 115 0 0 0 62 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 9 values pushed */
0 0 1 0 114 0 1 1 105 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 5 values pushed */
17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = acute;
unicode = 00B4;
},
{
glyphname = mu;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"188 1082 LINE",
"188 -416 LINE",
"373 -416 LINE",
"373 53 LINE",
"455 -20 OFFCURVE",
"601 -20 QCURVE SMOOTH",
"691 -20 OFFCURVE",
"820 51 OFFCURVE",
"864 116 QCURVE",
"873 0 LINE",
"1040 0 LINE",
"1040 1082 LINE",
"854 1082 LINE",
"854 283 LINE",
"825 212 OFFCURVE",
"700 130 OFFCURVE",
"593 130 QCURVE SMOOTH",
"545 130 OFFCURVE",
"464 158 OFFCURVE",
"405 232 OFFCURVE",
"373 360 OFFCURVE",
"373 460 QCURVE SMOOTH",
"373 1082 LINE",
"373 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
9 1 0 1 19 14 2 2 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
6 5 2 1 1 63 75 0 0 0 2 91 3 1 2 2 61 75 0 4 4 65 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
6 5 2 1 1 63 75 0 2 2 61 75 0 0 0 3 91 0 3 3 69 75 0 4 4 65 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 22 0 22 18 35 17 19 37 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = mu;
unicode = 00B5;
},
{
glyphname = paragraph;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"976 0 LINE",
"976 1456 LINE",
"703 1456 LINE SMOOTH",
"585 1456 OFFCURVE",
"402 1385 OFFCURVE",
"276 1260 OFFCURVE",
"211 1089 OFFCURVE",
"211 988 QCURVE SMOOTH",
"211 886 OFFCURVE",
"276 714 OFFCURVE",
"402 590 OFFCURVE",
"585 520 OFFCURVE",
"703 520 QCURVE SMOOTH",
"790 520 LINE",
"790 0 LINE",
"790 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 0 0 1 91 0 1 1 60 75 3 1 2 2 61 2 76 0 0 0 14 0 14 40 33 4 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = paragraph;
unicode = 00B6;
},
{
glyphname = periodcentered;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"504 682 OFFCURVE",
"562 619 OFFCURVE",
"619 619 QCURVE SMOOTH",
"675 619 OFFCURVE",
"734 682 OFFCURVE",
"734 729 QCURVE SMOOTH",
"734 777 OFFCURVE",
"675 841 OFFCURVE",
"619 841 QCURVE SMOOTH",
"562 841 OFFCURVE",
"504 777 OFFCURVE",
"504 729 QCURVE",
"504 729 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 91 0 1 0 1 79 36 34 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = periodcentered;
unicode = 00B7;
},
{
glyphname = cedilla;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"497 0 LINE",
"466 -134 LINE",
"506 -137 OFFCURVE",
"566 -149 OFFCURVE",
"607 -170 OFFCURVE",
"627 -204 OFFCURVE",
"627 -229 QCURVE SMOOTH",
"627 -256 OFFCURVE",
"600 -293 OFFCURVE",
"555 -317 OFFCURVE",
"495 -328 OFFCURVE",
"461 -328 QCURVE",
"468 -435 LINE",
"613 -434 OFFCURVE",
"771 -322 OFFCURVE",
"771 -225 QCURVE SMOOTH",
"771 -182 OFFCURVE",
"745 -121 OFFCURVE",
"702 -81 OFFCURVE",
"647 -57 OFFCURVE",
"618 -52 QCURVE",
"630 0 LINE",
"630 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
20 1 2 1 2 1 74 3 1 2 1 2 114 0 1 1 0 92 0 0 0 73 0 76 0 0 0 21 0 21 17 24 4 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = cedilla;
unicode = 00B8;
},
{
glyphname = onesuperior;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"758 1454 LINE",
"740 1454 LINE",
"386 1337 LINE",
"386 1209 LINE",
"601 1266 LINE",
"601 665 LINE",
"758 665 LINE",
"758 665 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
5 4 3 2 4 0 72 0 0 0 105 16 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = onesuperior;
unicode = 00B9;
},
{
glyphname = ordmasculine;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"272 1024 LINE SMOOTH",
"272 952 OFFCURVE",
"320 829 OFFCURVE",
"409 740 OFFCURVE",
"536 690 OFFCURVE",
"616 690 QCURVE SMOOTH",
"695 690 OFFCURVE",
"821 740 OFFCURVE",
"909 829 OFFCURVE",
"956 952 OFFCURVE",
"956 1024 QCURVE SMOOTH",
"956 1141 LINE SMOOTH",
"956 1214 OFFCURVE",
"909 1337 OFFCURVE",
"820 1426 OFFCURVE",
"693 1476 OFFCURVE",
"614 1476 QCURVE SMOOTH",
"535 1476 OFFCURVE",
"409 1426 OFFCURVE",
"320 1337 OFFCURVE",
"272 1214 OFFCURVE",
"272 1141 QCURVE",
"272 1141 LINE"
);
},
{
closed = 1;
nodes = (
"435 1141 LINE SMOOTH",
"435 1182 OFFCURVE",
"457 1253 OFFCURVE",
"502 1306 OFFCURVE",
"569 1336 OFFCURVE",
"614 1336 QCURVE SMOOTH",
"659 1336 OFFCURVE",
"726 1306 OFFCURVE",
"771 1253 OFFCURVE",
"794 1182 OFFCURVE",
"794 1141 QCURVE SMOOTH",
"794 1024 LINE SMOOTH",
"794 982 OFFCURVE",
"771 911 OFFCURVE",
"727 859 OFFCURVE",
"660 829 OFFCURVE",
"616 829 QCURVE SMOOTH",
"570 829 OFFCURVE",
"502 859 OFFCURVE",
"457 911 OFFCURVE",
"435 982 OFFCURVE",
"435 1024 QCURVE",
"435 1024 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
0 2 0 1 2 1 95 0 3 3 0 91 0 0 0 68 3 76 41 41 41 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ordmasculine;
unicode = 00BA;
},
{
glyphname = guillemotright;
layers = (
{
components = (
{
name = guilsinglright;
transform = "{1, 0, 0, 1, -155, 0}";
},
{
name = guilsinglright;
transform = "{1, 0, 0, 1, 190, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = guillemotright;
unicode = 00BB;
},
{
glyphname = onequarter;
layers = (
{
components = (
{
name = one.sup;
transform = "{0, 0, 0, 0, -264, 751}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, -10, 8}";
},
{
name = four.sup;
transform = "{0, 0, 0, 0, 322, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = onequarter;
unicode = 00BC;
},
{
glyphname = onehalf;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, -70, 8}";
},
{
name = one.sup;
transform = "{0, 0, 0, 0, -276, 747}";
},
{
name = two.sup;
transform = "{0, 0, 0, 0, 335, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = onehalf;
unicode = 00BD;
},
{
glyphname = threequarters;
layers = (
{
components = (
{
name = fraction;
transform = "{1, 0, 0, 1, 57, 7}";
},
{
name = four.sup;
transform = "{0, 0, 0, 0, 355, 0}";
},
{
name = three.sup;
transform = "{0, 0, 0, 0, -243, 744}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = threequarters;
unicode = 00BE;
},
{
glyphname = questiondown;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"539 673 LINE",
"539 634 OFFCURVE",
"536 574 OFFCURVE",
"521 521 OFFCURVE",
"489 471 OFFCURVE",
"460 442 QCURVE SMOOTH",
"415 399 OFFCURVE",
"324 300 OFFCURVE",
"251 187 OFFCURVE",
"204 59 OFFCURVE",
"204 -13 QCURVE SMOOTH",
"204 -103 OFFCURVE",
"259 -243 OFFCURVE",
"364 -341 OFFCURVE",
"517 -392 OFFCURVE",
"614 -392 QCURVE SMOOTH",
"701 -392 OFFCURVE",
"850 -343 OFFCURVE",
"960 -250 OFFCURVE",
"1023 -116 OFFCURVE",
"1024 -32 QCURVE",
"839 -32 LINE",
"839 -84 OFFCURVE",
"801 -159 OFFCURVE",
"738 -208 OFFCURVE",
"657 -231 OFFCURVE",
"614 -231 QCURVE SMOOTH",
"505 -231 OFFCURVE",
"389 -116 OFFCURVE",
"389 -7 QCURVE SMOOTH",
"389 44 OFFCURVE",
"424 134 OFFCURVE",
"479 216 OFFCURVE",
"545 291 OFFCURVE",
"576 326 QCURVE",
"625 371 OFFCURVE",
"684 438 OFFCURVE",
"714 510 OFFCURVE",
"723 602 OFFCURVE",
"724 673 QCURVE",
"724 673 LINE"
);
},
{
closed = 1;
nodes = (
"509 942 OFFCURVE",
"567 879 OFFCURVE",
"624 879 QCURVE SMOOTH",
"681 879 OFFCURVE",
"739 942 OFFCURVE",
"739 988 QCURVE SMOOTH",
"739 1036 OFFCURVE",
"681 1101 OFFCURVE",
"624 1101 QCURVE SMOOTH",
"567 1101 OFFCURVE",
"509 1036 OFFCURVE",
"509 988 QCURVE",
"509 988 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
42 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
6 1 3 5 1 5 3 1 112 0 1 0 5 1 0 110 0 5 5 4 91 0 4 4 71 75 0 0 0 2 92 0 2 2 65 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 34 values pushed */
6 1 3 5 1 5 3 1 112 0 1 0 5 1 0 110 0 0 0 2 0 2 96 0 5 5 4 91 0 4 4 71 5 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 50 48 44 42 0 39 0 39 36 20 44 7 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = questiondown;
unicode = 00BF;
},
{
glyphname = AE;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1195 151 LINE",
"838 151 LINE",
"837 682 LINE",
"1139 682 LINE",
"1139 833 LINE",
"837 833 LINE",
"835 1304 LINE",
"1172 1304 LINE",
"1172 1456 LINE",
"592 1456 LINE",
"32 0 LINE",
"230 0 LINE",
"353 353 LINE",
"663 353 LINE",
"664 0 LINE",
"1195 0 LINE",
"1195 0 LINE"
);
},
{
closed = 1;
nodes = (
"661 1233 LINE",
"663 527 LINE",
"414 527 LINE",
"414 527 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
18 1 5 4 1 74 0 5 0 6 8 5 6 97 0 8 0 1 7 8 1 97 0 4 4 3 89 0 3 3 60 75 0 7 7 0 89 2 1 0 0 61 0 76 17 17 17 17 17 17 17 17 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = AE;
unicode = 00C6;
},
{
glyphname = multiply;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"300 206 LINE",
"631 543 LINE",
"963 206 LINE",
"1082 329 LINE",
"751 666 LINE",
"1079 1000 LINE",
"960 1123 LINE",
"631 788 LINE",
"303 1123 LINE",
"184 1000 LINE",
"511 666 LINE",
"181 329 LINE",
"181 329 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
9 3 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = multiply;
unicode = 00D7;
},
{
glyphname = Oslash;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1113 810 LINE SMOOTH",
"1112 866 OFFCURVE",
"1099 981 OFFCURVE",
"1072 1092 OFFCURVE",
"1031 1197 OFFCURVE",
"1003 1244 QCURVE",
"1164 1516 LINE",
"1022 1516 LINE",
"923 1348 LINE",
"864 1407 OFFCURVE",
"707 1476 OFFCURVE",
"605 1476 QCURVE SMOOTH",
"515 1476 OFFCURVE",
"370 1421 OFFCURVE",
"258 1324 OFFCURVE",
"177 1195 OFFCURVE",
"124 1047 OFFCURVE",
"99 888 OFFCURVE",
"98 810 QCURVE SMOOTH",
"98 644 LINE SMOOTH",
"98 583 OFFCURVE",
"114 458 OFFCURVE",
"147 338 OFFCURVE",
"197 226 OFFCURVE",
"231 177 QCURVE",
"71 -93 LINE",
"213 -93 LINE",
"317 83 LINE",
"374 35 OFFCURVE",
"516 -20 OFFCURVE",
"607 -20 QCURVE SMOOTH",
"697 -20 OFFCURVE",
"842 35 OFFCURVE",
"954 131 OFFCURVE",
"1035 259 OFFCURVE",
"1087 407 OFFCURVE",
"1112 566 OFFCURVE",
"1113 644 QCURVE",
"1113 644 LINE"
);
},
{
closed = 1;
nodes = (
"280 812 LINE SMOOTH",
"281 863 OFFCURVE",
"294 976 OFFCURVE",
"323 1087 OFFCURVE",
"371 1188 OFFCURVE",
"443 1265 OFFCURVE",
"541 1311 OFFCURVE",
"605 1311 QCURVE SMOOTH",
"683 1311 OFFCURVE",
"794 1246 OFFCURVE",
"831 1193 QCURVE",
"333 350 LINE",
"304 420 OFFCURVE",
"281 575 OFFCURVE",
"280 644 QCURVE",
"280 644 LINE"
);
},
{
closed = 1;
nodes = (
"930 644 LINE SMOOTH",
"929 592 OFFCURVE",
"918 478 OFFCURVE",
"889 367 OFFCURVE",
"842 266 OFFCURVE",
"771 189 OFFCURVE",
"672 143 OFFCURVE",
"607 143 QCURVE SMOOTH",
"541 143 OFFCURVE",
"441 190 OFFCURVE",
"404 231 QCURVE",
"895 1061 LINE",
"914 999 OFFCURVE",
"929 870 OFFCURVE",
"930 812 QCURVE",
"930 812 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
29 1 4 2 57 56 42 41 32 13 6 5 4 10 1 0 5 3 74 0 1 0 1 115 0 3 3 62 75 0 4 4 2 91 0 2 2 68 75 0 5 5 0 91 0 0 0 69 0 76 45 45 19 45 19 38 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Oslash;
unicode = 00D8;
},
{
glyphname = Thorn;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"168 1456 LINE",
"168 0 LINE",
"353 0 LINE",
"353 313 LINE",
"630 313 LINE SMOOTH",
"747 313 OFFCURVE",
"928 376 OFFCURVE",
"1053 489 OFFCURVE",
"1118 645 OFFCURVE",
"1118 738 QCURVE SMOOTH",
"1118 831 OFFCURVE",
"1053 987 OFFCURVE",
"928 1100 OFFCURVE",
"747 1163 OFFCURVE",
"630 1163 QCURVE SMOOTH",
"353 1163 LINE",
"353 1456 LINE",
"353 1456 LINE"
);
},
{
closed = 1;
nodes = (
"630 1011 LINE SMOOTH",
"708 1011 OFFCURVE",
"823 966 OFFCURVE",
"897 889 OFFCURVE",
"933 790 OFFCURVE",
"933 736 QCURVE SMOOTH",
"933 683 OFFCURVE",
"897 585 OFFCURVE",
"822 510 OFFCURVE",
"708 465 OFFCURVE",
"630 465 QCURVE SMOOTH",
"353 465 LINE",
"353 1011 LINE",
"353 1011 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
0 0 7 1 5 4 0 5 99 0 4 0 1 2 4 1 99 6 1 3 3 60 75 0 2 2 61 2 76 17 17 0 0 17 29 17 28 20 18 0 16 0 16 17 40 33 8 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Thorn;
unicode = 00DE;
},
{
glyphname = germandbls;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"353 1087 LINE SMOOTH",
"354 1242 OFFCURVE",
"473 1406 OFFCURVE",
"572 1406 QCURVE SMOOTH",
"604 1406 OFFCURVE",
"667 1380 OFFCURVE",
"716 1329 OFFCURVE",
"746 1254 OFFCURVE",
"746 1204 QCURVE SMOOTH",
"746 1166 OFFCURVE",
"726 1103 OFFCURVE",
"695 1044 OFFCURVE",
"659 989 OFFCURVE",
"628 930 OFFCURVE",
"608 864 OFFCURVE",
"608 825 QCURVE SMOOTH",
"608 757 OFFCURVE",
"654 654 OFFCURVE",
"722 571 OFFCURVE",
"802 500 OFFCURVE",
"870 431 OFFCURVE",
"915 354 OFFCURVE",
"915 307 QCURVE SMOOTH",
"915 269 OFFCURVE",
"894 205 OFFCURVE",
"850 157 OFFCURVE",
"782 130 OFFCURVE",
"735 130 QCURVE SMOOTH",
"701 130 OFFCURVE",
"632 145 OFFCURVE",
"569 168 OFFCURVE",
"516 195 OFFCURVE",
"498 206 QCURVE",
"456 51 LINE",
"476 35 OFFCURVE",
"544 9 OFFCURVE",
"625 -10 OFFCURVE",
"713 -21 OFFCURVE",
"754 -21 QCURVE SMOOTH",
"830 -21 OFFCURVE",
"957 21 OFFCURVE",
"1049 105 OFFCURVE",
"1100 231 OFFCURVE",
"1100 316 QCURVE SMOOTH",
"1100 381 OFFCURVE",
"1055 481 OFFCURVE",
"987 563 OFFCURVE",
"907 633 OFFCURVE",
"839 703 OFFCURVE",
"794 777 OFFCURVE",
"794 823 QCURVE SMOOTH",
"794 873 OFFCURVE",
"833 950 OFFCURVE",
"881 1034 OFFCURVE",
"921 1141 OFFCURVE",
"921 1220 QCURVE SMOOTH",
"921 1306 OFFCURVE",
"865 1433 OFFCURVE",
"767 1517 OFFCURVE",
"637 1558 OFFCURVE",
"562 1558 QCURVE SMOOTH",
"477 1558 OFFCURVE",
"333 1495 OFFCURVE",
"228 1375 OFFCURVE",
"169 1199 OFFCURVE",
"169 1087 QCURVE SMOOTH",
"169 0 LINE",
"353 0 LINE",
"353 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
35 1 3 4 34 1 0 3 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 20 values pushed */
0 1 0 4 3 1 4 99 0 3 3 0 91 2 1 0 0 61 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 1 0 4 3 1 4 99 0 0 0 61 75 0 3 3 2 91 0 2 2 69 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
65 63 41 39 30 28 37 16 5 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = germandbls;
unicode = 00DF;
},
{
glyphname = ae;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"955 -20 OFFCURVE",
"1048 -1 OFFCURVE",
"1117 25 OFFCURVE",
"1163 54 OFFCURVE",
"1176 64 QCURVE",
"1130 200 LINE",
"1114 189 OFFCURVE",
"1076 165 OFFCURVE",
"1029 144 OFFCURVE",
"970 130 OFFCURVE",
"932 130 QCURVE SMOOTH",
"866 130 OFFCURVE",
"774 169 OFFCURVE",
"715 241 OFFCURVE",
"688 345 OFFCURVE",
"688 411 QCURVE SMOOTH",
"688 497 LINE",
"1193 497 LINE",
"1193 731 LINE SMOOTH",
"1193 815 OFFCURVE",
"1150 952 OFFCURVE",
"1066 1049 OFFCURVE",
"943 1102 OFFCURVE",
"862 1102 QCURVE SMOOTH",
"788 1102 OFFCURVE",
"669 1046 OFFCURVE",
"626 995 QCURVE",
"587 1048 OFFCURVE",
"462 1102 OFFCURVE",
"379 1102 QCURVE SMOOTH",
"307 1102 OFFCURVE",
"189 1059 OFFCURVE",
"106 980 OFFCURVE",
"61 869 OFFCURVE",
"61 800 QCURVE",
"240 792 LINE",
"240 867 OFFCURVE",
"318 950 OFFCURVE",
"381 950 QCURVE SMOOTH",
"449 950 OFFCURVE",
"511 859 OFFCURVE",
"511 783 QCURVE SMOOTH",
"511 635 LINE",
"448 635 LINE SMOOTH",
"251 635 OFFCURVE",
"43 451 OFFCURVE",
"43 285 QCURVE SMOOTH",
"43 216 OFFCURVE",
"82 103 OFFCURVE",
"156 24 OFFCURVE",
"264 -20 OFFCURVE",
"335 -20 QCURVE SMOOTH",
"383 -20 OFFCURVE",
"463 4 OFFCURVE",
"529 44 OFFCURVE",
"580 97 OFFCURVE",
"599 126 QCURVE",
"645 55 OFFCURVE",
"793 -20 OFFCURVE",
"896 -20 QCURVE",
"896 -20 LINE"
);
},
{
closed = 1;
nodes = (
"899 950 OFFCURVE",
"957 919 OFFCURVE",
"997 868 OFFCURVE",
"1017 803 OFFCURVE",
"1017 768 QCURVE SMOOTH",
"1017 640 LINE",
"688 640 LINE",
"688 709 LINE SMOOTH",
"689 757 OFFCURVE",
"710 845 OFFCURVE",
"752 911 OFFCURVE",
"817 950 OFFCURVE",
"862 950 QCURVE",
"862 950 LINE"
);
},
{
closed = 1;
nodes = (
"335 130 OFFCURVE",
"280 154 OFFCURVE",
"243 195 OFFCURVE",
"224 250 OFFCURVE",
"224 281 QCURVE SMOOTH",
"224 324 OFFCURVE",
"255 401 OFFCURVE",
"313 460 OFFCURVE",
"397 495 OFFCURVE",
"450 495 QCURVE SMOOTH",
"511 495 LINE",
"512 202 LINE",
"484 173 OFFCURVE",
"408 130 OFFCURVE",
"371 130 QCURVE",
"371 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 103 values pushed */
33 1 3 5 76 54 2 8 7 55 3 2 0 8 3 74 0 4 3 2 3 4 2 112 10 1 2 12 1 7 8 2 7 99 14 9 2 3 3 5 91 6 1 5 5 71 75 15 11 2 8 8 0 91 1 13 2 0 0 69 0 76 74 73 61 60 1 0 79 77 73 87 74 87 67 66 60 72 61 72 50 48 43 42 37 35 31 29 25 24 22 20 17 15 9 7 0 59 1 59 16 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ae;
unicode = 00E6;
},
{
glyphname = eth;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1056 1407 LINE",
"983 1507 LINE",
"753 1375 LINE",
"690 1426 OFFCURVE",
"547 1499 OFFCURVE",
"467 1521 QCURVE",
"410 1362 LINE",
"456 1346 OFFCURVE",
"543 1305 OFFCURVE",
"584 1278 QCURVE",
"345 1141 LINE",
"418 1042 LINE",
"684 1194 LINE",
"746 1131 OFFCURVE",
"836 963 OFFCURVE",
"859 853 QCURVE",
"802 909 OFFCURVE",
"649 977 OFFCURVE",
"561 977 QCURVE SMOOTH",
"456 977 OFFCURVE",
"277 904 OFFCURVE",
"146 770 OFFCURVE",
"73 582 OFFCURVE",
"73 467 QCURVE SMOOTH",
"73 365 OFFCURVE",
"145 187 OFFCURVE",
"276 55 OFFCURVE",
"457 -20 OFFCURVE",
"565 -20 QCURVE SMOOTH",
"674 -20 OFFCURVE",
"857 61 OFFCURVE",
"991 214 OFFCURVE",
"1066 433 OFFCURVE",
"1066 571 QCURVE SMOOTH",
"1066 633 LINE SMOOTH",
"1066 839 OFFCURVE",
"949 1168 OFFCURVE",
"845 1286 QCURVE",
"845 1286 LINE"
);
},
{
closed = 1;
nodes = (
"881 571 LINE SMOOTH",
"881 472 OFFCURVE",
"837 309 OFFCURVE",
"756 194 OFFCURVE",
"641 130 OFFCURVE",
"569 130 QCURVE SMOOTH",
"495 130 OFFCURVE",
"380 189 OFFCURVE",
"301 284 OFFCURVE",
"259 405 OFFCURVE",
"259 467 QCURVE SMOOTH",
"259 540 OFFCURVE",
"301 670 OFFCURVE",
"380 768 OFFCURVE",
"492 825 OFFCURVE",
"561 825 QCURVE SMOOTH",
"623 825 OFFCURVE",
"726 802 OFFCURVE",
"806 763 OFFCURVE",
"863 712 OFFCURVE",
"880 685 QCURVE",
"880 672 OFFCURVE",
"881 648 OFFCURVE",
"881 635 QCURVE",
"881 635 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
22 1 2 1 1 74 37 36 35 32 31 28 27 26 25 9 1 72 0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 69 0 76 57 55 47 45 40 40 4 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = eth;
unicode = 00F0;
},
{
glyphname = divide;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1113 784 LINE",
"115 784 LINE",
"115 600 LINE",
"1113 600 LINE",
"1113 600 LINE"
);
},
{
closed = 1;
nodes = (
"507 1052 OFFCURVE",
"562 992 OFFCURVE",
"616 992 QCURVE SMOOTH",
"670 992 OFFCURVE",
"726 1052 OFFCURVE",
"726 1097 QCURVE SMOOTH",
"726 1142 OFFCURVE",
"670 1204 OFFCURVE",
"616 1204 QCURVE SMOOTH",
"562 1204 OFFCURVE",
"507 1142 OFFCURVE",
"507 1097 QCURVE",
"507 1097 LINE"
);
},
{
closed = 1;
nodes = (
"505 238 OFFCURVE",
"560 177 OFFCURVE",
"614 177 QCURVE SMOOTH",
"668 177 OFFCURVE",
"724 238 OFFCURVE",
"724 282 QCURVE SMOOTH",
"724 327 OFFCURVE",
"668 389 OFFCURVE",
"614 389 QCURVE SMOOTH",
"560 389 OFFCURVE",
"505 327 OFFCURVE",
"505 282 QCURVE",
"505 282 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
0 2 0 3 1 2 3 99 0 1 0 0 4 1 0 97 0 4 5 5 4 87 0 4 4 5 91 0 5 4 5 79 36 36 36 35 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = divide;
unicode = 00F7;
},
{
glyphname = oslash;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"122 529 LINE SMOOTH",
"122 381 OFFCURVE",
"228 143 OFFCURVE",
"327 70 QCURVE",
"226 -135 LINE",
"349 -135 LINE",
"423 16 LINE",
"466 -1 OFFCURVE",
"561 -20 OFFCURVE",
"615 -20 QCURVE SMOOTH",
"729 -20 OFFCURVE",
"911 64 OFFCURVE",
"1038 212 OFFCURVE",
"1106 412 OFFCURVE",
"1106 529 QCURVE SMOOTH",
"1106 551 LINE SMOOTH",
"1106 695 OFFCURVE",
"1005 929 OFFCURVE",
"911 1004 QCURVE",
"1012 1209 LINE",
"889 1209 LINE",
"816 1061 LINE",
"771 1081 OFFCURVE",
"670 1102 OFFCURVE",
"613 1102 QCURVE SMOOTH",
"499 1102 OFFCURVE",
"317 1017 OFFCURVE",
"190 869 OFFCURVE",
"122 668 OFFCURVE",
"122 551 QCURVE",
"122 551 LINE"
);
},
{
closed = 1;
nodes = (
"307 551 LINE SMOOTH",
"307 630 OFFCURVE",
"345 775 OFFCURVE",
"422 885 OFFCURVE",
"536 950 OFFCURVE",
"613 950 QCURVE SMOOTH",
"651 950 OFFCURVE",
"716 933 OFFCURVE",
"745 918 QCURVE",
"403 224 LINE",
"355 281 OFFCURVE",
"307 438 OFFCURVE",
"307 529 QCURVE",
"307 529 LINE"
);
},
{
closed = 1;
nodes = (
"921 529 LINE SMOOTH",
"921 449 OFFCURVE",
"883 304 OFFCURVE",
"806 194 OFFCURVE",
"691 130 OFFCURVE",
"615 130 QCURVE SMOOTH",
"547 130 OFFCURVE",
"492 156 QCURVE",
"832 845 LINE",
"877 788 OFFCURVE",
"921 636 OFFCURVE",
"921 551 QCURVE",
"921 551 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
11 8 2 4 0 47 46 34 33 4 5 4 26 23 2 2 5 3 74 0 1 0 1 114 0 3 2 3 115 0 4 4 0 91 0 0 0 71 75 0 5 5 2 91 0 2 2 69 2 76 42 43 19 41 19 36 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = oslash;
unicode = 00F8;
},
{
glyphname = thorn;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1087 550 LINE SMOOTH",
"1087 671 OFFCURVE",
"1033 874 OFFCURVE",
"927 1020 OFFCURVE",
"769 1102 OFFCURVE",
"665 1102 QCURVE SMOOTH",
"565 1102 OFFCURVE",
"413 1034 OFFCURVE",
"358 970 QCURVE",
"358 1558 LINE",
"173 1558 LINE",
"173 -416 LINE",
"358 -416 LINE",
"358 107 LINE",
"414 45 OFFCURVE",
"568 -20 OFFCURVE",
"668 -20 QCURVE SMOOTH",
"770 -20 OFFCURVE",
"926 64 OFFCURVE",
"1033 212 OFFCURVE",
"1087 413 OFFCURVE",
"1087 529 QCURVE",
"1087 529 LINE"
);
},
{
closed = 1;
nodes = (
"902 529 LINE SMOOTH",
"902 450 OFFCURVE",
"868 306 OFFCURVE",
"798 196 OFFCURVE",
"688 131 OFFCURVE",
"612 131 QCURVE SMOOTH",
"518 131 OFFCURVE",
"396 213 OFFCURVE",
"358 278 QCURVE",
"358 796 LINE",
"395 862 OFFCURVE",
"519 945 OFFCURVE",
"610 945 QCURVE SMOOTH",
"687 945 OFFCURVE",
"797 881 OFFCURVE",
"868 772 OFFCURVE",
"902 629 OFFCURVE",
"902 550 QCURVE",
"902 550 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
13 1 4 3 31 30 2 5 4 8 1 0 5 3 74 0 2 3 2 114 0 4 4 3 91 0 3 3 71 75 0 5 5 0 91 0 0 0 69 75 0 1 1 65 1 76 37 41 35 17 19 36 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = thorn;
unicode = 00FE;
},
{
glyphname = Hbar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1084 1456 LINE",
"909 1456 LINE",
"909 1167 LINE",
"312 1167 LINE",
"312 1456 LINE",
"138 1456 LINE",
"138 1167 LINE",
"24 1167 LINE",
"24 1024 LINE",
"138 1024 LINE",
"138 0 LINE",
"312 0 LINE",
"312 673 LINE",
"909 673 LINE",
"909 0 LINE",
"1084 0 LINE",
"1084 1024 LINE",
"1212 1024 LINE",
"1212 1167 LINE",
"1084 1167 LINE",
"1084 1167 LINE"
);
},
{
closed = 1;
nodes = (
"312 1024 LINE",
"909 1024 LINE",
"909 830 LINE",
"312 830 LINE",
"312 830 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
8 6 2 0 11 5 2 1 10 0 1 97 0 10 0 3 2 10 3 97 9 1 7 7 60 75 4 1 2 2 61 2 76 23 22 21 20 19 18 17 17 17 17 17 17 17 17 16 12 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Hbar;
unicode = 0126;
},
{
glyphname = dotlessi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"203 921 LINE",
"571 921 LINE",
"571 160 LINE",
"203 160 LINE",
"203 0 LINE",
"1109 0 LINE",
"1109 160 LINE",
"756 160 LINE",
"756 1082 LINE",
"203 1082 LINE",
"203 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 4 4 0 89 0 0 0 63 75 3 1 1 1 2 89 0 2 2 61 2 76 17 17 17 17 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dotlessi;
unicode = 0131;
},
{
glyphname = IJ;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"313 1456 LINE",
"128 1456 LINE",
"128 0 LINE",
"313 0 LINE",
"313 0 LINE"
);
},
{
closed = 1;
nodes = (
"915 323 LINE SMOOTH",
"915 279 OFFCURVE",
"900 208 OFFCURVE",
"864 159 OFFCURVE",
"804 132 OFFCURVE",
"758 132 QCURVE SMOOTH",
"690 132 OFFCURVE",
"610 222 OFFCURVE",
"610 321 QCURVE",
"424 321 LINE",
"424 234 OFFCURVE",
"474 106 OFFCURVE",
"562 22 OFFCURVE",
"685 -19 OFFCURVE",
"758 -19 QCURVE SMOOTH",
"845 -19 OFFCURVE",
"974 27 OFFCURVE",
"1059 115 OFFCURVE",
"1100 242 OFFCURVE",
"1100 323 QCURVE SMOOTH",
"1100 1456 LINE",
"915 1456 LINE",
"915 1456 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 4 1 5 1 4 5 112 2 1 1 1 60 75 0 5 5 0 91 3 1 0 0 61 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 30 values pushed */
0 4 1 5 1 4 5 112 2 1 1 1 60 75 0 0 0 61 75 0 5 5 3 91 0 3 3 69 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
34 20 37 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = IJ;
unicode = 0132;
},
{
glyphname = ij;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"686 921 LINE",
"908 921 LINE",
"908 -5 LINE SMOOTH",
"908 -82 OFFCURVE",
"869 -185 OFFCURVE",
"801 -246 OFFCURVE",
"709 -271 OFFCURVE",
"657 -271 QCURVE SMOOTH",
"643 -271 OFFCURVE",
"595 -270 OFFCURVE",
"541 -267 OFFCURVE",
"489 -262 OFFCURVE",
"472 -259 QCURVE",
"459 -417 LINE",
"514 -427 OFFCURVE",
"613 -434 OFFCURVE",
"670 -434 QCURVE SMOOTH",
"770 -434 OFFCURVE",
"927 -378 OFFCURVE",
"1036 -268 OFFCURVE",
"1093 -109 OFFCURVE",
"1093 -5 QCURVE SMOOTH",
"1093 1082 LINE",
"686 1082 LINE",
"686 1082 LINE"
);
},
{
closed = 1;
nodes = (
"85 921 LINE",
"319 921 LINE",
"319 160 LINE",
"80 160 LINE",
"80 0 LINE",
"728 0 LINE",
"728 160 LINE",
"505 160 LINE",
"505 1082 LINE",
"85 1082 LINE",
"85 1082 LINE"
);
},
{
closed = 1;
nodes = (
"881 1318 OFFCURVE",
"935 1257 OFFCURVE",
"991 1257 QCURVE SMOOTH",
"1047 1257 OFFCURVE",
"1103 1318 OFFCURVE",
"1103 1363 QCURVE SMOOTH",
"1103 1408 OFFCURVE",
"1047 1471 OFFCURVE",
"991 1471 QCURVE SMOOTH",
"935 1471 OFFCURVE",
"881 1408 OFFCURVE",
"881 1363 QCURVE",
"881 1363 LINE"
);
},
{
closed = 1;
nodes = (
"303 1317 OFFCURVE",
"358 1256 OFFCURVE",
"414 1256 QCURVE SMOOTH",
"469 1256 OFFCURVE",
"525 1317 OFFCURVE",
"525 1362 QCURVE SMOOTH",
"525 1407 OFFCURVE",
"469 1470 OFFCURVE",
"414 1470 QCURVE SMOOTH",
"358 1470 OFFCURVE",
"303 1407 OFFCURVE",
"303 1362 QCURVE",
"303 1362 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 76 values pushed */
11 1 2 6 10 1 1 2 2 74 12 1 10 10 9 91 11 1 9 9 68 75 8 1 3 3 0 89 4 1 0 0 63 75 7 1 5 5 6 89 0 6 6 61 75 0 2 2 1 91 0 1 1 73 1 76 56 54 50 48 44 42 38 36 17 17 17 17 17 21 68 53 16 13 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ij;
unicode = 0133;
},
{
glyphname = kgreenlandic;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"904 0 LINE",
"1138 0 LINE",
"646 603 LINE",
"1102 1082 LINE",
"879 1082 LINE",
"481 671 LINE",
"371 551 LINE",
"371 1082 LINE",
"186 1082 LINE",
"186 0 LINE",
"371 0 LINE",
"371 344 LINE",
"521 477 LINE",
"521 477 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
10 6 1 3 0 1 1 74 2 1 1 1 63 75 3 1 0 0 61 0 76 18 19 17 18 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = kgreenlandic;
unicode = 0138;
},
{
glyphname = Lslash;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"387 1456 LINE",
"202 1456 LINE",
"202 786 LINE",
"58 741 LINE",
"58 579 LINE",
"202 624 LINE",
"202 0 LINE",
"1099 0 LINE",
"1099 157 LINE",
"387 157 LINE",
"387 683 LINE",
"649 766 LINE",
"649 928 LINE",
"387 845 LINE",
"387 845 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
11 10 9 8 3 2 1 0 8 0 2 1 74 0 2 2 60 75 0 0 0 1 90 0 1 1 61 1 76 21 17 20 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Lslash;
unicode = 0141;
},
{
glyphname = lslash;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"756 1536 LINE",
"203 1536 LINE",
"203 1375 LINE",
"571 1375 LINE",
"571 888 LINE",
"232 734 LINE",
"232 572 LINE",
"571 726 LINE",
"571 160 LINE",
"203 160 LINE",
"203 0 LINE",
"1109 0 LINE",
"1109 160 LINE",
"756 160 LINE",
"756 811 LINE",
"1045 943 LINE",
"1046 1105 LINE",
"756 973 LINE",
"756 973 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
13 12 11 10 3 2 1 0 8 0 3 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 3 3 4 89 0 4 4 62 75 2 1 0 0 1 89 0 1 1 61 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 20 values pushed */
0 4 0 3 0 4 3 97 2 1 0 0 1 89 0 1 1 61 1 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
17 21 17 17 20 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = lslash;
unicode = 0142;
},
{
glyphname = Eng;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"867 1456 LINE",
"867 389 LINE",
"360 1456 LINE",
"175 1456 LINE",
"175 0 LINE",
"360 0 LINE",
"360 1069 LINE",
"867 2 LINE",
"867 -89 LINE SMOOTH",
"867 -176 OFFCURVE",
"800 -285 OFFCURVE",
"735 -285 QCURVE SMOOTH",
"729 -285 OFFCURVE",
"703 -283 OFFCURVE",
"674 -280 OFFCURVE",
"647 -275 OFFCURVE",
"639 -272 QCURVE",
"625 -419 LINE",
"654 -429 OFFCURVE",
"705 -437 OFFCURVE",
"735 -437 QCURVE SMOOTH",
"811 -437 OFFCURVE",
"929 -390 OFFCURVE",
"1010 -300 OFFCURVE",
"1053 -171 OFFCURVE",
"1053 -89 QCURVE SMOOTH",
"1052 1456 LINE",
"1052 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
25 20 19 3 2 3 10 1 1 2 9 1 0 1 3 74 5 4 2 3 3 60 75 0 2 2 61 75 0 1 1 0 91 0 0 0 73 0 76 0 0 0 26 0 26 17 21 39 37 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Eng;
unicode = 014A;
},
{
glyphname = eng;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"184 1082 LINE",
"184 0 LINE",
"369 0 LINE",
"369 810 LINE",
"406 872 OFFCURVE",
"532 945 OFFCURVE",
"626 945 QCURVE SMOOTH",
"744 945 OFFCURVE",
"862 821 OFFCURVE",
"862 678 QCURVE SMOOTH",
"862 -89 LINE SMOOTH",
"862 -179 OFFCURVE",
"791 -275 OFFCURVE",
"724 -275 QCURVE SMOOTH",
"717 -275 OFFCURVE",
"691 -273 OFFCURVE",
"661 -270 OFFCURVE",
"633 -265 OFFCURVE",
"624 -262 QCURVE",
"610 -419 LINE",
"640 -429 OFFCURVE",
"694 -437 OFFCURVE",
"724 -437 QCURVE SMOOTH",
"878 -436 OFFCURVE",
"1047 -256 OFFCURVE",
"1047 -89 QCURVE SMOOTH",
"1047 682 LINE SMOOTH",
"1047 790 OFFCURVE",
"997 949 OFFCURVE",
"903 1052 OFFCURVE",
"767 1102 OFFCURVE",
"681 1102 QCURVE SMOOTH",
"575 1102 OFFCURVE",
"416 1009 OFFCURVE",
"362 928 QCURVE",
"350 1082 LINE",
"350 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
32 1 2 4 3 17 1 2 4 16 1 1 2 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
0 3 3 0 91 6 5 2 0 0 71 75 0 4 4 61 75 0 2 2 1 91 0 1 1 73 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
6 1 5 5 63 75 0 3 3 0 91 0 0 0 71 75 0 4 4 61 75 0 2 2 1 91 0 1 1 73 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 35 0 35 19 37 39 39 35 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = eng;
unicode = 014B;
},
{
glyphname = OE;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1190 151 LINE",
"783 151 LINE",
"783 676 LINE",
"1127 676 LINE",
"1127 828 LINE",
"783 828 LINE",
"783 1304 LINE",
"1180 1304 LINE",
"1180 1456 LINE",
"762 1456 LINE",
"700 1464 OFFCURVE",
"566 1476 OFFCURVE",
"497 1476 QCURVE SMOOTH",
"400 1476 OFFCURVE",
"245 1408 OFFCURVE",
"137 1276 OFFCURVE",
"79 1081 OFFCURVE",
"79 953 QCURVE SMOOTH",
"79 502 LINE SMOOTH",
"79 374 OFFCURVE",
"138 179 OFFCURVE",
"247 47 OFFCURVE",
"402 -20 OFFCURVE",
"499 -20 QCURVE SMOOTH",
"568 -20 OFFCURVE",
"700 -7 OFFCURVE",
"762 0 QCURVE",
"1190 0 LINE",
"1190 0 LINE"
);
},
{
closed = 1;
nodes = (
"442 131 OFFCURVE",
"354 168 OFFCURVE",
"294 254 OFFCURVE",
"264 397 OFFCURVE",
"264 502 QCURVE SMOOTH",
"264 955 LINE SMOOTH",
"264 1060 OFFCURVE",
"294 1201 OFFCURVE",
"352 1287 OFFCURVE",
"440 1324 OFFCURVE",
"497 1324 QCURVE SMOOTH",
"523 1324 OFFCURVE",
"573 1322 OFFCURVE",
"598 1320 QCURVE",
"598 134 LINE",
"548 131 OFFCURVE",
"499 131 QCURVE",
"499 131 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
31 1 4 2 1 74 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
31 1 4 3 1 74 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 6 values pushed */
31 1 4 9 1 74 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 5 0 6 7 5 6 97 9 1 4 4 2 91 3 1 2 2 68 75 10 8 2 7 7 0 91 1 1 0 0 61 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 55 values pushed */
0 5 0 6 7 5 6 97 9 1 4 4 2 91 0 2 2 68 75 9 1 4 4 3 89 0 3 3 60 75 10 8 2 7 7 0 89 0 0 0 61 75 10 8 2 7 7 1 91 0 1 1 69 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 50 values pushed */
0 5 0 6 7 5 6 97 0 9 9 2 91 0 2 2 68 75 0 4 4 3 89 0 3 3 60 75 0 7 7 0 89 0 0 0 61 75 10 1 8 8 1 91 0 1 1 69 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 19 values pushed */
30 28 35 32 28 44 30 44 17 17 17 17 18 41 34 16 11 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = OE;
unicode = 0152;
},
{
glyphname = oe;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"46 441 LINE SMOOTH",
"46 336 OFFCURVE",
"91 166 OFFCURVE",
"179 46 OFFCURVE",
"307 -20 OFFCURVE",
"390 -20 QCURVE SMOOTH",
"473 -20 OFFCURVE",
"600 46 OFFCURVE",
"644 107 QCURVE",
"689 45 OFFCURVE",
"820 -20 OFFCURVE",
"907 -20 QCURVE SMOOTH",
"955 -20 OFFCURVE",
"1031 -4 OFFCURVE",
"1091 22 OFFCURVE",
"1136 56 OFFCURVE",
"1153 74 QCURVE",
"1098 200 LINE",
"1066 172 OFFCURVE",
"975 130 OFFCURVE",
"907 130 QCURVE SMOOTH",
"864 130 OFFCURVE",
"802 173 OFFCURVE",
"762 253 OFFCURVE",
"742 364 OFFCURVE",
"742 432 QCURVE SMOOTH",
"742 496 LINE",
"1200 496 LINE",
"1200 677 LINE SMOOTH",
"1200 768 OFFCURVE",
"1162 924 OFFCURVE",
"1083 1038 OFFCURVE",
"962 1102 OFFCURVE",
"879 1102 QCURVE SMOOTH",
"809 1102 OFFCURVE",
"689 1036 OFFCURVE",
"644 973 QCURVE",
"600 1035 OFFCURVE",
"472 1102 OFFCURVE",
"388 1102 QCURVE SMOOTH",
"306 1102 OFFCURVE",
"178 1036 OFFCURVE",
"91 914 OFFCURVE",
"46 744 OFFCURVE",
"46 639 QCURVE",
"46 639 LINE"
);
},
{
closed = 1;
nodes = (
"232 639 LINE SMOOTH",
"232 706 OFFCURVE",
"250 821 OFFCURVE",
"287 903 OFFCURVE",
"346 950 OFFCURVE",
"388 950 QCURVE SMOOTH",
"430 950 OFFCURVE",
"491 904 OFFCURVE",
"529 821 OFFCURVE",
"547 707 OFFCURVE",
"547 639 QCURVE SMOOTH",
"547 441 LINE SMOOTH",
"547 373 OFFCURVE",
"529 258 OFFCURVE",
"491 176 OFFCURVE",
"432 130 OFFCURVE",
"390 130 QCURVE SMOOTH",
"347 130 OFFCURVE",
"287 176 OFFCURVE",
"249 258 OFFCURVE",
"232 373 OFFCURVE",
"232 441 QCURVE",
"232 441 LINE"
);
},
{
closed = 1;
nodes = (
"742 651 LINE SMOOTH",
"742 718 OFFCURVE",
"761 829 OFFCURVE",
"796 907 OFFCURVE",
"847 950 OFFCURVE",
"879 950 QCURVE SMOOTH",
"916 950 OFFCURVE",
"967 913 OFFCURVE",
"1000 852 OFFCURVE",
"1015 774 OFFCURVE",
"1015 732 QCURVE SMOOTH",
"1015 647 LINE",
"742 647 LINE",
"742 647 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 68 values pushed */
8 1 7 0 27 1 3 2 36 28 2 4 3 3 74 10 1 8 0 2 3 8 2 97 9 1 7 7 0 91 1 1 0 0 71 75 6 1 3 3 4 91 5 1 4 4 69 4 76 68 67 75 73 67 79 68 79 41 41 36 39 37 21 36 36 11 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = oe;
unicode = 0153;
},
{
glyphname = longs;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"642 0 LINE",
"642 1126 LINE SMOOTH",
"642 1195 OFFCURVE",
"678 1307 OFFCURVE",
"748 1385 OFFCURVE",
"851 1427 OFFCURVE",
"919 1427 QCURVE SMOOTH",
"948 1427 OFFCURVE",
"994 1421 OFFCURVE",
"1012 1416 QCURVE",
"1035 1558 LINE",
"998 1567 OFFCURVE",
"927 1579 OFFCURVE",
"890 1579 QCURVE SMOOTH",
"790 1579 OFFCURVE",
"630 1519 OFFCURVE",
"517 1404 OFFCURVE",
"456 1235 OFFCURVE",
"456 1126 QCURVE SMOOTH",
"456 0 LINE",
"456 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
9 1 1 0 10 1 2 1 2 74 0 0 0 1 2 0 1 99 3 1 2 2 61 2 76 0 0 0 19 0 19 37 37 4 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = longs;
unicode = 017F;
},
{
glyphname = florin;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"895 1082 LINE",
"683 1082 LINE",
"683 1181 LINE SMOOTH",
"684 1298 OFFCURVE",
"808 1421 OFFCURVE",
"938 1422 QCURVE SMOOTH",
"978 1422 OFFCURVE",
"1049 1406 OFFCURVE",
"1075 1393 QCURVE",
"1098 1540 LINE",
"1051 1557 OFFCURVE",
"962 1579 OFFCURVE",
"915 1579 QCURVE SMOOTH",
"819 1579 OFFCURVE",
"665 1527 OFFCURVE",
"556 1426 OFFCURVE",
"498 1277 OFFCURVE",
"498 1181 QCURVE SMOOTH",
"498 1082 LINE",
"321 1082 LINE",
"321 939 LINE",
"498 939 LINE",
"498 -52 LINE SMOOTH",
"497 -161 OFFCURVE",
"405 -285 OFFCURVE",
"320 -285 QCURVE SMOOTH",
"309 -285 OFFCURVE",
"270 -281 OFFCURVE",
"226 -272 OFFCURVE",
"185 -261 OFFCURVE",
"174 -253 QCURVE",
"160 -401 LINE",
"199 -421 OFFCURVE",
"279 -437 OFFCURVE",
"320 -437 QCURVE SMOOTH",
"405 -437 OFFCURVE",
"540 -386 OFFCURVE",
"633 -289 OFFCURVE",
"683 -145 OFFCURVE",
"683 -52 QCURVE SMOOTH",
"683 939 LINE",
"895 939 LINE",
"895 939 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 60 values pushed */
32 1 6 5 33 1 4 6 11 1 2 0 10 1 1 2 4 74 0 5 0 6 4 5 6 99 3 1 0 0 4 89 7 1 4 4 63 75 0 2 2 1 91 0 1 1 73 1 76 19 37 37 17 19 39 37 16 8 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = florin;
unicode = 0192;
},
{
glyphname = Ohorn;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1114 810 LINE SMOOTH",
"1112 910 OFFCURVE",
"1072 1112 OFFCURVE",
"1028 1200 QCURVE",
"1122 1235 OFFCURVE",
"1222 1403 OFFCURVE",
"1221 1530 QCURVE",
"1054 1530 LINE",
"1053 1447 OFFCURVE",
"1003 1339 OFFCURVE",
"949 1321 QCURVE",
"888 1392 OFFCURVE",
"719 1476 OFFCURVE",
"606 1476 QCURVE SMOOTH",
"516 1476 OFFCURVE",
"371 1421 OFFCURVE",
"259 1324 OFFCURVE",
"178 1195 OFFCURVE",
"125 1047 OFFCURVE",
"100 888 OFFCURVE",
"99 810 QCURVE SMOOTH",
"99 644 LINE SMOOTH",
"100 566 OFFCURVE",
"126 408 OFFCURVE",
"179 260 OFFCURVE",
"261 131 OFFCURVE",
"373 35 OFFCURVE",
"518 -20 OFFCURVE",
"608 -20 QCURVE SMOOTH",
"698 -20 OFFCURVE",
"843 35 OFFCURVE",
"955 131 OFFCURVE",
"1036 259 OFFCURVE",
"1088 407 OFFCURVE",
"1113 566 OFFCURVE",
"1114 644 QCURVE",
"1114 644 LINE"
);
},
{
closed = 1;
nodes = (
"931 644 LINE SMOOTH",
"930 592 OFFCURVE",
"919 478 OFFCURVE",
"890 367 OFFCURVE",
"843 266 OFFCURVE",
"772 189 OFFCURVE",
"673 143 OFFCURVE",
"608 143 QCURVE SMOOTH",
"543 143 OFFCURVE",
"445 189 OFFCURVE",
"373 266 OFFCURVE",
"325 368 OFFCURVE",
"295 479 OFFCURVE",
"282 593 OFFCURVE",
"281 644 QCURVE SMOOTH",
"281 812 LINE SMOOTH",
"282 863 OFFCURVE",
"295 976 OFFCURVE",
"324 1087 OFFCURVE",
"372 1188 OFFCURVE",
"444 1265 OFFCURVE",
"542 1311 OFFCURVE",
"606 1311 QCURVE SMOOTH",
"671 1311 OFFCURVE",
"769 1266 OFFCURVE",
"841 1189 OFFCURVE",
"889 1088 OFFCURVE",
"918 977 OFFCURVE",
"930 864 OFFCURVE",
"931 812 QCURVE",
"931 812 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
25 1 3 1 32 1 4 3 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
40 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 2 2 62 75 0 3 3 1 91 0 1 1 68 75 0 4 4 0 91 0 0 0 69 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 2 1 2 114 0 3 3 1 91 0 1 1 68 75 0 4 4 0 91 0 0 0 69 0 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
45 45 21 45 38 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Ohorn;
unicode = 01A0;
},
{
glyphname = ohorn;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"119 529 LINE SMOOTH",
"119 412 OFFCURVE",
"187 212 OFFCURVE",
"314 64 OFFCURVE",
"497 -20 OFFCURVE",
"612 -20 QCURVE SMOOTH",
"726 -20 OFFCURVE",
"908 64 OFFCURVE",
"1035 212 OFFCURVE",
"1103 412 OFFCURVE",
"1103 529 QCURVE SMOOTH",
"1103 551 LINE SMOOTH",
"1103 643 OFFCURVE",
"1061 807 OFFCURVE",
"1020 875 QCURVE",
"1106 911 OFFCURVE",
"1197 1073 OFFCURVE",
"1198 1194 QCURVE",
"1030 1194 LINE",
"1030 1111 OFFCURVE",
"979 1007 OFFCURVE",
"925 990 QCURVE",
"864 1043 OFFCURVE",
"706 1102 OFFCURVE",
"610 1102 QCURVE SMOOTH",
"496 1102 OFFCURVE",
"314 1017 OFFCURVE",
"187 869 OFFCURVE",
"119 668 OFFCURVE",
"119 551 QCURVE",
"119 551 LINE"
);
},
{
closed = 1;
nodes = (
"304 551 LINE SMOOTH",
"304 630 OFFCURVE",
"342 775 OFFCURVE",
"419 885 OFFCURVE",
"533 950 OFFCURVE",
"610 950 QCURVE SMOOTH",
"687 950 OFFCURVE",
"802 885 OFFCURVE",
"879 775 OFFCURVE",
"918 630 OFFCURVE",
"918 551 QCURVE SMOOTH",
"918 529 LINE SMOOTH",
"918 449 OFFCURVE",
"880 304 OFFCURVE",
"803 194 OFFCURVE",
"688 130 OFFCURVE",
"612 130 QCURVE SMOOTH",
"535 130 OFFCURVE",
"419 194 OFFCURVE",
"342 304 OFFCURVE",
"304 449 OFFCURVE",
"304 529 QCURVE",
"304 529 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
8 1 4 0 15 1 3 4 2 74 0 1 0 1 114 0 4 4 0 91 0 0 0 71 75 0 3 3 2 91 0 2 2 69 2 76 41 41 43 21 36 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ohorn;
unicode = 01A1;
},
{
glyphname = Uhorn;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"909 1456 LINE",
"906 470 LINE SMOOTH",
"904 405 OFFCURVE",
"866 285 OFFCURVE",
"793 192 OFFCURVE",
"685 137 OFFCURVE",
"614 137 QCURVE SMOOTH",
"543 137 OFFCURVE",
"434 193 OFFCURVE",
"361 285 OFFCURVE",
"322 405 OFFCURVE",
"321 470 QCURVE SMOOTH",
"317 1456 LINE",
"141 1456 LINE",
"139 470 LINE SMOOTH",
"140 368 OFFCURVE",
"210 189 OFFCURVE",
"334 56 OFFCURVE",
"508 -20 OFFCURVE",
"614 -20 QCURVE SMOOTH",
"718 -20 OFFCURVE",
"892 57 OFFCURVE",
"1018 190 OFFCURVE",
"1088 368 OFFCURVE",
"1090 470 QCURVE SMOOTH",
"1089 1136 LINE",
"1255 1147 OFFCURVE",
"1411 1332 OFFCURVE",
"1411 1512 QCURVE",
"1244 1512 LINE",
"1244 1456 OFFCURVE",
"1229 1371 OFFCURVE",
"1193 1312 OFFCURVE",
"1133 1278 OFFCURVE",
"1088 1272 QCURVE",
"1088 1456 LINE",
"1088 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
1 1 1 3 1 74 6 5 2 3 3 60 75 0 1 1 0 89 0 0 0 62 75 0 4 4 2 91 0 2 2 69 2 76 0 0 0 35 0 35 37 21 37 18 22 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Uhorn;
unicode = 01AF;
},
{
glyphname = uhorn;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1175 1171 LINE",
"1175 1070 OFFCURVE",
"1123 959 OFFCURVE",
"1055 941 QCURVE",
"1055 1082 LINE",
"869 1082 LINE",
"869 306 LINE",
"835 228 OFFCURVE",
"696 136 OFFCURVE",
"583 136 QCURVE SMOOTH",
"530 136 OFFCURVE",
"449 164 OFFCURVE",
"393 233 OFFCURVE",
"365 349 OFFCURVE",
"365 437 QCURVE SMOOTH",
"365 1082 LINE",
"180 1082 LINE",
"180 439 LINE SMOOTH",
"180 318 OFFCURVE",
"233 145 OFFCURVE",
"331 33 OFFCURVE",
"469 -20 OFFCURVE",
"554 -20 QCURVE SMOOTH",
"660 -20 OFFCURVE",
"822 69 OFFCURVE",
"876 149 QCURVE",
"887 0 LINE",
"1055 0 LINE",
"1055 802 LINE",
"1202 821 OFFCURVE",
"1342 1001 OFFCURVE",
"1343 1171 QCURVE",
"1343 1171 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 9 values pushed */
28 25 6 3 4 3 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
6 1 5 2 5 114 4 1 2 2 63 75 0 3 3 0 91 1 1 0 0 61 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
6 1 5 2 5 114 4 1 2 2 63 75 0 0 0 61 75 0 3 3 1 91 0 1 1 69 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 31 0 31 19 37 21 35 20 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uhorn;
unicode = 01B0;
},
{
glyphname = uni0237;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"260 921 LINE",
"624 921 LINE",
"624 -7 LINE SMOOTH",
"624 -84 OFFCURVE",
"585 -189 OFFCURVE",
"517 -253 OFFCURVE",
"426 -280 OFFCURVE",
"374 -280 QCURVE SMOOTH",
"360 -280 OFFCURVE",
"311 -279 OFFCURVE",
"257 -276 OFFCURVE",
"206 -271 OFFCURVE",
"189 -268 QCURVE",
"176 -420 LINE",
"231 -430 OFFCURVE",
"330 -437 OFFCURVE",
"387 -437 QCURVE SMOOTH",
"487 -437 OFFCURVE",
"644 -380 OFFCURVE",
"753 -271 OFFCURVE",
"810 -111 OFFCURVE",
"810 -7 QCURVE SMOOTH",
"810 1082 LINE",
"260 1082 LINE",
"260 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
11 1 2 3 10 1 1 2 2 74 0 3 3 0 89 0 0 0 63 75 0 2 2 1 91 0 1 1 73 1 76 21 68 53 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0237;
unicode = 0237;
},
{
glyphname = schwa;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"534 1103 OFFCURVE",
"409 1080 OFFCURVE",
"310 1042 OFFCURVE",
"235 994 OFFCURVE",
"208 969 QCURVE",
"281 844 LINE",
"335 890 OFFCURVE",
"496 952 OFFCURVE",
"609 952 QCURVE SMOOTH",
"687 952 OFFCURVE",
"805 894 OFFCURVE",
"886 794 OFFCURVE",
"930 660 OFFCURVE",
"933 584 QCURVE",
"177 584 LINE",
"177 463 LINE SMOOTH",
"177 358 OFFCURVE",
"233 181 OFFCURVE",
"347 53 OFFCURVE",
"520 -19 OFFCURVE",
"637 -19 QCURVE SMOOTH",
"733 -20 OFFCURVE",
"908 60 OFFCURVE",
"1041 203 OFFCURVE",
"1119 401 OFFCURVE",
"1119 518 QCURVE SMOOTH",
"1119 562 LINE SMOOTH",
"1119 679 OFFCURVE",
"1048 877 OFFCURVE",
"916 1022 OFFCURVE",
"727 1103 OFFCURVE",
"609 1103 QCURVE",
"609 1103 LINE"
);
},
{
closed = 1;
nodes = (
"566 132 OFFCURVE",
"462 177 OFFCURVE",
"395 253 OFFCURVE",
"362 353 OFFCURVE",
"362 407 QCURVE SMOOTH",
"362 433 LINE",
"927 433 LINE",
"916 369 OFFCURVE",
"866 259 OFFCURVE",
"791 178 OFFCURVE",
"694 132 OFFCURVE",
"637 132 QCURVE",
"637 132 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
27 1 3 0 26 1 2 3 2 74 0 2 0 5 4 2 5 97 0 3 3 0 91 6 1 0 0 71 75 7 1 4 4 1 91 0 1 1 69 1 76 33 32 1 0 38 37 32 43 33 43 24 22 18 17 12 10 0 31 1 31 8 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = schwa;
unicode = 0259;
},
{
glyphname = circumflex;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"550 1517 LINE",
"438 1517 LINE",
"193 1278 LINE",
"193 1252 LINE",
"345 1252 LINE",
"494 1403 LINE",
"644 1252 LINE",
"798 1252 LINE",
"798 1277 LINE",
"798 1277 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
6 3 0 3 0 2 1 74 1 1 0 2 0 115 0 2 2 62 2 76 18 18 17 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = circumflex;
unicode = 02C6;
},
{
glyphname = caron;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"461 1517 LINE",
"304 1517 LINE",
"304 1496 LINE",
"555 1251 LINE",
"669 1251 LINE",
"923 1499 LINE",
"923 1517 LINE",
"763 1517 LINE",
"612 1365 LINE",
"612 1365 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
6 1 1 0 1 74 0 1 0 1 115 2 1 0 0 62 0 76 18 18 17 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = caron;
unicode = 02C7;
},
{
glyphname = breve;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"763 1458 LINE",
"763 1428 OFFCURVE",
"745 1373 OFFCURVE",
"709 1333 OFFCURVE",
"654 1309 OFFCURVE",
"615 1309 QCURVE SMOOTH",
"575 1309 OFFCURVE",
"519 1333 OFFCURVE",
"483 1373 OFFCURVE",
"465 1428 OFFCURVE",
"465 1458 QCURVE",
"315 1458 LINE",
"315 1399 OFFCURVE",
"358 1300 OFFCURVE",
"436 1230 OFFCURVE",
"546 1191 OFFCURVE",
"615 1191 QCURVE SMOOTH",
"683 1191 OFFCURVE",
"793 1230 OFFCURVE",
"871 1300 OFFCURVE",
"913 1399 OFFCURVE",
"913 1458 QCURVE",
"913 1458 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
0 2 0 0 2 0 95 4 3 2 1 1 60 1 76 0 0 0 21 0 21 36 20 36 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = breve;
unicode = 02D8;
},
{
glyphname = dotaccent;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"498 1312 OFFCURVE",
"556 1249 OFFCURVE",
"613 1249 QCURVE SMOOTH",
"670 1249 OFFCURVE",
"728 1312 OFFCURVE",
"728 1358 QCURVE SMOOTH",
"728 1406 OFFCURVE",
"670 1470 OFFCURVE",
"613 1470 QCURVE SMOOTH",
"556 1470 OFFCURVE",
"498 1406 OFFCURVE",
"498 1358 QCURVE",
"498 1358 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 16 values pushed */
0 1 1 0 91 0 0 0 68 1 76 36 34 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dotaccent;
unicode = 02D9;
},
{
glyphname = ring;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"410 1269 OFFCURVE",
"443 1197 OFFCURVE",
"498 1146 OFFCURVE",
"573 1118 OFFCURVE",
"615 1118 QCURVE SMOOTH",
"657 1118 OFFCURVE",
"730 1146 OFFCURVE",
"785 1197 OFFCURVE",
"817 1269 OFFCURVE",
"817 1312 QCURVE SMOOTH",
"817 1355 OFFCURVE",
"785 1428 OFFCURVE",
"730 1481 OFFCURVE",
"657 1511 OFFCURVE",
"615 1511 QCURVE SMOOTH",
"573 1511 OFFCURVE",
"498 1481 OFFCURVE",
"443 1428 OFFCURVE",
"410 1355 OFFCURVE",
"410 1312 QCURVE",
"410 1312 LINE"
);
},
{
closed = 1;
nodes = (
"509 1360 OFFCURVE",
"571 1421 OFFCURVE",
"615 1421 QCURVE SMOOTH",
"659 1421 OFFCURVE",
"718 1360 OFFCURVE",
"718 1312 QCURVE SMOOTH",
"718 1289 OFFCURVE",
"702 1251 OFFCURVE",
"674 1223 OFFCURVE",
"637 1207 OFFCURVE",
"615 1207 QCURVE SMOOTH",
"593 1207 OFFCURVE",
"555 1223 OFFCURVE",
"526 1252 OFFCURVE",
"509 1290 OFFCURVE",
"509 1312 QCURVE",
"509 1312 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
0 2 0 1 2 1 95 0 3 3 0 91 0 0 0 62 3 76 38 40 40 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ring;
unicode = 02DA;
},
{
glyphname = ogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"644 56 LINE",
"588 29 OFFCURVE",
"497 -41 OFFCURVE",
"433 -119 OFFCURVE",
"398 -202 OFFCURVE",
"398 -243 QCURVE SMOOTH",
"398 -290 OFFCURVE",
"428 -361 OFFCURVE",
"480 -409 OFFCURVE",
"550 -433 OFFCURVE",
"591 -433 QCURVE SMOOTH",
"656 -433 OFFCURVE",
"741 -405 OFFCURVE",
"769 -389 QCURVE",
"738 -268 LINE",
"722 -276 OFFCURVE",
"669 -295 OFFCURVE",
"637 -294 QCURVE SMOOTH",
"595 -294 OFFCURVE",
"559 -253 OFFCURVE",
"559 -219 QCURVE SMOOTH",
"559 -153 OFFCURVE",
"653 -42 OFFCURVE",
"731 0 QCURVE",
"731 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
10 1 1 0 1 74 23 9 2 0 72 0 0 0 1 91 0 1 1 73 1 76 37 37 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ogonek;
unicode = 02DB;
},
{
glyphname = tilde;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"723 1521 LINE",
"723 1498 OFFCURVE",
"706 1457 OFFCURVE",
"679 1427 OFFCURVE",
"641 1409 OFFCURVE",
"620 1409 QCURVE SMOOTH",
"581 1409 OFFCURVE",
"516 1439 OFFCURVE",
"453 1474 OFFCURVE",
"386 1504 OFFCURVE",
"344 1504 QCURVE SMOOTH",
"298 1504 OFFCURVE",
"223 1466 OFFCURVE",
"169 1403 OFFCURVE",
"138 1320 OFFCURVE",
"138 1275 QCURVE",
"242 1251 LINE",
"243 1297 OFFCURVE",
"300 1362 OFFCURVE",
"344 1362 QCURVE SMOOTH",
"371 1362 OFFCURVE",
"415 1348 OFFCURVE",
"454 1327 OFFCURVE",
"492 1302 OFFCURVE",
"535 1281 OFFCURVE",
"587 1267 OFFCURVE",
"620 1267 QCURVE SMOOTH",
"665 1267 OFFCURVE",
"741 1303 OFFCURVE",
"795 1364 OFFCURVE",
"826 1446 OFFCURVE",
"826 1491 QCURVE",
"826 1491 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
0 1 3 2 16 1 0 1 2 74 31 1 2 72 15 1 0 71 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 1 1 2 91 0 2 2 62 75 0 0 0 3 91 0 3 3 60 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
0 3 0 0 3 0 95 0 1 1 2 91 0 2 2 62 1 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
35 39 37 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = tilde;
unicode = 02DC;
},
{
glyphname = hungarumlaut;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"508 1250 LINE",
"677 1250 LINE",
"982 1519 LINE",
"757 1519 LINE",
"757 1519 LINE"
);
},
{
closed = 1;
nodes = (
"246 1250 LINE",
"396 1250 LINE",
"641 1519 LINE",
"434 1519 LINE",
"434 1519 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
3 1 1 1 0 89 2 1 0 0 62 1 76 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = hungarumlaut;
unicode = 02DD;
},
{
glyphname = uni02F3;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"429 -265 OFFCURVE",
"453 -319 OFFCURVE",
"495 -357 OFFCURVE",
"551 -378 OFFCURVE",
"583 -378 QCURVE SMOOTH",
"614 -378 OFFCURVE",
"668 -357 OFFCURVE",
"709 -319 OFFCURVE",
"733 -265 OFFCURVE",
"733 -233 QCURVE SMOOTH",
"733 -201 OFFCURVE",
"709 -146 OFFCURVE",
"668 -107 OFFCURVE",
"614 -85 OFFCURVE",
"583 -85 QCURVE SMOOTH",
"551 -85 OFFCURVE",
"495 -107 OFFCURVE",
"453 -146 OFFCURVE",
"429 -201 OFFCURVE",
"429 -233 QCURVE",
"429 -233 LINE"
);
},
{
closed = 1;
nodes = (
"516 -204 OFFCURVE",
"555 -165 OFFCURVE",
"583 -165 QCURVE SMOOTH",
"609 -165 OFFCURVE",
"647 -204 OFFCURVE",
"647 -233 QCURVE SMOOTH",
"647 -261 OFFCURVE",
"609 -298 OFFCURVE",
"583 -298 QCURVE SMOOTH",
"555 -298 OFFCURVE",
"516 -260 OFFCURVE",
"515 -233 QCURVE",
"515 -233 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 19 values pushed */
0 0 0 3 2 0 3 99 0 2 2 1 91 0 1 1 65 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 0 0 3 2 0 3 99 0 2 1 1 2 87 0 2 2 1 91 0 1 2 1 79 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
36 38 40 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni02F3;
unicode = 02F3;
},
{
glyphname = gravecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"-644 1558 LINE",
"-822 1558 LINE",
"-643 1212 LINE",
"-517 1212 LINE",
"-517 1212 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
0 1 0 1 114 0 0 0 105 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1106;
}
);
note = gravecomb;
unicode = 0300;
},
{
glyphname = acutecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"-664 1212 LINE",
"-548 1212 LINE",
"-362 1559 LINE",
"-534 1559 LINE",
"-534 1559 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
0 0 1 0 114 0 1 1 105 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1106;
}
);
note = acutecomb;
unicode = 0301;
},
{
glyphname = tildecomb;
layers = (
{
components = (
{
name = tilde;
transform = "{1, 0, 0, 1, -1026, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1106;
}
);
note = tildecomb;
unicode = 0303;
},
{
glyphname = hook;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"-525 1241 LINE",
"-524 1312 LINE",
"-496 1316 OFFCURVE",
"-440 1336 OFFCURVE",
"-396 1372 OFFCURVE",
"-369 1426 OFFCURVE",
"-369 1464 QCURVE SMOOTH",
"-369 1552 OFFCURVE",
"-528 1652 OFFCURVE",
"-672 1652 QCURVE",
"-679 1546 LINE",
"-646 1546 OFFCURVE",
"-586 1538 OFFCURVE",
"-540 1520 OFFCURVE",
"-513 1490 OFFCURVE",
"-513 1468 QCURVE SMOOTH",
"-513 1427 OFFCURVE",
"-587 1399 OFFCURVE",
"-658 1394 QCURVE",
"-657 1241 LINE",
"-657 1241 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
18 1 3 0 1 74 0 2 0 1 0 2 1 99 0 0 3 3 0 87 0 0 0 3 89 4 1 3 0 3 77 0 0 0 19 0 19 17 22 17 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1106;
}
);
note = hook;
unicode = 0309;
},
{
glyphname = uni030F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"-794 1518 LINE",
"-1019 1518 LINE",
"-713 1252 LINE",
"-544 1252 LINE",
"-544 1252 LINE"
);
},
{
closed = 1;
nodes = (
"-472 1518 LINE",
"-679 1518 LINE",
"-433 1252 LINE",
"-283 1252 LINE",
"-283 1252 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 20 values pushed */
2 1 0 0 1 89 3 1 1 1 62 0 76 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1106;
}
);
note = uni030F;
unicode = 030F;
},
{
glyphname = dotbelow;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"-729 -281 OFFCURVE",
"-671 -344 OFFCURVE",
"-614 -344 QCURVE SMOOTH",
"-557 -344 OFFCURVE",
"-499 -281 OFFCURVE",
"-499 -235 QCURVE SMOOTH",
"-499 -187 OFFCURVE",
"-557 -123 OFFCURVE",
"-614 -123 QCURVE SMOOTH",
"-671 -123 OFFCURVE",
"-729 -187 OFFCURVE",
"-729 -235 QCURVE",
"-729 -235 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 91 0 1 0 1 79 36 34 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1106;
}
);
note = dotbelow;
unicode = 0323;
},
{
glyphname = tonos;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"553 1271 LINE",
"643 1271 LINE",
"813 1658 LINE",
"618 1658 LINE",
"618 1658 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 85 0 0 0 1 89 0 1 0 1 77 17 16 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = tonos;
unicode = 0384;
},
{
glyphname = dieresistonos;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"580 1463 LINE",
"715 1463 LINE",
"833 1727 LINE",
"628 1727 LINE",
"628 1727 LINE"
);
},
{
closed = 1;
nodes = (
"275 1314 OFFCURVE",
"332 1250 OFFCURVE",
"389 1250 QCURVE SMOOTH",
"446 1250 OFFCURVE",
"504 1314 OFFCURVE",
"504 1360 QCURVE SMOOTH",
"504 1408 OFFCURVE",
"446 1472 OFFCURVE",
"389 1472 QCURVE SMOOTH",
"332 1472 OFFCURVE",
"275 1408 OFFCURVE",
"275 1360 QCURVE",
"275 1360 LINE"
);
},
{
closed = 1;
nodes = (
"782 1314 OFFCURVE",
"839 1250 OFFCURVE",
"896 1250 QCURVE SMOOTH",
"953 1250 OFFCURVE",
"1011 1314 OFFCURVE",
"1011 1360 QCURVE SMOOTH",
"1011 1408 OFFCURVE",
"953 1472 OFFCURVE",
"896 1472 QCURVE SMOOTH",
"839 1472 OFFCURVE",
"782 1408 OFFCURVE",
"782 1360 QCURVE",
"782 1360 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 0 0 1 3 0 1 97 5 1 3 3 2 91 4 1 2 2 48 3 76 36 36 36 35 17 16 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dieresistonos;
unicode = 0385;
},
{
glyphname = anoteleia;
layers = (
{
components = (
{
name = periodcentered;
transform = "{1, 0, 0, 1, 56, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = anoteleia;
unicode = 0387;
},
{
glyphname = Gamma;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1072 1456 LINE",
"181 1456 LINE",
"181 0 LINE",
"367 0 LINE",
"367 1304 LINE",
"1072 1304 LINE",
"1072 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 0 0 2 89 0 2 2 40 75 0 1 1 41 1 76 17 17 16 3 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Gamma;
unicode = 0393;
},
{
glyphname = Delta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"46 0 LINE",
"1204 0 LINE",
"724 1456 LINE",
"564 1456 LINE",
"564 1456 LINE"
);
},
{
closed = 1;
nodes = (
"641 1203 LINE",
"967 151 LINE",
"286 151 LINE",
"286 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
6 1 2 0 1 74 0 0 0 40 75 0 2 2 1 90 0 1 1 41 1 76 17 17 16 3 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Delta;
unicode = "0394,2206";
},
{
glyphname = Theta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"845 811 LINE",
"381 811 LINE",
"381 660 LINE",
"845 660 LINE",
"845 660 LINE"
);
},
{
closed = 1;
nodes = (
"1121 810 LINE SMOOTH",
"1120 888 OFFCURVE",
"1095 1048 OFFCURVE",
"1042 1196 OFFCURVE",
"961 1325 OFFCURVE",
"849 1421 OFFCURVE",
"703 1476 OFFCURVE",
"613 1476 QCURVE SMOOTH",
"523 1476 OFFCURVE",
"378 1421 OFFCURVE",
"266 1324 OFFCURVE",
"185 1195 OFFCURVE",
"132 1047 OFFCURVE",
"107 888 OFFCURVE",
"106 810 QCURVE SMOOTH",
"106 644 LINE SMOOTH",
"107 566 OFFCURVE",
"133 408 OFFCURVE",
"186 260 OFFCURVE",
"268 131 OFFCURVE",
"380 35 OFFCURVE",
"525 -20 OFFCURVE",
"615 -20 QCURVE SMOOTH",
"705 -20 OFFCURVE",
"850 35 OFFCURVE",
"962 131 OFFCURVE",
"1043 259 OFFCURVE",
"1095 407 OFFCURVE",
"1120 566 OFFCURVE",
"1121 644 QCURVE",
"1121 644 LINE"
);
},
{
closed = 1;
nodes = (
"938 644 LINE SMOOTH",
"937 592 OFFCURVE",
"926 478 OFFCURVE",
"897 367 OFFCURVE",
"850 266 OFFCURVE",
"779 189 OFFCURVE",
"680 143 OFFCURVE",
"615 143 QCURVE SMOOTH",
"550 143 OFFCURVE",
"452 189 OFFCURVE",
"380 266 OFFCURVE",
"332 368 OFFCURVE",
"302 479 OFFCURVE",
"289 593 OFFCURVE",
"288 644 QCURVE SMOOTH",
"288 812 LINE SMOOTH",
"289 863 OFFCURVE",
"302 976 OFFCURVE",
"331 1087 OFFCURVE",
"379 1188 OFFCURVE",
"451 1265 OFFCURVE",
"549 1311 OFFCURVE",
"613 1311 QCURVE SMOOTH",
"678 1311 OFFCURVE",
"776 1266 OFFCURVE",
"848 1189 OFFCURVE",
"896 1088 OFFCURVE",
"925 977 OFFCURVE",
"937 864 OFFCURVE",
"938 812 QCURVE",
"938 812 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 1 0 0 5 1 0 97 0 4 4 3 91 0 3 3 48 75 0 5 5 2 91 0 2 2 49 2 76 45 45 45 39 17 16 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Theta;
unicode = 0398;
},
{
glyphname = Lambda;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"995 0 LINE",
"1184 0 LINE",
"699 1456 LINE",
"538 1456 LINE",
"54 0 LINE",
"243 0 LINE",
"618 1180 LINE",
"618 1180 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
0 1 1 40 75 2 1 0 0 41 0 76 17 17 17 3 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Lambda;
unicode = 039B;
},
{
glyphname = Xi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"145 0 LINE",
"1079 0 LINE",
"1079 151 LINE",
"145 151 LINE",
"145 151 LINE"
);
},
{
closed = 1;
nodes = (
"230 678 LINE",
"984 678 LINE",
"984 830 LINE",
"230 830 LINE",
"230 830 LINE"
);
},
{
closed = 1;
nodes = (
"147 1304 LINE",
"1065 1304 LINE",
"1065 1456 LINE",
"147 1456 LINE",
"147 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 2 0 3 0 2 3 97 0 5 5 4 89 0 4 4 40 75 0 0 0 1 89 0 1 1 41 1 76 17 17 17 17 17 16 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Xi;
unicode = 039E;
},
{
glyphname = Pi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1066 1456 LINE",
"162 1456 LINE",
"162 0 LINE",
"347 0 LINE",
"347 1304 LINE",
"881 1304 LINE",
"881 0 LINE",
"1066 0 LINE",
"1066 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
0 1 1 3 89 0 3 3 40 75 2 1 0 0 41 0 76 17 17 17 16 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Pi;
unicode = 03A0;
},
{
glyphname = Sigma;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"793 742 LINE",
"342 1304 LINE",
"1085 1304 LINE",
"1085 1456 LINE",
"112 1456 LINE",
"112 1312 LINE",
"597 729 LINE",
"112 144 LINE",
"112 0 LINE",
"1135 0 LINE",
"1135 152 LINE",
"341 152 LINE",
"793 717 LINE",
"793 717 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
7 1 3 2 12 6 0 3 0 3 5 1 1 0 3 74 0 3 3 2 89 0 2 2 40 75 0 0 0 1 89 0 1 1 41 1 76 17 20 17 17 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Sigma;
unicode = 03A3;
},
{
glyphname = Phi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"707 1456 LINE",
"522 1456 LINE",
"522 1250 LINE",
"424 1243 OFFCURVE",
"259 1160 OFFCURVE",
"137 1022 OFFCURVE",
"69 834 OFFCURVE",
"69 723 QCURVE SMOOTH",
"69 611 OFFCURVE",
"137 423 OFFCURVE",
"259 285 OFFCURVE",
"424 203 OFFCURVE",
"522 196 QCURVE",
"522 0 LINE",
"707 0 LINE",
"707 196 LINE",
"804 203 OFFCURVE",
"969 287 OFFCURVE",
"1090 426 OFFCURVE",
"1159 613 OFFCURVE",
"1159 725 QCURVE SMOOTH",
"1159 836 OFFCURVE",
"1090 1022 OFFCURVE",
"969 1160 OFFCURVE",
"804 1242 OFFCURVE",
"707 1250 QCURVE",
"707 1250 LINE"
);
},
{
closed = 1;
nodes = (
"252 802 OFFCURVE",
"288 934 OFFCURVE",
"357 1032 OFFCURVE",
"457 1091 OFFCURVE",
"522 1098 QCURVE",
"522 348 LINE",
"457 354 OFFCURVE",
"357 413 OFFCURVE",
"288 510 OFFCURVE",
"252 643 OFFCURVE",
"252 723 QCURVE",
"252 723 LINE"
);
},
{
closed = 1;
nodes = (
"975 645 OFFCURVE",
"939 512 OFFCURVE",
"870 414 OFFCURVE",
"771 355 OFFCURVE",
"707 348 QCURVE",
"707 1098 LINE",
"771 1091 OFFCURVE",
"870 1032 OFFCURVE",
"939 935 OFFCURVE",
"975 804 OFFCURVE",
"975 725 QCURVE",
"975 725 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
43 42 32 31 23 13 10 0 8 0 1 1 74 0 1 1 40 75 0 0 0 41 0 76 28 27 2 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Phi;
unicode = 03A6;
},
{
glyphname = Psi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"711 1456 LINE",
"526 1456 LINE",
"526 480 LINE",
"472 492 OFFCURVE",
"383 548 OFFCURVE",
"320 638 OFFCURVE",
"286 762 OFFCURVE",
"286 842 QCURVE SMOOTH",
"286 1456 LINE",
"101 1456 LINE",
"101 842 LINE SMOOTH",
"101 724 OFFCURVE",
"163 541 OFFCURVE",
"275 411 OFFCURVE",
"431 335 OFFCURVE",
"526 324 QCURVE",
"526 0 LINE",
"711 0 LINE",
"711 324 LINE",
"805 335 OFFCURVE",
"963 411 OFFCURVE",
"1075 541 OFFCURVE",
"1138 724 OFFCURVE",
"1138 842 QCURVE SMOOTH",
"1138 1456 LINE",
"953 1456 LINE",
"953 842 LINE SMOOTH",
"953 762 OFFCURVE",
"918 637 OFFCURVE",
"855 547 OFFCURVE",
"766 491 OFFCURVE",
"711 479 QCURVE",
"711 479 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
29 16 13 0 4 1 0 1 74 3 2 2 0 0 40 75 0 1 1 41 1 76 23 23 23 22 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Psi;
unicode = 03A8;
},
{
glyphname = Omega;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"680 0 LINE",
"1132 0 LINE",
"1132 151 LINE",
"866 151 LINE",
"928 198 OFFCURVE",
"1026 333 OFFCURVE",
"1093 493 OFFCURVE",
"1129 670 OFFCURVE",
"1129 759 QCURVE SMOOTH",
"1129 838 LINE SMOOTH",
"1129 977 OFFCURVE",
"1055 1212 OFFCURVE",
"920 1381 OFFCURVE",
"729 1476 OFFCURVE",
"612 1476 QCURVE SMOOTH",
"495 1476 OFFCURVE",
"305 1381 OFFCURVE",
"170 1212 OFFCURVE",
"97 977 OFFCURVE",
"97 838 QCURVE SMOOTH",
"97 759 LINE SMOOTH",
"97 670 OFFCURVE",
"133 494 OFFCURVE",
"202 333 OFFCURVE",
"301 198 OFFCURVE",
"363 151 QCURVE",
"101 151 LINE",
"101 0 LINE",
"553 0 LINE",
"553 193 LINE",
"424 222 OFFCURVE",
"283 508 OFFCURVE",
"282 759 QCURVE SMOOTH",
"282 840 LINE SMOOTH",
"282 957 OFFCURVE",
"328 1138 OFFCURVE",
"413 1261 OFFCURVE",
"535 1325 OFFCURVE",
"612 1325 QCURVE SMOOTH",
"690 1325 OFFCURVE",
"814 1261 OFFCURVE",
"899 1138 OFFCURVE",
"944 957 OFFCURVE",
"944 840 QCURVE SMOOTH",
"944 759 LINE SMOOTH",
"944 510 OFFCURVE",
"808 222 OFFCURVE",
"680 193 QCURVE",
"680 193 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
18 0 2 2 0 1 74 0 0 0 3 91 0 3 3 48 75 4 1 2 2 1 89 5 1 1 1 41 1 76 17 26 42 17 25 40 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Omega;
unicode = "03A9,2126";
},
{
glyphname = alpha;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"895 1082 LINE",
"846 955 LINE",
"792 1026 OFFCURVE",
"637 1102 OFFCURVE",
"533 1102 QCURVE SMOOTH",
"434 1102 OFFCURVE",
"283 1014 OFFCURVE",
"181 859 OFFCURVE",
"129 646 OFFCURVE",
"129 521 QCURVE SMOOTH",
"129 500 LINE SMOOTH",
"129 388 OFFCURVE",
"181 197 OFFCURVE",
"283 58 OFFCURVE",
"433 -21 OFFCURVE",
"531 -21 QCURVE SMOOTH",
"634 -21 OFFCURVE",
"788 51 OFFCURVE",
"842 120 QCURVE",
"866 46 OFFCURVE",
"965 -21 OFFCURVE",
"1040 -21 QCURVE SMOOTH",
"1072 -21 OFFCURVE",
"1131 -8 OFFCURVE",
"1162 13 QCURVE",
"1139 151 LINE",
"1129 149 OFFCURVE",
"1102 145 OFFCURVE",
"1087 145 QCURVE SMOOTH",
"1069 145 OFFCURVE",
"1040 158 OFFCURVE",
"1019 188 OFFCURVE",
"1007 239 OFFCURVE",
"1007 277 QCURVE SMOOTH",
"1007 1082 LINE",
"1007 1082 LINE"
);
},
{
closed = 1;
nodes = (
"314 521 LINE SMOOTH",
"314 606 OFFCURVE",
"342 761 OFFCURVE",
"405 880 OFFCURVE",
"506 950 OFFCURVE",
"578 950 QCURVE SMOOTH",
"621 950 OFFCURVE",
"694 929 OFFCURVE",
"755 891 OFFCURVE",
"803 839 OFFCURVE",
"822 808 QCURVE",
"822 277 LINE",
"784 212 OFFCURVE",
"665 130 OFFCURVE",
"576 130 QCURVE SMOOTH",
"505 130 OFFCURVE",
"405 190 OFFCURVE",
"342 291 OFFCURVE",
"314 425 OFFCURVE",
"314 500 QCURVE",
"314 500 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
33 1 6 3 44 43 2 0 6 16 10 2 1 0 3 74 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
33 1 6 4 44 43 2 0 6 16 10 2 1 0 3 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
33 1 6 4 44 43 2 0 6 16 10 2 1 5 3 74 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 25 values pushed */
0 6 6 3 91 7 4 2 3 3 51 75 5 1 0 0 1 91 2 1 1 1 49 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
7 1 4 4 43 75 0 6 6 3 91 0 3 3 51 75 5 1 0 0 1 91 2 1 1 1 49 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 0 6 5 6 0 5 112 7 1 4 4 43 75 0 6 6 3 91 0 3 3 51 75 0 5 5 1 91 2 1 1 1 49 1 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
0 0 50 48 41 39 0 34 0 34 41 36 37 37 8 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = alpha;
unicode = 03B1;
},
{
glyphname = beta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"527 1476 OFFCURVE",
"366 1412 OFFCURVE",
"245 1302 OFFCURVE",
"174 1155 OFFCURVE",
"174 1073 QCURVE SMOOTH",
"174 -384 LINE",
"360 -384 LINE",
"360 75 LINE",
"422 25 OFFCURVE",
"580 -21 OFFCURVE",
"661 -21 QCURVE SMOOTH",
"759 -21 OFFCURVE",
"925 38 OFFCURVE",
"1047 152 OFFCURVE",
"1115 317 OFFCURVE",
"1115 424 QCURVE SMOOTH",
"1115 555 OFFCURVE",
"982 749 OFFCURVE",
"861 793 QCURVE",
"949 840 OFFCURVE",
"1047 991 OFFCURVE",
"1047 1083 QCURVE SMOOTH",
"1047 1170 OFFCURVE",
"986 1314 OFFCURVE",
"874 1419 OFFCURVE",
"716 1476 OFFCURVE",
"619 1476 QCURVE",
"619 1476 LINE"
);
},
{
closed = 1;
nodes = (
"531 858 LINE",
"531 706 LINE",
"674 706 LINE SMOOTH",
"735 706 OFFCURVE",
"830 656 OFFCURVE",
"896 575 OFFCURVE",
"930 473 OFFCURVE",
"930 420 QCURVE SMOOTH",
"930 357 OFFCURVE",
"890 250 OFFCURVE",
"816 173 OFFCURVE",
"709 130 OFFCURVE",
"642 130 QCURVE SMOOTH",
"549 130 OFFCURVE",
"405 193 OFFCURVE",
"360 246 QCURVE",
"360 1073 LINE SMOOTH",
"360 1126 OFFCURVE",
"400 1218 OFFCURVE",
"469 1286 OFFCURVE",
"564 1325 OFFCURVE",
"619 1325 QCURVE SMOOTH",
"677 1325 OFFCURVE",
"768 1285 OFFCURVE",
"830 1219 OFFCURVE",
"862 1133 OFFCURVE",
"862 1087 QCURVE SMOOTH",
"862 1036 OFFCURVE",
"833 952 OFFCURVE",
"773 892 OFFCURVE",
"679 858 OFFCURVE",
"615 858 QCURVE",
"615 858 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
8 1 6 3 43 1 5 6 19 1 1 5 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
8 1 3 0 6 5 3 6 99 0 4 4 0 91 7 1 0 0 48 75 0 5 5 1 91 0 1 1 49 75 0 2 2 45 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 2 1 2 115 8 1 3 0 6 5 3 6 99 0 4 4 0 91 7 1 0 0 48 75 0 5 5 1 91 0 1 1 49 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 25 values pushed */
28 27 1 0 57 55 47 45 38 36 27 58 28 58 21 20 17 15 0 26 1 26 9 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = beta;
unicode = 03B2;
},
{
glyphname = gamma;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"651 298 LINE",
"625 201 LINE",
"601 298 LINE",
"261 1082 LINE",
"71 1082 LINE",
"530 54 LINE",
"530 -416 LINE",
"716 -416 LINE",
"716 47 LINE",
"1174 1082 LINE",
"984 1082 LINE",
"984 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
9 5 2 3 1 0 1 74 2 1 0 0 43 75 0 1 1 45 1 76 18 18 16 3 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = gamma;
unicode = 03B3;
},
{
glyphname = delta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"263 1222 OFFCURVE",
"293 1141 OFFCURVE",
"347 1072 OFFCURVE",
"423 1018 OFFCURVE",
"470 999 QCURVE",
"466 988 LINE",
"394 971 OFFCURVE",
"267 889 OFFCURVE",
"174 769 OFFCURVE",
"120 617 OFFCURVE",
"120 530 QCURVE SMOOTH",
"120 509 LINE SMOOTH",
"120 396 OFFCURVE",
"188 203 OFFCURVE",
"318 61 OFFCURVE",
"505 -20 OFFCURVE",
"625 -20 QCURVE SMOOTH",
"743 -20 OFFCURVE",
"929 61 OFFCURVE",
"1058 203 OFFCURVE",
"1126 396 OFFCURVE",
"1126 509 QCURVE SMOOTH",
"1126 530 LINE SMOOTH",
"1126 737 OFFCURVE",
"903 1013 OFFCURVE",
"683 1086 QCURVE SMOOTH",
"616 1109 OFFCURVE",
"527 1157 OFFCURVE",
"473 1205 OFFCURVE",
"450 1252 OFFCURVE",
"450 1274 QCURVE SMOOTH",
"450 1305 OFFCURVE",
"478 1356 OFFCURVE",
"528 1392 OFFCURVE",
"597 1412 OFFCURVE",
"639 1412 QCURVE SMOOTH",
"679 1412 OFFCURVE",
"757 1399 OFFCURVE",
"829 1380 OFFCURVE",
"892 1358 OFFCURVE",
"915 1349 QCURVE",
"956 1479 LINE",
"881 1517 OFFCURVE",
"722 1564 OFFCURVE",
"642 1564 QCURVE SMOOTH",
"556 1564 OFFCURVE",
"416 1524 OFFCURVE",
"317 1448 OFFCURVE",
"263 1338 OFFCURVE",
"263 1269 QCURVE",
"263 1269 LINE"
);
},
{
closed = 1;
nodes = (
"306 530 LINE SMOOTH",
"306 606 OFFCURVE",
"346 745 OFFCURVE",
"426 850 OFFCURVE",
"546 911 OFFCURVE",
"627 910 QCURVE",
"698 898 OFFCURVE",
"813 823 OFFCURVE",
"895 718 OFFCURVE",
"940 593 OFFCURVE",
"940 530 QCURVE SMOOTH",
"940 509 LINE SMOOTH",
"940 432 OFFCURVE",
"902 294 OFFCURVE",
"824 191 OFFCURVE",
"706 130 OFFCURVE",
"625 130 QCURVE SMOOTH",
"543 130 OFFCURVE",
"423 191 OFFCURVE",
"344 294 OFFCURVE",
"306 432 OFFCURVE",
"306 509 QCURVE",
"306 509 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
8 1 1 0 44 9 2 4 1 2 74 0 4 1 3 1 4 3 112 0 0 0 1 4 0 1 99 0 3 3 2 91 0 2 2 49 2 76 67 66 56 54 34 32 39 36 5 7 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = delta;
unicode = 03B4;
},
{
glyphname = epsilon;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"861 478 LINE",
"861 626 LINE",
"618 626 LINE SMOOTH",
"544 626 OFFCURVE",
"440 648 OFFCURVE",
"374 690 OFFCURVE",
"344 749 OFFCURVE",
"344 786 QCURVE SMOOTH",
"344 820 OFFCURVE",
"377 880 OFFCURVE",
"447 925 OFFCURVE",
"555 951 OFFCURVE",
"630 951 QCURVE SMOOTH",
"688 951 OFFCURVE",
"792 925 OFFCURVE",
"870 880 OFFCURVE",
"917 817 OFFCURVE",
"917 780 QCURVE",
"1102 780 LINE",
"1101 855 OFFCURVE",
"1025 974 OFFCURVE",
"896 1057 OFFCURVE",
"725 1101 OFFCURVE",
"630 1101 QCURVE SMOOTH",
"522 1101 OFFCURVE",
"347 1061 OFFCURVE",
"224 982 OFFCURVE",
"158 865 OFFCURVE",
"158 787 QCURVE SMOOTH",
"158 712 OFFCURVE",
"263 591 OFFCURVE",
"358 556 QCURVE",
"252 525 OFFCURVE",
"139 399 OFFCURVE",
"139 304 QCURVE SMOOTH",
"139 226 OFFCURVE",
"211 106 OFFCURVE",
"342 23 OFFCURVE",
"522 -20 OFFCURVE",
"630 -20 QCURVE SMOOTH",
"690 -20 OFFCURVE",
"809 -3 OFFCURVE",
"917 34 OFFCURVE",
"1011 89 OFFCURVE",
"1080 164 OFFCURVE",
"1119 261 OFFCURVE",
"1120 320 QCURVE",
"935 320 LINE",
"935 281 OFFCURVE",
"889 212 OFFCURVE",
"808 159 OFFCURVE",
"696 129 OFFCURVE",
"630 129 QCURVE SMOOTH",
"556 129 OFFCURVE",
"442 156 OFFCURVE",
"365 203 OFFCURVE",
"325 267 OFFCURVE",
"325 304 QCURVE SMOOTH",
"325 397 OFFCURVE",
"473 478 OFFCURVE",
"618 478 QCURVE",
"618 478 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
29 1 0 7 1 74 0 5 6 7 6 5 7 112 0 2 0 1 0 2 1 112 0 7 8 1 0 2 7 0 99 0 6 6 4 91 0 4 4 51 75 0 1 1 3 91 0 3 3 49 3 76 1 0 59 57 49 47 43 42 38 36 22 20 14 13 9 7 0 60 1 60 9 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = epsilon;
unicode = 03B5;
},
{
glyphname = zeta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"117 1456 LINE",
"117 1304 LINE",
"841 1304 LINE",
"535 988 LINE",
"443 901 OFFCURVE",
"309 737 OFFCURVE",
"222 585 OFFCURVE",
"180 450 OFFCURVE",
"180 393 QCURVE SMOOTH",
"180 312 OFFCURVE",
"218 190 OFFCURVE",
"299 101 OFFCURVE",
"426 42 OFFCURVE",
"515 26 QCURVE SMOOTH",
"696 -9 LINE SMOOTH",
"776 -25 OFFCURVE",
"851 -81 OFFCURVE",
"851 -116 QCURVE SMOOTH",
"851 -160 OFFCURVE",
"801 -245 OFFCURVE",
"752 -299 QCURVE",
"850 -383 LINE",
"878 -361 OFFCURVE",
"941 -292 OFFCURVE",
"993 -213 OFFCURVE",
"1028 -127 OFFCURVE",
"1029 -88 QCURVE SMOOTH",
"1029 -26 OFFCURVE",
"988 49 OFFCURVE",
"918 95 OFFCURVE",
"822 121 OFFCURVE",
"768 133 QCURVE SMOOTH",
"547 183 LINE SMOOTH",
"457 201 OFFCURVE",
"365 299 OFFCURVE",
"365 398 QCURVE SMOOTH",
"365 476 OFFCURVE",
"406 606 OFFCURVE",
"483 726 OFFCURVE",
"593 843 OFFCURVE",
"662 909 QCURVE",
"1071 1336 LINE",
"1071 1456 LINE",
"1071 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
1 1 0 1 1 74 22 21 2 0 71 0 0 0 1 89 2 1 1 1 40 0 76 0 0 0 42 0 42 41 40 3 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = zeta;
unicode = 03B6;
},
{
glyphname = eta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"164 1082 LINE",
"164 0 LINE",
"350 0 LINE",
"350 808 LINE",
"389 873 OFFCURVE",
"525 950 OFFCURVE",
"626 950 QCURVE SMOOTH",
"753 950 OFFCURVE",
"881 825 OFFCURVE",
"881 681 QCURVE SMOOTH",
"881 -415 LINE",
"1067 -415 LINE",
"1067 685 LINE SMOOTH",
"1067 800 OFFCURVE",
"1013 959 OFFCURVE",
"913 1058 OFFCURVE",
"771 1102 OFFCURVE",
"681 1102 QCURVE SMOOTH",
"569 1101 OFFCURVE",
"399 1006 OFFCURVE",
"344 922 QCURVE",
"331 1082 LINE",
"331 1082 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
18 1 2 3 2 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 2 0 91 5 4 2 0 0 51 75 0 3 3 41 75 0 1 1 45 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
5 1 4 4 43 75 0 2 2 0 91 0 0 0 51 75 0 3 3 41 75 0 1 1 45 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
0 0 0 21 0 21 19 35 21 35 6 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = eta;
unicode = 03B7;
},
{
glyphname = theta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1048 898 LINE SMOOTH",
"1048 1036 OFFCURVE",
"990 1251 OFFCURVE",
"880 1400 OFFCURVE",
"719 1477 OFFCURVE",
"616 1477 QCURVE SMOOTH",
"514 1477 OFFCURVE",
"353 1400 OFFCURVE",
"243 1251 OFFCURVE",
"185 1036 OFFCURVE",
"185 898 QCURVE SMOOTH",
"185 557 LINE SMOOTH",
"185 419 OFFCURVE",
"244 204 OFFCURVE",
"355 57 OFFCURVE",
"516 -20 OFFCURVE",
"618 -20 QCURVE SMOOTH",
"721 -20 OFFCURVE",
"881 57 OFFCURVE",
"991 204 OFFCURVE",
"1048 419 OFFCURVE",
"1048 557 QCURVE",
"1048 557 LINE"
);
},
{
closed = 1;
nodes = (
"863 518 LINE SMOOTH",
"863 332 OFFCURVE",
"745 130 OFFCURVE",
"618 130 QCURVE SMOOTH",
"491 130 OFFCURVE",
"370 332 OFFCURVE",
"370 518 QCURVE SMOOTH",
"370 659 LINE",
"863 659 LINE",
"863 659 LINE"
);
},
{
closed = 1;
nodes = (
"370 939 LINE SMOOTH",
"370 1125 OFFCURVE",
"489 1325 OFFCURVE",
"616 1325 QCURVE SMOOTH",
"744 1325 OFFCURVE",
"863 1125 OFFCURVE",
"863 939 QCURVE SMOOTH",
"863 810 LINE",
"370 810 LINE",
"370 810 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
16 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 4 0 2 3 4 2 97 0 5 5 1 91 0 1 1 48 75 0 3 3 0 91 0 0 0 49 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 4 0 2 3 4 2 97 0 5 5 1 91 0 1 1 50 75 0 3 3 0 91 0 0 0 49 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
35 19 35 21 41 36 6 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = theta;
unicode = 03B8;
},
{
glyphname = iota;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"184 921 LINE",
"536 921 LINE",
"536 332 LINE SMOOTH",
"536 231 OFFCURVE",
"578 96 OFFCURVE",
"657 14 OFFCURVE",
"770 -20 OFFCURVE",
"842 -20 QCURVE SMOOTH",
"904 -20 OFFCURVE",
"1020 6 OFFCURVE",
"1082 50 QCURVE",
"1041 180 LINE",
"1012 163 OFFCURVE",
"934 135 OFFCURVE",
"889 135 QCURVE SMOOTH",
"856 135 OFFCURVE",
"796 145 OFFCURVE",
"749 182 OFFCURVE",
"722 257 OFFCURVE",
"722 322 QCURVE SMOOTH",
"721 1082 LINE",
"184 1082 LINE",
"184 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
10 1 1 3 11 1 2 1 2 74 0 3 3 0 89 0 0 0 43 75 0 1 1 2 91 0 2 2 49 2 76 21 37 37 16 4 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = iota;
unicode = 03B9;
},
{
glyphname = lambda;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"509 686 LINE",
"538 805 LINE",
"750 250 LINE SMOOTH",
"774 184 OFFCURVE",
"831 84 OFFCURVE",
"904 17 OFFCURVE",
"996 -17 OFFCURVE",
"1055 -17 QCURVE SMOOTH",
"1067 -17 OFFCURVE",
"1103 -8 OFFCURVE",
"1114 -2 QCURVE",
"1116 149 LINE",
"1107 147 OFFCURVE",
"1097 146 OFFCURVE",
"1088 144 OFFCURVE",
"1078 144 OFFCURVE",
"1070 144 QCURVE SMOOTH",
"1046 144 OFFCURVE",
"1004 168 OFFCURVE",
"970 209 OFFCURVE",
"941 265 OFFCURVE",
"931 298 QCURVE",
"569 1248 LINE SMOOTH",
"554 1288 OFFCURVE",
"505 1383 OFFCURVE",
"430 1464 OFFCURVE",
"324 1518 OFFCURVE",
"252 1518 QCURVE SMOOTH",
"227 1518 OFFCURVE",
"167 1508 OFFCURVE",
"149 1503 QCURVE",
"150 1361 LINE",
"163 1362 OFFCURVE",
"203 1366 OFFCURVE",
"216 1366 QCURVE SMOOTH",
"250 1366 OFFCURVE",
"305 1333 OFFCURVE",
"349 1279 OFFCURVE",
"383 1210 OFFCURVE",
"397 1175 QCURVE SMOOTH",
"452 1032 LINE",
"57 0 LINE",
"263 0 LINE",
"263 0 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 16 values pushed */
12 1 1 2 41 31 2 3 3 1 2 74 32 1 0 71 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 16 values pushed */
12 1 1 2 41 31 2 3 3 1 32 1 4 0 3 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 48 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 50 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 48 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
15 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 50 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
16 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 48 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 50 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 48 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 50 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 48 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 1 1 2 91 0 2 2 50 75 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 20 values pushed */
0 2 0 1 3 2 1 99 0 3 3 0 91 4 1 0 0 41 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 24 values pushed */
0 2 0 1 3 2 1 99 0 0 0 41 75 0 3 3 4 91 0 4 4 49 4 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
40 25 38 22 16 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = lambda;
unicode = 03BB;
},
{
glyphname = xi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1041 1437 LINE",
"993 1454 OFFCURVE",
"853 1476 OFFCURVE",
"782 1476 QCURVE SMOOTH",
"656 1476 OFFCURVE",
"456 1431 OFFCURVE",
"315 1343 OFFCURVE",
"240 1215 OFFCURVE",
"240 1132 QCURVE SMOOTH",
"240 1083 OFFCURVE",
"278 996 OFFCURVE",
"349 922 OFFCURVE",
"451 863 OFFCURVE",
"516 842 QCURVE",
"437 820 OFFCURVE",
"311 748 OFFCURVE",
"222 650 OFFCURVE",
"175 524 OFFCURVE",
"175 448 QCURVE SMOOTH",
"175 336 OFFCURVE",
"247 182 OFFCURVE",
"379 79 OFFCURVE",
"565 14 OFFCURVE",
"679 -8 QCURVE SMOOTH",
"737 -21 LINE SMOOTH",
"814 -38 OFFCURVE",
"892 -81 OFFCURVE",
"893 -125 QCURVE SMOOTH",
"893 -154 OFFCURVE",
"880 -199 OFFCURVE",
"855 -240 OFFCURVE",
"819 -282 OFFCURVE",
"795 -309 QCURVE",
"892 -393 LINE",
"919 -371 OFFCURVE",
"981 -303 OFFCURVE",
"1034 -224 OFFCURVE",
"1069 -140 OFFCURVE",
"1070 -101 QCURVE SMOOTH",
"1070 -40 OFFCURVE",
"1029 34 OFFCURVE",
"958 79 OFFCURVE",
"863 104 OFFCURVE",
"809 117 QCURVE SMOOTH",
"698 142 LINE SMOOTH",
"631 154 OFFCURVE",
"508 200 OFFCURVE",
"415 274 OFFCURVE",
"360 376 OFFCURVE",
"360 444 QCURVE SMOOTH",
"360 609 OFFCURVE",
"587 765 OFFCURVE",
"808 765 QCURVE SMOOTH",
"950 765 LINE",
"950 917 LINE",
"808 917 LINE SMOOTH",
"706 917 OFFCURVE",
"561 947 OFFCURVE",
"468 1004 OFFCURVE",
"426 1085 OFFCURVE",
"426 1136 QCURVE SMOOTH",
"426 1175 OFFCURVE",
"467 1243 OFFCURVE",
"554 1294 OFFCURVE",
"689 1324 OFFCURVE",
"784 1324 QCURVE SMOOTH",
"845 1324 OFFCURVE",
"958 1303 OFFCURVE",
"1015 1288 QCURVE",
"1015 1288 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
68 1 0 3 55 1 2 1 2 74 36 35 2 2 71 0 1 0 2 1 2 95 0 0 0 3 91 0 3 3 48 0 76 66 64 33 40 34 4 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = xi;
unicode = 03BE;
},
{
glyphname = pi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1100 1082 LINE",
"89 1082 LINE",
"89 929 LINE",
"221 929 LINE",
"221 0 LINE",
"406 0 LINE",
"406 929 LINE",
"772 929 LINE",
"772 278 LINE SMOOTH",
"772 194 OFFCURVE",
"804 80 OFFCURVE",
"865 11 OFFCURVE",
"955 -19 OFFCURVE",
"1012 -19 QCURVE SMOOTH",
"1059 -19 OFFCURVE",
"1146 0 OFFCURVE",
"1193 32 QCURVE",
"1152 162 LINE",
"1135 153 OFFCURVE",
"1086 137 OFFCURVE",
"1060 137 QCURVE SMOOTH",
"1038 137 OFFCURVE",
"1001 145 OFFCURVE",
"973 173 OFFCURVE",
"957 224 OFFCURVE",
"957 268 QCURVE SMOOTH",
"957 929 LINE",
"1100 929 LINE",
"1100 929 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 10 values pushed */
10 1 1 0 11 1 2 1 2 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 10 values pushed */
10 1 1 0 11 1 4 1 2 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
5 3 2 0 0 6 89 0 6 6 43 75 0 1 1 2 91 4 1 2 2 49 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 28 values pushed */
5 3 2 0 0 6 89 0 6 6 43 75 0 4 4 41 75 0 1 1 2 91 0 2 2 49 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
17 17 17 21 37 37 16 7 7 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = pi;
unicode = 03C0;
},
{
glyphname = rho;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1094 521 LINE SMOOTH",
"1094 647 OFFCURVE",
"1037 859 OFFCURVE",
"922 1014 OFFCURVE",
"747 1102 OFFCURVE",
"630 1102 QCURVE SMOOTH",
"534 1102 OFFCURVE",
"365 1034 OFFCURVE",
"238 901 OFFCURVE",
"165 705 OFFCURVE",
"165 578 QCURVE SMOOTH",
"165 577 LINE",
"165 -416 LINE",
"350 -416 LINE",
"350 112 LINE",
"409 48 OFFCURVE",
"572 -20 OFFCURVE",
"678 -20 QCURVE SMOOTH",
"780 -20 OFFCURVE",
"935 58 OFFCURVE",
"1040 197 OFFCURVE",
"1094 388 OFFCURVE",
"1094 500 QCURVE",
"1094 500 LINE"
);
},
{
closed = 1;
nodes = (
"909 500 LINE SMOOTH",
"909 425 OFFCURVE",
"877 291 OFFCURVE",
"808 189 OFFCURVE",
"699 130 OFFCURVE",
"623 130 QCURVE SMOOTH",
"572 130 OFFCURVE",
"488 153 OFFCURVE",
"421 194 OFFCURVE",
"369 251 OFFCURVE",
"350 284 QCURVE",
"350 577 LINE SMOOTH",
"350 618 OFFCURVE",
"365 705 OFFCURVE",
"394 788 OFFCURVE",
"439 862 OFFCURVE",
"501 918 OFFCURVE",
"581 950 OFFCURVE",
"630 950 QCURVE SMOOTH",
"707 950 OFFCURVE",
"813 880 OFFCURVE",
"879 762 OFFCURVE",
"909 606 OFFCURVE",
"909 521 QCURVE",
"909 521 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
36 1 4 3 8 1 0 4 2 74 0 3 3 2 91 0 2 2 51 75 0 4 4 0 91 0 0 0 49 75 0 1 1 45 1 76 43 41 38 19 36 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = rho;
unicode = 03C1;
},
{
glyphname = sigma1;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"495 1102 OFFCURVE",
"312 1014 OFFCURVE",
"186 865 OFFCURVE",
"120 670 OFFCURVE",
"120 562 QCURVE SMOOTH",
"120 520 LINE SMOOTH",
"120 415 OFFCURVE",
"187 240 OFFCURVE",
"318 107 OFFCURVE",
"514 19 OFFCURVE",
"644 0 QCURVE SMOOTH",
"752 -14 OFFCURVE",
"864 -63 OFFCURVE",
"863 -114 QCURVE SMOOTH",
"863 -154 OFFCURVE",
"831 -214 OFFCURVE",
"784 -259 OFFCURVE",
"730 -290 OFFCURVE",
"708 -300 QCURVE",
"785 -423 LINE",
"830 -403 OFFCURVE",
"920 -343 OFFCURVE",
"993 -263 OFFCURVE",
"1039 -164 OFFCURVE",
"1040 -105 QCURVE SMOOTH",
"1040 -39 OFFCURVE",
"988 48 OFFCURVE",
"890 104 OFFCURVE",
"752 137 OFFCURVE",
"666 149 QCURVE SMOOTH",
"574 162 OFFCURVE",
"438 231 OFFCURVE",
"349 329 OFFCURVE",
"306 452 OFFCURVE",
"306 520 QCURVE SMOOTH",
"306 562 LINE SMOOTH",
"306 632 OFFCURVE",
"341 770 OFFCURVE",
"416 881 OFFCURVE",
"533 950 OFFCURVE",
"614 950 QCURVE SMOOTH",
"685 950 OFFCURVE",
"791 912 OFFCURVE",
"861 847 OFFCURVE",
"897 759 OFFCURVE",
"897 709 QCURVE",
"1072 709 LINE",
"1072 802 OFFCURVE",
"1003 948 OFFCURVE",
"882 1049 OFFCURVE",
"714 1102 OFFCURVE",
"614 1102 QCURVE",
"614 1102 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
33 32 2 1 71 0 1 2 1 115 0 2 2 0 91 3 1 0 0 51 2 76 1 0 12 10 6 5 0 51 1 51 4 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = sigma1;
unicode = 03C2;
},
{
glyphname = sigma;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1158 1082 LINE",
"591 1082 LINE SMOOTH",
"477 1082 OFFCURVE",
"298 1000 OFFCURVE",
"174 858 OFFCURVE",
"109 663 OFFCURVE",
"109 551 QCURVE SMOOTH",
"109 529 LINE SMOOTH",
"109 412 OFFCURVE",
"174 212 OFFCURVE",
"298 64 OFFCURVE",
"478 -20 OFFCURVE",
"593 -20 QCURVE SMOOTH",
"707 -20 OFFCURVE",
"887 66 OFFCURVE",
"1010 208 OFFCURVE",
"1075 392 OFFCURVE",
"1075 491 QCURVE SMOOTH",
"1075 514 LINE SMOOTH",
"1075 646 OFFCURVE",
"972 857 OFFCURVE",
"875 929 QCURVE",
"1158 929 LINE",
"1158 929 LINE"
);
},
{
closed = 1;
nodes = (
"294 551 LINE SMOOTH",
"294 627 OFFCURVE",
"330 764 OFFCURVE",
"403 868 OFFCURVE",
"515 929 OFFCURVE",
"591 929 QCURVE SMOOTH",
"668 929 OFFCURVE",
"781 868 OFFCURVE",
"854 764 OFFCURVE",
"890 627 OFFCURVE",
"890 551 QCURVE SMOOTH",
"890 529 LINE SMOOTH",
"890 449 OFFCURVE",
"855 304 OFFCURVE",
"781 194 OFFCURVE",
"669 130 OFFCURVE",
"593 130 QCURVE SMOOTH",
"516 130 OFFCURVE",
"403 194 OFFCURVE",
"330 304 OFFCURVE",
"294 449 OFFCURVE",
"294 529 QCURVE",
"294 529 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
4 1 0 0 2 91 0 2 2 43 75 0 3 3 1 91 0 1 1 49 1 76 41 37 41 40 16 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = sigma;
unicode = 03C3;
},
{
glyphname = tau;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1074 1082 LINE",
"173 1082 LINE",
"173 924 LINE",
"533 924 LINE",
"533 334 LINE SMOOTH",
"533 233 OFFCURVE",
"573 98 OFFCURVE",
"650 15 OFFCURVE",
"761 -21 OFFCURVE",
"833 -21 QCURVE SMOOTH",
"863 -21 OFFCURVE",
"922 -15 OFFCURVE",
"980 0 OFFCURVE",
"1039 27 OFFCURVE",
"1069 49 QCURVE",
"1028 180 LINE",
"1001 163 OFFCURVE",
"924 136 OFFCURVE",
"880 136 QCURVE SMOOTH",
"847 136 OFFCURVE",
"789 147 OFFCURVE",
"745 185 OFFCURVE",
"718 260 OFFCURVE",
"718 324 QCURVE SMOOTH",
"719 924 LINE",
"1074 924 LINE",
"1074 924 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
10 1 1 0 11 1 2 1 2 74 3 1 0 0 4 89 0 4 4 43 75 0 1 1 2 91 0 2 2 49 2 76 17 21 39 37 16 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = tau;
unicode = 03C4;
},
{
glyphname = upsilon;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"158 1082 LINE",
"158 465 LINE SMOOTH",
"158 340 OFFCURVE",
"220 157 OFFCURVE",
"338 38 OFFCURVE",
"509 -20 OFFCURVE",
"619 -20 QCURVE SMOOTH",
"745 -20 OFFCURVE",
"923 76 OFFCURVE",
"1035 237 OFFCURVE",
"1087 448 OFFCURVE",
"1087 562 QCURVE SMOOTH",
"1087 644 OFFCURVE",
"1069 791 OFFCURVE",
"1037 921 OFFCURVE",
"996 1034 OFFCURVE",
"973 1082 QCURVE",
"778 1082 LINE",
"830 957 OFFCURVE",
"899 696 OFFCURVE",
"902 562 QCURVE SMOOTH",
"902 484 OFFCURVE",
"868 330 OFFCURVE",
"797 207 OFFCURVE",
"687 130 OFFCURVE",
"610 130 QCURVE SMOOTH",
"550 130 OFFCURVE",
"451 167 OFFCURVE",
"381 248 OFFCURVE",
"343 374 OFFCURVE",
"343 463 QCURVE SMOOTH",
"343 1082 LINE",
"343 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
4 3 2 1 1 43 75 0 0 0 2 91 0 2 2 49 2 76 0 0 0 31 0 31 41 23 37 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = upsilon;
unicode = 03C5;
},
{
glyphname = phi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"525 -478 LINE",
"710 -478 LINE",
"710 -15 LINE",
"827 0 OFFCURVE",
"991 103 OFFCURVE",
"1095 255 OFFCURVE",
"1143 443 OFFCURVE",
"1143 544 QCURVE SMOOTH",
"1143 656 OFFCURVE",
"1086 853 OFFCURVE",
"986 998 OFFCURVE",
"852 1082 OFFCURVE",
"774 1082 QCURVE SMOOTH",
"710 1082 OFFCURVE",
"616 1041 OFFCURVE",
"555 972 OFFCURVE",
"525 883 OFFCURVE",
"525 835 QCURVE SMOOTH",
"525 143 LINE",
"462 161 OFFCURVE",
"374 244 OFFCURVE",
"320 353 OFFCURVE",
"295 481 OFFCURVE",
"295 545 QCURVE SMOOTH",
"297 597 OFFCURVE",
"316 705 OFFCURVE",
"355 810 OFFCURVE",
"417 908 OFFCURVE",
"462 949 QCURVE",
"361 1082 LINE",
"233 991 OFFCURVE",
"110 716 OFFCURVE",
"110 546 QCURVE SMOOTH",
"110 444 OFFCURVE",
"155 255 OFFCURVE",
"255 104 OFFCURVE",
"412 1 OFFCURVE",
"525 -14 QCURVE",
"525 -14 LINE"
);
},
{
closed = 1;
nodes = (
"710 842 LINE SMOOTH",
"711 881 OFFCURVE",
"741 929 OFFCURVE",
"774 929 QCURVE SMOOTH",
"820 929 OFFCURVE",
"888 861 OFFCURVE",
"933 752 OFFCURVE",
"956 614 OFFCURVE",
"958 544 QCURVE SMOOTH",
"958 481 OFFCURVE",
"931 352 OFFCURVE",
"871 241 OFFCURVE",
"777 159 OFFCURVE",
"710 141 QCURVE",
"710 141 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
9 1 2 0 38 35 19 0 4 1 2 2 74 8 1 0 72 0 1 2 1 115 0 2 2 0 91 0 0 0 43 2 76 49 47 37 36 26 24 3 7 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = phi;
unicode = 03C6;
},
{
glyphname = psi;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"515 1082 LINE",
"515 142 LINE",
"462 157 OFFCURVE",
"376 224 OFFCURVE",
"315 335 OFFCURVE",
"282 491 OFFCURVE",
"282 594 QCURVE SMOOTH",
"282 1082 LINE",
"97 1082 LINE",
"97 596 LINE SMOOTH",
"97 456 OFFCURVE",
"153 241 OFFCURVE",
"261 89 OFFCURVE",
"416 1 OFFCURVE",
"515 -13 QCURVE",
"515 -472 LINE",
"700 -472 LINE",
"700 -15 LINE",
"825 -1 OFFCURVE",
"997 104 OFFCURVE",
"1104 262 OFFCURVE",
"1152 460 OFFCURVE",
"1152 567 QCURVE SMOOTH",
"1152 731 OFFCURVE",
"1105 987 OFFCURVE",
"1073 1082 QCURVE",
"878 1082 LINE",
"916 957 OFFCURVE",
"965 701 OFFCURVE",
"967 567 QCURVE SMOOTH",
"967 499 OFFCURVE",
"938 361 OFFCURVE",
"875 244 OFFCURVE",
"773 158 OFFCURVE",
"700 140 QCURVE",
"700 1082 LINE",
"700 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
34 21 18 1 4 1 0 1 74 0 1 1 0 89 4 3 2 3 0 0 43 1 76 0 0 0 35 0 35 23 25 25 5 7 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = psi;
unicode = 03C8;
},
{
glyphname = omega;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"175 1082 LINE",
"135 985 OFFCURVE",
"79 725 OFFCURVE",
"79 560 QCURVE SMOOTH",
"79 449 OFFCURVE",
"109 240 OFFCURVE",
"179 78 OFFCURVE",
"293 -20 OFFCURVE",
"376 -20 QCURVE SMOOTH",
"466 -20 OFFCURVE",
"587 89 OFFCURVE",
"620 191 QCURVE",
"652 89 OFFCURVE",
"774 -20 OFFCURVE",
"864 -20 QCURVE SMOOTH",
"947 -20 OFFCURVE",
"1061 78 OFFCURVE",
"1131 240 OFFCURVE",
"1161 449 OFFCURVE",
"1161 560 QCURVE SMOOTH",
"1161 725 OFFCURVE",
"1105 985 OFFCURVE",
"1065 1082 QCURVE",
"871 1082 LINE",
"916 956 OFFCURVE",
"974 695 OFFCURVE",
"976 560 QCURVE SMOOTH",
"976 475 OFFCURVE",
"964 319 OFFCURVE",
"935 201 OFFCURVE",
"888 130 OFFCURVE",
"854 130 QCURVE SMOOTH",
"788 130 OFFCURVE",
"713 296 OFFCURVE",
"713 471 QCURVE SMOOTH",
"713 770 LINE",
"527 770 LINE",
"527 471 LINE SMOOTH",
"527 296 OFFCURVE",
"452 130 OFFCURVE",
"385 130 QCURVE SMOOTH",
"351 130 OFFCURVE",
"305 201 OFFCURVE",
"276 321 OFFCURVE",
"264 476 OFFCURVE",
"264 560 QCURVE SMOOTH",
"266 695 OFFCURVE",
"324 956 OFFCURVE",
"369 1082 QCURVE",
"369 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
37 1 0 1 1 74 0 1 3 0 3 1 0 112 7 6 2 3 3 43 75 2 1 0 0 4 92 5 1 4 4 49 4 76 0 0 0 48 0 48 36 39 23 35 19 39 8 7 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = omega;
unicode = 03C9;
},
{
glyphname = uni03D1;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1168 776 LINE",
"1136 768 OFFCURVE",
"1068 755 OFFCURVE",
"1033 752 QCURVE",
"1033 1105 LINE SMOOTH",
"1033 1193 OFFCURVE",
"987 1331 OFFCURVE",
"901 1427 OFFCURVE",
"775 1478 OFFCURVE",
"696 1478 QCURVE SMOOTH",
"622 1478 OFFCURVE",
"500 1431 OFFCURVE",
"412 1341 OFFCURVE",
"362 1212 OFFCURVE",
"362 1131 QCURVE SMOOTH",
"362 1116 LINE SMOOTH",
"362 1016 OFFCURVE",
"432 842 OFFCURVE",
"559 707 OFFCURVE",
"738 617 OFFCURVE",
"848 601 QCURVE",
"848 435 LINE SMOOTH",
"848 285 OFFCURVE",
"720 136 OFFCURVE",
"602 137 QCURVE SMOOTH",
"540 137 OFFCURVE",
"442 178 OFFCURVE",
"374 255 OFFCURVE",
"338 366 OFFCURVE",
"338 435 QCURVE SMOOTH",
"338 771 LINE",
"152 769 LINE",
"152 435 LINE SMOOTH",
"152 332 OFFCURVE",
"217 164 OFFCURVE",
"334 45 OFFCURVE",
"500 -20 OFFCURVE",
"602 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"859 40 OFFCURVE",
"971 156 OFFCURVE",
"1033 326 OFFCURVE",
"1033 435 QCURVE SMOOTH",
"1033 595 LINE",
"1110 603 OFFCURVE",
"1177 627 QCURVE",
"1177 627 LINE"
);
},
{
closed = 1;
nodes = (
"548 1131 LINE SMOOTH",
"548 1231 OFFCURVE",
"629 1320 OFFCURVE",
"696 1320 QCURVE SMOOTH",
"774 1320 OFFCURVE",
"848 1214 OFFCURVE",
"848 1105 QCURVE SMOOTH",
"848 763 LINE",
"777 779 OFFCURVE",
"665 845 OFFCURVE",
"588 937 OFFCURVE",
"548 1051 OFFCURVE",
"548 1114 QCURVE",
"548 1114 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
45 1 1 4 51 42 25 2 0 5 2 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
16 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 4 2 4 1 2 112 0 4 4 3 91 0 3 3 50 75 0 2 2 0 91 0 0 0 49 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 1 4 2 4 1 2 112 0 4 4 3 91 0 3 3 48 75 0 2 2 0 91 0 0 0 49 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 29 values pushed */
0 1 4 2 4 1 2 112 0 4 4 3 91 0 3 3 50 75 0 2 2 0 91 0 0 0 49 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
56 54 45 37 21 39 5 7 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni03D1;
unicode = 03D1;
},
{
glyphname = uni03D2;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"645 832 LINE",
"621 744 LINE",
"597 832 LINE",
"418 1239 LINE SMOOTH",
"392 1302 OFFCURVE",
"335 1390 OFFCURVE",
"272 1444 OFFCURVE",
"202 1467 OFFCURVE",
"163 1467 QCURVE SMOOTH",
"134 1467 OFFCURVE",
"81 1460 OFFCURVE",
"54 1443 QCURVE",
"77 1294 LINE",
"91 1303 OFFCURVE",
"120 1303 QCURVE SMOOTH",
"155 1303 OFFCURVE",
"214 1264 OFFCURVE",
"232 1225 QCURVE SMOOTH",
"530 576 LINE",
"530 0 LINE",
"714 0 LINE",
"714 580 LINE",
"1010 1225 LINE SMOOTH",
"1028 1265 OFFCURVE",
"1087 1303 OFFCURVE",
"1122 1303 QCURVE SMOOTH",
"1152 1303 OFFCURVE",
"1166 1294 QCURVE",
"1188 1443 LINE",
"1161 1460 OFFCURVE",
"1108 1467 OFFCURVE",
"1080 1467 QCURVE SMOOTH",
"1040 1467 OFFCURVE",
"970 1444 OFFCURVE",
"907 1390 OFFCURVE",
"851 1302 OFFCURVE",
"825 1239 QCURVE",
"825 1239 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
25 8 2 1 0 35 24 18 15 9 5 2 1 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
3 1 1 1 0 91 4 1 0 0 40 75 0 2 2 41 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
3 1 1 1 0 91 4 1 0 0 48 75 0 2 2 41 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 18 values pushed */
3 1 1 1 0 91 4 1 0 0 40 75 0 2 2 41 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 18 values pushed */
3 1 1 1 0 91 4 1 0 0 48 75 0 2 2 41 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
36 36 20 36 36 5 7 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni03D2;
unicode = 03D2;
},
{
glyphname = uni03D6;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1174 1082 LINE",
"46 1082 LINE",
"46 929 LINE",
"151 929 LINE",
"118 823 OFFCURVE",
"77 572 OFFCURVE",
"77 432 QCURVE SMOOTH",
"77 343 OFFCURVE",
"106 180 OFFCURVE",
"171 55 OFFCURVE",
"278 -20 OFFCURVE",
"356 -20 QCURVE SMOOTH",
"446 -20 OFFCURVE",
"567 90 OFFCURVE",
"599 192 QCURVE",
"631 89 OFFCURVE",
"753 -20 OFFCURVE",
"843 -20 QCURVE SMOOTH",
"921 -20 OFFCURVE",
"1028 55 OFFCURVE",
"1093 180 OFFCURVE",
"1122 343 OFFCURVE",
"1122 432 QCURVE SMOOTH",
"1122 572 OFFCURVE",
"1080 823 OFFCURVE",
"1048 929 QCURVE",
"1174 929 LINE",
"1174 929 LINE"
);
},
{
closed = 1;
nodes = (
"936 371 OFFCURVE",
"926 261 OFFCURVE",
"902 179 OFFCURVE",
"863 130 OFFCURVE",
"834 130 QCURVE SMOOTH",
"767 130 OFFCURVE",
"693 296 OFFCURVE",
"693 471 QCURVE SMOOTH",
"693 722 LINE",
"507 722 LINE",
"507 471 LINE SMOOTH",
"507 296 OFFCURVE",
"433 130 OFFCURVE",
"366 130 QCURVE SMOOTH",
"336 130 OFFCURVE",
"297 180 OFFCURVE",
"273 263 OFFCURVE",
"263 372 OFFCURVE",
"263 431 QCURVE SMOOTH",
"265 555 OFFCURVE",
"312 808 OFFCURVE",
"350 929 QCURVE",
"849 929 LINE",
"887 808 OFFCURVE",
"934 555 OFFCURVE",
"936 431 QCURVE",
"936 431 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
12 1 6 7 1 74 0 7 0 6 0 7 6 112 5 3 2 0 0 4 89 0 4 4 43 75 8 1 6 6 1 91 2 1 1 1 49 1 76 35 19 39 20 17 23 36 39 16 9 7 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni03D6;
unicode = 03D6;
},
{
glyphname = uni0402;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1085 1456 LINE",
"42 1456 LINE",
"42 1304 LINE",
"389 1304 LINE",
"389 0 LINE",
"573 0 LINE",
"573 687 LINE",
"603 689 OFFCURVE",
"663 693 OFFCURVE",
"695 693 QCURVE SMOOTH",
"832 693 OFFCURVE",
"961 535 OFFCURVE",
"962 396 QCURVE SMOOTH",
"962 336 OFFCURVE",
"940 239 OFFCURVE",
"891 171 OFFCURVE",
"810 134 OFFCURVE",
"752 134 QCURVE",
"754 -11 LINE",
"946 -11 OFFCURVE",
"1148 198 OFFCURVE",
"1148 396 QCURVE SMOOTH",
"1148 502 OFFCURVE",
"1088 673 OFFCURVE",
"972 791 OFFCURVE",
"803 855 OFFCURVE",
"695 855 QCURVE SMOOTH",
"664 855 OFFCURVE",
"603 851 OFFCURVE",
"573 849 QCURVE",
"573 1304 LINE",
"1085 1304 LINE",
"1085 1304 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 0 4 3 1 4 99 6 1 0 0 7 89 0 7 7 22 75 0 3 3 2 91 5 1 2 2 23 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 0 4 3 1 4 99 6 1 0 0 7 89 0 7 7 22 75 0 3 3 2 91 5 1 2 2 30 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 0 4 3 1 4 99 6 1 0 0 7 89 0 7 7 22 75 0 3 3 2 91 5 1 2 2 23 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
44 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 1 0 4 3 1 4 99 6 1 0 0 7 89 0 7 7 22 75 0 3 3 2 91 5 1 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 35 values pushed */
0 1 0 4 3 1 4 99 6 1 0 0 7 89 0 7 7 22 75 0 5 5 23 75 0 3 3 2 91 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
17 17 17 70 17 22 65 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0402;
unicode = 0402;
},
{
glyphname = uni0404;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"946 439 LINE",
"936 362 OFFCURVE",
"893 247 OFFCURVE",
"818 170 OFFCURVE",
"709 131 OFFCURVE",
"634 131 QCURVE SMOOTH",
"555 131 OFFCURVE",
"436 198 OFFCURVE",
"355 316 OFFCURVE",
"314 477 OFFCURVE",
"314 572 QCURVE SMOOTH",
"314 660 LINE",
"885 660 LINE",
"885 812 LINE",
"314 812 LINE",
"314 887 LINE SMOOTH",
"314 981 OFFCURVE",
"355 1142 OFFCURVE",
"436 1259 OFFCURVE",
"555 1326 OFFCURVE",
"634 1326 QCURVE SMOOTH",
"709 1326 OFFCURVE",
"818 1284 OFFCURVE",
"892 1204 OFFCURVE",
"936 1086 OFFCURVE",
"946 1011 QCURVE",
"1131 1011 LINE",
"1121 1121 OFFCURVE",
"1049 1294 OFFCURVE",
"924 1414 OFFCURVE",
"748 1477 OFFCURVE",
"634 1477 QCURVE SMOOTH",
"517 1477 OFFCURVE",
"330 1390 OFFCURVE",
"199 1234 OFFCURVE",
"129 1016 OFFCURVE",
"129 885 QCURVE SMOOTH",
"129 572 LINE SMOOTH",
"129 441 OFFCURVE",
"199 224 OFFCURVE",
"330 67 OFFCURVE",
"517 -20 OFFCURVE",
"634 -20 QCURVE SMOOTH",
"748 -20 OFFCURVE",
"924 47 OFFCURVE",
"1049 169 OFFCURVE",
"1121 338 OFFCURVE",
"1131 439 QCURVE",
"1131 439 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
0 2 3 4 3 2 4 112 8 1 7 5 6 5 7 6 112 0 4 0 5 7 4 5 97 0 3 3 1 91 0 1 1 29 75 0 6 6 0 91 0 0 0 30 0 76 0 0 0 47 0 47 37 17 21 36 20 41 36 9 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0404;
unicode = 0404;
},
{
glyphname = uni0409;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"183 1456 LINE",
"180 772 LINE SMOOTH",
"179 466 OFFCURVE",
"124 151 OFFCURVE",
"52 151 QCURVE SMOOTH",
"30 151 LINE",
"30 0 LINE",
"62 0 LINE SMOOTH",
"147 0 OFFCURVE",
"263 103 OFFCURVE",
"333 301 OFFCURVE",
"364 588 OFFCURVE",
"364 772 QCURVE SMOOTH",
"365 1304 LINE",
"562 1304 LINE",
"562 0 LINE",
"838 0 LINE SMOOTH",
"922 0 OFFCURVE",
"1051 68 OFFCURVE",
"1137 187 OFFCURVE",
"1181 349 OFFCURVE",
"1181 443 QCURVE SMOOTH",
"1181 537 OFFCURVE",
"1137 699 OFFCURVE",
"1051 818 OFFCURVE",
"922 887 OFFCURVE",
"838 887 QCURVE SMOOTH",
"747 887 LINE",
"747 1456 LINE",
"747 1456 LINE"
);
},
{
closed = 1;
nodes = (
"838 735 LINE SMOOTH",
"881 735 OFFCURVE",
"942 685 OFFCURVE",
"980 603 OFFCURVE",
"997 499 OFFCURVE",
"997 445 QCURVE SMOOTH",
"997 390 OFFCURVE",
"980 285 OFFCURVE",
"943 202 OFFCURVE",
"882 151 OFFCURVE",
"838 151 QCURVE SMOOTH",
"747 151 LINE",
"747 735 LINE",
"747 735 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
0 0 9 1 7 4 0 7 99 0 2 2 5 89 8 1 5 5 22 75 6 1 4 4 1 91 3 1 1 1 23 1 76 29 29 0 0 29 41 29 40 32 30 0 28 0 28 33 37 17 40 33 10 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0409;
unicode = 0409;
},
{
glyphname = uni040A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"315 1456 LINE",
"131 1456 LINE",
"131 0 LINE",
"315 0 LINE",
"315 673 LINE",
"565 673 LINE",
"565 0 LINE",
"798 0 LINE SMOOTH",
"889 0 OFFCURVE",
"1026 65 OFFCURVE",
"1117 179 OFFCURVE",
"1163 334 OFFCURVE",
"1163 424 QCURVE SMOOTH",
"1163 514 OFFCURVE",
"1117 666 OFFCURVE",
"1026 777 OFFCURVE",
"889 839 OFFCURVE",
"798 839 QCURVE SMOOTH",
"749 839 LINE",
"749 1456 LINE",
"565 1456 LINE",
"565 825 LINE",
"315 825 LINE",
"315 825 LINE"
);
},
{
closed = 1;
nodes = (
"798 687 LINE SMOOTH",
"849 687 OFFCURVE",
"918 643 OFFCURVE",
"960 571 OFFCURVE",
"979 477 OFFCURVE",
"979 426 QCURVE SMOOTH",
"979 375 OFFCURVE",
"961 280 OFFCURVE",
"918 206 OFFCURVE",
"849 161 OFFCURVE",
"798 161 QCURVE SMOOTH",
"749 161 LINE",
"749 687 LINE",
"749 687 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
35 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
2 1 0 9 8 2 4 7 0 4 99 6 1 1 1 22 75 0 7 7 3 92 5 1 3 3 23 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 35 values pushed */
0 2 9 1 8 4 2 8 99 0 0 0 4 7 0 4 97 6 1 1 1 22 75 0 7 7 3 92 5 1 3 3 23 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
23 23 23 35 23 34 34 17 17 17 40 33 17 16 10 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni040A;
unicode = 040A;
},
{
glyphname = uni040B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1088 1456 LINE",
"67 1456 LINE",
"67 1304 LINE",
"413 1304 LINE",
"413 0 LINE",
"598 0 LINE",
"598 701 LINE",
"650 707 OFFCURVE",
"706 707 QCURVE SMOOTH",
"767 707 OFFCURVE",
"856 680 OFFCURVE",
"915 620 OFFCURVE",
"943 525 OFFCURVE",
"943 457 QCURVE SMOOTH",
"943 0 LINE",
"1128 0 LINE",
"1128 457 LINE SMOOTH",
"1128 563 OFFCURVE",
"1070 715 OFFCURVE",
"962 813 OFFCURVE",
"805 859 OFFCURVE",
"706 859 QCURVE SMOOTH",
"680 860 OFFCURVE",
"626 856 OFFCURVE",
"598 852 QCURVE",
"598 1304 LINE",
"1088 1304 LINE",
"1088 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
2 1 3 1 20 1 2 3 2 74 0 1 0 3 2 1 3 99 5 1 0 0 6 89 0 6 6 22 75 4 1 2 2 23 2 76 17 17 18 37 21 35 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni040B;
unicode = 040B;
},
{
glyphname = uni040F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"162 0 LINE",
"526 0 LINE",
"526 -359 LINE",
"711 -359 LINE",
"711 0 LINE",
"1066 0 LINE",
"1066 1456 LINE",
"881 1456 LINE",
"881 151 LINE",
"347 151 LINE",
"347 1456 LINE",
"162 1456 LINE",
"162 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
0 4 3 4 115 2 1 0 0 22 75 0 1 1 3 90 5 1 3 3 23 3 76 17 17 17 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni040F;
unicode = 040F;
},
{
glyphname = uni0411;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1053 1456 LINE",
"162 1456 LINE",
"162 0 LINE",
"614 0 LINE SMOOTH",
"730 0 OFFCURVE",
"911 63 OFFCURVE",
"1035 177 OFFCURVE",
"1100 337 OFFCURVE",
"1100 433 QCURVE SMOOTH",
"1100 530 OFFCURVE",
"1035 686 OFFCURVE",
"911 797 OFFCURVE",
"730 857 OFFCURVE",
"614 857 QCURVE SMOOTH",
"348 857 LINE",
"348 1304 LINE",
"1053 1304 LINE",
"1053 1304 LINE"
);
},
{
closed = 1;
nodes = (
"614 706 LINE SMOOTH",
"692 706 OFFCURVE",
"805 663 OFFCURVE",
"879 590 OFFCURVE",
"914 491 OFFCURVE",
"914 435 QCURVE SMOOTH",
"914 378 OFFCURVE",
"879 275 OFFCURVE",
"805 197 OFFCURVE",
"692 151 OFFCURVE",
"614 151 QCURVE SMOOTH",
"348 151 LINE",
"348 706 LINE",
"348 706 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 1 6 1 5 4 1 5 99 0 0 0 3 89 0 3 3 22 75 0 4 4 2 91 0 2 2 23 2 76 17 17 17 29 17 28 34 17 40 33 16 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0411;
unicode = 0411;
},
{
glyphname = uni0414;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1144 151 LINE",
"1017 151 LINE",
"1017 1456 LINE",
"368 1456 LINE",
"336 871 LINE SMOOTH",
"331 711 OFFCURVE",
"301 469 OFFCURVE",
"251 294 OFFCURVE",
"181 181 OFFCURVE",
"135 151 QCURVE",
"70 151 LINE",
"97 -359 LINE",
"254 -359 LINE",
"254 0 LINE",
"959 0 LINE",
"959 -357 LINE",
"1126 -357 LINE",
"1126 -357 LINE"
);
},
{
closed = 1;
nodes = (
"545 1304 LINE",
"832 1304 LINE",
"832 151 LINE",
"384 151 LINE",
"448 264 OFFCURVE",
"514 629 OFFCURVE",
"523 871 QCURVE",
"523 871 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
2 1 0 3 0 81 0 7 7 4 89 0 4 4 22 75 6 5 2 3 3 1 89 0 1 1 23 1 76 17 20 17 22 17 17 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0414;
unicode = 0414;
},
{
glyphname = uni0416;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"969 0 LINE",
"1198 0 LINE",
"928 729 LINE",
"1160 1456 LINE",
"944 1456 LINE",
"771 803 LINE",
"709 803 LINE",
"709 1456 LINE",
"526 1456 LINE",
"526 803 LINE",
"457 803 LINE",
"283 1456 LINE",
"68 1456 LINE",
"298 727 LINE",
"29 0 LINE",
"259 0 LINE",
"464 651 LINE",
"526 651 LINE",
"526 0 LINE",
"709 0 LINE",
"709 651 LINE",
"763 651 LINE",
"763 651 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
19 8 2 0 5 1 74 7 1 5 2 1 0 1 5 0 97 8 6 2 4 4 22 75 9 3 2 1 1 23 1 76 21 20 17 17 17 17 18 17 17 17 16 10 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0416;
unicode = 0416;
},
{
glyphname = uni0417;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"432 818 LINE",
"432 666 LINE",
"615 666 LINE SMOOTH",
"694 666 OFFCURVE",
"819 635 OFFCURVE",
"905 570 OFFCURVE",
"950 471 OFFCURVE",
"950 402 QCURVE SMOOTH",
"950 342 OFFCURVE",
"902 242 OFFCURVE",
"811 170 OFFCURVE",
"682 130 OFFCURVE",
"601 130 QCURVE SMOOTH",
"529 130 OFFCURVE",
"409 173 OFFCURVE",
"323 247 OFFCURVE",
"275 347 OFFCURVE",
"275 404 QCURVE",
"89 404 LINE",
"89 293 OFFCURVE",
"179 132 OFFCURVE",
"323 28 OFFCURVE",
"506 -21 OFFCURVE",
"601 -21 QCURVE SMOOTH",
"716 -21 OFFCURVE",
"912 35 OFFCURVE",
"1055 144 OFFCURVE",
"1136 303 OFFCURVE",
"1136 406 QCURVE SMOOTH",
"1136 535 OFFCURVE",
"1001 705 OFFCURVE",
"876 747 QCURVE",
"986 795 OFFCURVE",
"1113 959 OFFCURVE",
"1114 1062 QCURVE SMOOTH",
"1114 1164 OFFCURVE",
"1040 1320 OFFCURVE",
"905 1424 OFFCURVE",
"716 1476 OFFCURVE",
"601 1476 QCURVE SMOOTH",
"502 1476 OFFCURVE",
"324 1420 OFFCURVE",
"189 1317 OFFCURVE",
"110 1168 OFFCURVE",
"110 1075 QCURVE",
"295 1075 LINE",
"295 1129 OFFCURVE",
"344 1221 OFFCURVE",
"426 1288 OFFCURVE",
"538 1325 OFFCURVE",
"601 1325 QCURVE SMOOTH",
"683 1325 OFFCURVE",
"805 1285 OFFCURVE",
"887 1215 OFFCURVE",
"928 1121 OFFCURVE",
"928 1066 QCURVE SMOOTH",
"928 954 OFFCURVE",
"774 819 OFFCURVE",
"615 818 QCURVE",
"615 818 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
27 1 7 0 1 74 0 2 1 0 1 2 0 112 0 5 7 6 7 5 6 112 8 1 0 0 7 5 0 7 99 0 1 1 3 91 0 3 3 29 75 0 6 6 4 91 0 4 4 30 4 76 1 0 57 55 47 45 41 40 36 34 20 18 14 13 9 7 0 58 1 58 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0417;
unicode = 0417;
},
{
glyphname = uni0418;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"346 384 LINE",
"347 1456 LINE",
"162 1456 LINE",
"162 0 LINE",
"347 0 LINE",
"882 1073 LINE",
"881 0 LINE",
"1066 0 LINE",
"1066 1456 LINE",
"881 1456 LINE",
"881 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
9 4 2 1 0 1 74 3 1 0 0 22 75 2 1 1 1 23 1 76 17 18 17 16 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0418;
unicode = 0418;
},
{
glyphname = uni041B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"278 1456 LINE",
"274 680 LINE SMOOTH",
"274 420 OFFCURVE",
"189 151 OFFCURVE",
"87 151 QCURVE SMOOTH",
"47 151 LINE",
"47 0 LINE",
"98 0 LINE SMOOTH",
"198 0 OFFCURVE",
"336 91 OFFCURVE",
"421 265 OFFCURVE",
"459 518 OFFCURVE",
"459 680 QCURVE SMOOTH",
"461 1304 LINE",
"882 1304 LINE",
"882 0 LINE",
"1067 0 LINE",
"1067 1456 LINE",
"1067 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
0 1 1 4 89 5 1 4 4 22 75 0 3 3 0 91 2 1 0 0 23 0 76 0 0 0 17 0 17 33 37 17 17 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni041B;
unicode = 041B;
},
{
glyphname = uni0423;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"251 1456 LINE",
"43 1456 LINE",
"541 370 LINE",
"499 285 LINE SMOOTH",
"486 257 OFFCURVE",
"450 201 OFFCURVE",
"398 157 OFFCURVE",
"328 130 OFFCURVE",
"282 130 QCURVE SMOOTH",
"263 130 OFFCURVE",
"220 135 OFFCURVE",
"177 143 OFFCURVE",
"140 152 OFFCURVE",
"127 155 QCURVE",
"103 14 LINE",
"129 3 OFFCURVE",
"234 -21 OFFCURVE",
"302 -21 QCURVE SMOOTH",
"385 -21 OFFCURVE",
"504 21 OFFCURVE",
"588 93 OFFCURVE",
"647 188 OFFCURVE",
"670 240 QCURVE SMOOTH",
"1205 1456 LINE",
"990 1456 LINE",
"630 568 LINE",
"559 759 LINE",
"559 759 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
24 13 1 3 2 0 12 1 1 2 2 74 3 1 0 0 22 75 0 2 2 1 92 0 1 1 30 1 76 22 39 37 18 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0423;
unicode = 0423;
},
{
glyphname = uni0426;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"166 0 LINE",
"1020 0 LINE",
"1020 -351 LINE",
"1186 -351 LINE",
"1204 156 LINE",
"1057 156 LINE",
"1057 1456 LINE",
"872 1456 LINE",
"872 151 LINE",
"351 151 LINE",
"351 1456 LINE",
"166 1456 LINE",
"166 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
0 4 1 4 82 2 1 0 0 22 75 3 1 1 1 5 90 0 5 5 23 5 76 17 17 17 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0426;
unicode = 0426;
},
{
glyphname = uni0427;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"878 1456 LINE",
"878 757 LINE",
"806 733 OFFCURVE",
"662 704 OFFCURVE",
"579 704 QCURVE SMOOTH",
"522 704 OFFCURVE",
"438 733 OFFCURVE",
"383 802 OFFCURVE",
"356 915 OFFCURVE",
"356 1000 QCURVE SMOOTH",
"356 1456 LINE",
"171 1456 LINE",
"171 1000 LINE SMOOTH",
"171 879 OFFCURVE",
"226 709 OFFCURVE",
"330 601 OFFCURVE",
"482 552 OFFCURVE",
"579 552 QCURVE SMOOTH",
"627 552 OFFCURVE",
"708 559 OFFCURVE",
"779 573 OFFCURVE",
"845 591 OFFCURVE",
"878 603 QCURVE",
"878 0 LINE",
"1063 0 LINE",
"1063 1456 LINE",
"1063 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
24 1 3 2 3 1 1 3 2 74 0 3 0 1 0 3 1 99 5 4 2 2 2 22 75 0 0 0 23 0 76 0 0 0 25 0 25 37 21 37 17 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0427;
unicode = 0427;
},
{
glyphname = uni0428;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"125 1456 LINE",
"125 0 LINE",
"1104 0 LINE",
"1104 1456 LINE",
"920 1456 LINE",
"920 151 LINE",
"707 151 LINE",
"707 1456 LINE",
"523 1456 LINE",
"523 151 LINE",
"310 151 LINE",
"310 1456 LINE",
"310 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
6 5 3 3 1 1 22 75 2 1 0 0 4 90 0 4 4 23 4 76 0 0 0 11 0 11 17 17 17 17 17 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0428;
unicode = 0428;
},
{
glyphname = uni0429;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"125 1456 LINE",
"125 0 LINE",
"1011 0 LINE",
"1011 -351 LINE",
"1176 -351 LINE",
"1194 152 LINE",
"1104 152 LINE",
"1104 1456 LINE",
"920 1456 LINE",
"920 152 LINE",
"856 152 LINE",
"856 151 LINE",
"707 151 LINE",
"707 1456 LINE",
"523 1456 LINE",
"523 151 LINE",
"310 151 LINE",
"310 1456 LINE",
"310 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
0 5 0 5 82 8 7 3 3 1 1 22 75 4 2 2 0 0 6 90 0 6 6 23 6 76 0 0 0 17 0 17 17 17 17 17 49 17 17 9 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0429;
unicode = 0429;
},
{
glyphname = uni042A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"50 1304 LINE",
"355 1304 LINE",
"355 0 LINE",
"684 0 LINE SMOOTH",
"795 0 OFFCURVE",
"967 64 OFFCURVE",
"1084 179 OFFCURVE",
"1145 338 OFFCURVE",
"1145 433 QCURVE SMOOTH",
"1145 529 OFFCURVE",
"1084 685 OFFCURVE",
"967 796 OFFCURVE",
"795 857 OFFCURVE",
"684 857 QCURVE SMOOTH",
"540 857 LINE",
"540 1456 LINE",
"50 1456 LINE",
"50 1456 LINE"
);
},
{
closed = 1;
nodes = (
"684 706 LINE SMOOTH",
"757 706 OFFCURVE",
"861 663 OFFCURVE",
"928 589 OFFCURVE",
"959 490 OFFCURVE",
"959 435 QCURVE SMOOTH",
"959 379 OFFCURVE",
"928 276 OFFCURVE",
"861 198 OFFCURVE",
"757 151 OFFCURVE",
"684 151 QCURVE SMOOTH",
"540 151 LINE",
"540 706 LINE",
"540 706 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 1 6 1 5 4 1 5 99 0 3 3 0 89 0 0 0 22 75 0 4 4 2 91 0 2 2 23 2 76 17 17 17 29 17 28 34 17 40 33 16 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni042A;
unicode = 042A;
},
{
glyphname = uni042B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"329 1456 LINE",
"144 1456 LINE",
"144 0 LINE",
"421 0 LINE SMOOTH",
"516 0 OFFCURVE",
"661 64 OFFCURVE",
"760 179 OFFCURVE",
"810 338 OFFCURVE",
"810 433 QCURVE SMOOTH",
"810 528 OFFCURVE",
"760 685 OFFCURVE",
"661 796 OFFCURVE",
"516 857 OFFCURVE",
"421 857 QCURVE SMOOTH",
"329 857 LINE",
"329 857 LINE"
);
},
{
closed = 1;
nodes = (
"1099 1456 LINE",
"914 1456 LINE",
"914 0 LINE",
"1099 0 LINE",
"1099 0 LINE"
);
},
{
closed = 1;
nodes = (
"421 706 LINE SMOOTH",
"476 706 OFFCURVE",
"553 662 OFFCURVE",
"602 588 OFFCURVE",
"624 490 OFFCURVE",
"624 435 QCURVE SMOOTH",
"624 379 OFFCURVE",
"602 277 OFFCURVE",
"554 198 OFFCURVE",
"476 151 OFFCURVE",
"421 151 QCURVE SMOOTH",
"329 151 LINE",
"329 706 LINE",
"329 706 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
0 0 7 1 6 5 0 6 99 4 1 2 2 22 75 0 5 5 1 92 3 1 1 1 23 1 76 19 19 19 31 19 30 34 17 17 17 40 32 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni042B;
unicode = 042B;
},
{
glyphname = uni042C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"353 1456 LINE",
"168 1456 LINE",
"168 0 LINE",
"619 0 LINE SMOOTH",
"735 0 OFFCURVE",
"916 63 OFFCURVE",
"1040 177 OFFCURVE",
"1105 337 OFFCURVE",
"1105 433 QCURVE SMOOTH",
"1105 530 OFFCURVE",
"1040 686 OFFCURVE",
"916 797 OFFCURVE",
"735 857 OFFCURVE",
"619 857 QCURVE SMOOTH",
"353 857 LINE",
"353 857 LINE"
);
},
{
closed = 1;
nodes = (
"619 706 LINE SMOOTH",
"697 706 OFFCURVE",
"810 663 OFFCURVE",
"884 590 OFFCURVE",
"919 491 OFFCURVE",
"919 435 QCURVE SMOOTH",
"919 378 OFFCURVE",
"884 275 OFFCURVE",
"810 197 OFFCURVE",
"697 151 OFFCURVE",
"619 151 QCURVE SMOOTH",
"353 151 LINE",
"353 706 LINE",
"353 706 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 0 5 1 4 3 0 4 99 0 2 2 22 75 0 3 3 1 92 0 1 1 23 1 76 15 15 15 27 15 26 34 17 40 32 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni042C;
unicode = 042C;
},
{
glyphname = uni042D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"114 465 LINE",
"115 355 OFFCURVE",
"182 176 OFFCURVE",
"307 49 OFFCURVE",
"483 -20 OFFCURVE",
"593 -20 QCURVE SMOOTH",
"710 -20 OFFCURVE",
"900 64 OFFCURVE",
"1034 217 OFFCURVE",
"1107 431 OFFCURVE",
"1107 562 QCURVE SMOOTH",
"1107 894 LINE SMOOTH",
"1107 1025 OFFCURVE",
"1034 1240 OFFCURVE",
"900 1393 OFFCURVE",
"710 1477 OFFCURVE",
"593 1477 QCURVE SMOOTH",
"483 1477 OFFCURVE",
"307 1401 OFFCURVE",
"182 1269 OFFCURVE",
"115 1091 OFFCURVE",
"114 990 QCURVE",
"299 990 LINE",
"300 1066 OFFCURVE",
"339 1191 OFFCURVE",
"413 1278 OFFCURVE",
"522 1326 OFFCURVE",
"593 1326 QCURVE SMOOTH",
"672 1326 OFFCURVE",
"794 1262 OFFCURVE",
"878 1148 OFFCURVE",
"922 989 OFFCURVE",
"922 895 QCURVE SMOOTH",
"922 802 LINE",
"438 802 LINE",
"438 651 LINE",
"922 651 LINE",
"922 561 LINE SMOOTH",
"922 467 OFFCURVE",
"877 309 OFFCURVE",
"793 195 OFFCURVE",
"671 131 OFFCURVE",
"593 131 QCURVE SMOOTH",
"522 131 OFFCURVE",
"413 179 OFFCURVE",
"339 266 OFFCURVE",
"300 389 OFFCURVE",
"299 465 QCURVE",
"299 465 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
0 4 3 2 3 4 2 112 8 1 7 1 0 1 7 0 112 0 2 0 1 7 2 1 97 0 3 3 5 91 0 5 5 29 75 0 0 0 6 91 0 6 6 30 6 76 0 0 0 47 0 47 41 36 20 37 17 21 36 9 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni042D;
unicode = 042D;
},
{
glyphname = uni042E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1130 940 LINE SMOOTH",
"1130 1067 OFFCURVE",
"1084 1266 OFFCURVE",
"992 1404 OFFCURVE",
"855 1476 OFFCURVE",
"764 1476 QCURVE SMOOTH",
"678 1476 OFFCURVE",
"548 1404 OFFCURVE",
"461 1266 OFFCURVE",
"418 1067 OFFCURVE",
"418 940 QCURVE SMOOTH",
"418 788 LINE",
"304 788 LINE",
"304 1456 LINE",
"119 1456 LINE",
"119 0 LINE",
"304 0 LINE",
"304 637 LINE",
"418 637 LINE",
"418 515 LINE SMOOTH",
"418 388 OFFCURVE",
"462 189 OFFCURVE",
"549 52 OFFCURVE",
"679 -20 OFFCURVE",
"765 -20 QCURVE SMOOTH",
"855 -20 OFFCURVE",
"992 52 OFFCURVE",
"1084 189 OFFCURVE",
"1130 388 OFFCURVE",
"1130 515 QCURVE",
"1130 515 LINE"
);
},
{
closed = 1;
nodes = (
"945 515 LINE SMOOTH",
"945 420 OFFCURVE",
"926 278 OFFCURVE",
"884 184 OFFCURVE",
"815 137 OFFCURVE",
"765 137 QCURVE SMOOTH",
"719 137 OFFCURVE",
"657 184 OFFCURVE",
"619 278 OFFCURVE",
"603 420 OFFCURVE",
"603 515 QCURVE SMOOTH",
"603 942 LINE SMOOTH",
"603 1036 OFFCURVE",
"619 1177 OFFCURVE",
"657 1271 OFFCURVE",
"719 1318 OFFCURVE",
"764 1318 QCURVE SMOOTH",
"864 1318 OFFCURVE",
"945 1130 OFFCURVE",
"945 942 QCURVE",
"945 942 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 4 0 1 7 4 1 97 0 6 6 3 91 5 1 3 3 22 75 0 7 7 0 91 2 1 0 0 30 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 4 0 1 7 4 1 97 0 3 3 22 75 0 6 6 5 91 0 5 5 29 75 0 2 2 23 75 0 7 7 0 91 0 0 0 30 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
41 39 37 17 17 17 21 36 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni042E;
unicode = 042E;
},
{
glyphname = uni042F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1062 0 LINE",
"1062 1456 LINE",
"628 1456 LINE SMOOTH",
"511 1456 OFFCURVE",
"322 1400 OFFCURVE",
"189 1293 OFFCURVE",
"118 1136 OFFCURVE",
"118 1036 QCURVE SMOOTH",
"118 897 OFFCURVE",
"266 709 OFFCURVE",
"406 658 QCURVE",
"65 0 LINE",
"262 0 LINE",
"567 607 LINE",
"877 607 LINE",
"877 0 LINE",
"877 0 LINE"
);
},
{
closed = 1;
nodes = (
"303 1099 OFFCURVE",
"345 1198 OFFCURVE",
"427 1267 OFFCURVE",
"548 1304 OFFCURVE",
"628 1304 QCURVE SMOOTH",
"877 1304 LINE",
"877 760 LINE",
"622 760 LINE SMOOTH",
"544 760 OFFCURVE",
"424 802 OFFCURVE",
"344 877 OFFCURVE",
"303 979 OFFCURVE",
"303 1038 QCURVE",
"303 1038 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
5 1 0 4 1 74 0 4 0 0 1 4 0 97 0 5 5 2 91 0 2 2 22 75 6 3 2 1 1 23 1 76 0 0 25 23 22 20 0 15 0 15 40 17 17 7 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni042F;
unicode = 042F;
},
{
glyphname = uni0431;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"590 1020 OFFCURVE",
"488 995 OFFCURVE",
"398 950 OFFCURVE",
"320 887 OFFCURVE",
"288 850 QCURVE",
"303 942 OFFCURVE",
"369 1073 OFFCURVE",
"465 1163 OFFCURVE",
"587 1216 OFFCURVE",
"657 1231 QCURVE SMOOTH",
"701 1241 OFFCURVE",
"789 1259 OFFCURVE",
"869 1287 OFFCURVE",
"938 1328 OFFCURVE",
"989 1393 OFFCURVE",
"1018 1487 OFFCURVE",
"1018 1553 QCURVE",
"866 1553 LINE",
"866 1512 OFFCURVE",
"828 1459 OFFCURVE",
"761 1424 OFFCURVE",
"670 1401 OFFCURVE",
"617 1391 QCURVE SMOOTH",
"506 1370 OFFCURVE",
"325 1255 OFFCURVE",
"198 1062 OFFCURVE",
"129 787 OFFCURVE",
"129 606 QCURVE SMOOTH",
"129 537 LINE",
"129 530 LINE",
"129 507 LINE SMOOTH",
"129 394 OFFCURVE",
"195 202 OFFCURVE",
"319 60 OFFCURVE",
"499 -20 OFFCURVE",
"613 -20 QCURVE SMOOTH",
"727 -20 OFFCURVE",
"906 60 OFFCURVE",
"1030 202 OFFCURVE",
"1095 394 OFFCURVE",
"1095 507 QCURVE SMOOTH",
"1095 530 LINE SMOOTH",
"1095 635 OFFCURVE",
"1034 814 OFFCURVE",
"918 945 OFFCURVE",
"752 1020 OFFCURVE",
"646 1020 QCURVE",
"646 1020 LINE"
);
},
{
closed = 1;
nodes = (
"687 868 OFFCURVE",
"800 813 OFFCURVE",
"874 720 OFFCURVE",
"910 598 OFFCURVE",
"910 530 QCURVE SMOOTH",
"910 507 LINE SMOOTH",
"910 431 OFFCURVE",
"874 294 OFFCURVE",
"800 191 OFFCURVE",
"689 130 OFFCURVE",
"613 130 QCURVE SMOOTH",
"536 130 OFFCURVE",
"423 191 OFFCURVE",
"350 294 OFFCURVE",
"314 431 OFFCURVE",
"314 507 QCURVE SMOOTH",
"314 530 LINE SMOOTH",
"314 598 OFFCURVE",
"350 720 OFFCURVE",
"423 813 OFFCURVE",
"535 868 OFFCURVE",
"611 868 QCURVE",
"611 868 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
42 1 4 3 1 74 0 2 0 2 114 5 1 0 6 1 3 4 0 3 99 0 4 4 1 91 0 1 1 30 1 76 48 47 1 0 59 57 47 68 48 68 30 29 12 10 0 46 1 46 7 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0431;
unicode = 0431;
},
{
glyphname = uni0432;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"658 0 LINE SMOOTH",
"753 0 OFFCURVE",
"906 38 OFFCURVE",
"1014 115 OFFCURVE",
"1072 230 OFFCURVE",
"1072 307 QCURVE SMOOTH",
"1072 351 OFFCURVE",
"1044 431 OFFCURVE",
"989 497 OFFCURVE",
"909 546 OFFCURVE",
"857 558 QCURVE",
"943 590 OFFCURVE",
"1033 708 OFFCURVE",
"1033 785 QCURVE SMOOTH",
"1033 862 OFFCURVE",
"970 974 OFFCURVE",
"853 1046 OFFCURVE",
"689 1082 OFFCURVE",
"589 1082 QCURVE SMOOTH",
"164 1082 LINE",
"164 0 LINE",
"164 0 LINE"
);
},
{
closed = 1;
nodes = (
"658 475 LINE SMOOTH",
"769 475 OFFCURVE",
"886 391 OFFCURVE",
"886 313 QCURVE SMOOTH",
"886 233 OFFCURVE",
"770 149 OFFCURVE",
"658 149 QCURVE SMOOTH",
"350 149 LINE",
"350 475 LINE",
"350 475 LINE"
);
},
{
closed = 1;
nodes = (
"350 932 LINE",
"589 932 LINE SMOOTH",
"713 932 OFFCURVE",
"848 856 OFFCURVE",
"848 775 QCURVE SMOOTH",
"848 697 OFFCURVE",
"715 623 OFFCURVE",
"591 623 QCURVE SMOOTH",
"350 623 LINE",
"350 623 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 59 values pushed */
10 1 3 4 1 74 0 4 7 1 3 2 4 3 99 0 5 5 0 91 0 0 0 24 75 0 2 2 1 91 6 1 1 1 23 1 76 21 21 0 0 38 36 32 30 21 29 21 28 24 22 0 20 0 19 33 8 6 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0432;
unicode = 0432;
},
{
glyphname = uni0433;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1066 1082 LINE",
"183 1082 LINE",
"183 0 LINE",
"369 0 LINE",
"369 929 LINE",
"1066 929 LINE",
"1066 929 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 0 0 2 89 0 2 2 24 75 0 1 1 23 1 76 17 17 16 3 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0433;
unicode = 0433;
},
{
glyphname = uni0434;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"54 151 LINE",
"72 -318 LINE",
"238 -318 LINE",
"238 0 LINE",
"993 0 LINE",
"993 -318 LINE",
"1160 -318 LINE",
"1178 151 LINE",
"1039 151 LINE",
"1039 1082 LINE",
"342 1082 LINE",
"326 676 LINE SMOOTH",
"319 560 OFFCURVE",
"296 372 OFFCURVE",
"258 236 OFFCURVE",
"199 157 OFFCURVE",
"156 151 QCURVE",
"156 151 LINE"
);
},
{
closed = 1;
nodes = (
"520 911 LINE",
"854 911 LINE",
"854 151 LINE",
"412 151 LINE",
"436 195 OFFCURVE",
"469 307 OFFCURVE",
"491 440 OFFCURVE",
"506 592 OFFCURVE",
"511 676 QCURVE",
"511 676 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
4 1 2 1 2 81 0 7 7 0 89 0 0 0 24 75 6 8 5 3 1 1 3 89 0 3 3 23 3 76 0 0 25 24 23 22 0 16 0 16 17 17 17 17 22 9 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0434;
unicode = 0434;
},
{
glyphname = uni0436;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"972 0 LINE",
"1196 0 LINE",
"898 563 LINE",
"1162 1082 LINE",
"948 1082 LINE",
"758 634 LINE",
"699 634 LINE",
"699 1082 LINE",
"514 1082 LINE",
"514 634 LINE",
"455 634 LINE",
"266 1082 LINE",
"52 1082 LINE",
"314 563 LINE",
"17 0 LINE",
"240 0 LINE",
"455 470 LINE",
"514 470 LINE",
"514 0 LINE",
"699 0 LINE",
"699 470 LINE",
"757 470 LINE",
"757 470 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
19 8 2 0 5 1 74 7 1 5 2 1 0 1 5 0 97 8 6 2 4 4 24 75 9 3 2 1 1 23 1 76 21 20 17 17 17 17 18 17 17 17 16 10 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0436;
unicode = 0436;
},
{
glyphname = uni0437;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"395 630 LINE",
"395 474 LINE",
"636 474 LINE SMOOTH",
"699 474 OFFCURVE",
"801 456 OFFCURVE",
"873 415 OFFCURVE",
"911 350 OFFCURVE",
"911 304 QCURVE SMOOTH",
"911 267 OFFCURVE",
"870 203 OFFCURVE",
"795 155 OFFCURVE",
"689 128 OFFCURVE",
"625 128 QCURVE SMOOTH",
"560 128 OFFCURVE",
"448 159 OFFCURVE",
"366 212 OFFCURVE",
"320 281 OFFCURVE",
"320 320 QCURVE",
"135 320 LINE",
"135 261 OFFCURVE",
"175 164 OFFCURVE",
"244 89 OFFCURVE",
"338 34 OFFCURVE",
"446 -2 OFFCURVE",
"565 -19 OFFCURVE",
"625 -19 QCURVE SMOOTH",
"725 -19 OFFCURVE",
"897 23 OFFCURVE",
"1025 106 OFFCURVE",
"1098 226 OFFCURVE",
"1098 304 QCURVE SMOOTH",
"1098 399 OFFCURVE",
"983 525 OFFCURVE",
"880 556 QCURVE",
"971 591 OFFCURVE",
"1077 712 OFFCURVE",
"1077 787 QCURVE SMOOTH",
"1077 865 OFFCURVE",
"1011 982 OFFCURVE",
"891 1061 OFFCURVE",
"725 1101 OFFCURVE",
"625 1101 QCURVE SMOOTH",
"530 1101 OFFCURVE",
"359 1057 OFFCURVE",
"230 974 OFFCURVE",
"153 855 OFFCURVE",
"152 780 QCURVE",
"337 780 LINE",
"337 817 OFFCURVE",
"384 880 OFFCURVE",
"463 925 OFFCURVE",
"567 951 OFFCURVE",
"625 951 QCURVE SMOOTH",
"690 951 OFFCURVE",
"790 925 OFFCURVE",
"857 880 OFFCURVE",
"892 820 OFFCURVE",
"892 786 QCURVE SMOOTH",
"892 711 OFFCURVE",
"764 630 OFFCURVE",
"636 630 QCURVE",
"636 630 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
27 1 7 0 1 74 0 2 1 0 1 2 0 112 0 5 7 6 7 5 6 112 8 1 0 0 7 5 0 7 99 0 1 1 3 91 0 3 3 31 75 0 6 6 4 91 0 4 4 30 4 76 1 0 59 57 49 47 43 42 36 34 20 18 14 13 9 7 0 60 1 60 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0437;
unicode = 0437;
},
{
glyphname = uni0438;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"349 283 LINE",
"349 1082 LINE",
"165 1082 LINE",
"165 0 LINE",
"349 0 LINE",
"878 798 LINE",
"878 0 LINE",
"1063 0 LINE",
"1063 1082 LINE",
"878 1082 LINE",
"878 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
9 4 2 1 0 1 74 3 1 0 0 24 75 2 1 1 1 23 1 76 17 18 17 16 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0438;
unicode = 0438;
},
{
glyphname = uni043A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"938 0 LINE",
"1173 0 LINE",
"673 561 LINE",
"1137 1082 LINE",
"912 1082 LINE",
"509 624 LINE",
"349 624 LINE",
"349 1082 LINE",
"164 1082 LINE",
"164 0 LINE",
"349 0 LINE",
"349 461 LINE",
"525 461 LINE",
"525 461 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
10 1 0 3 1 74 0 3 0 0 1 3 0 97 4 1 2 2 24 75 5 1 1 1 23 1 76 18 17 17 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni043A;
unicode = 043A;
},
{
glyphname = uni043B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"293 1082 LINE",
"291 619 LINE SMOOTH",
"291 506 OFFCURVE",
"274 336 OFFCURVE",
"231 223 OFFCURVE",
"156 166 OFFCURVE",
"99 166 QCURVE SMOOTH",
"58 165 LINE",
"55 0 LINE",
"109 0 LINE SMOOTH",
"215 0 OFFCURVE",
"357 83 OFFCURVE",
"441 241 OFFCURVE",
"477 471 OFFCURVE",
"477 619 QCURVE SMOOTH",
"478 929 LINE",
"876 929 LINE",
"876 0 LINE",
"1062 0 LINE",
"1062 1082 LINE",
"1062 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
0 1 1 4 89 5 1 4 4 24 75 0 3 3 0 91 2 1 0 0 23 0 76 0 0 0 19 0 19 33 37 17 17 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni043B;
unicode = 043B;
},
{
glyphname = uni043C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"376 1082 LINE",
"137 1082 LINE",
"137 0 LINE",
"322 0 LINE",
"322 691 LINE",
"540 0 LINE",
"668 0 LINE",
"880 667 LINE",
"880 0 LINE",
"1065 0 LINE",
"1065 1082 LINE",
"834 1082 LINE",
"604 245 LINE",
"604 245 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
8 5 2 1 0 1 74 4 1 0 0 24 75 3 2 2 1 1 23 1 76 17 18 18 17 17 5 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni043C;
unicode = 043C;
},
{
glyphname = uni043D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1063 1082 LINE",
"878 1082 LINE",
"878 613 LINE",
"350 613 LINE",
"350 1082 LINE",
"165 1082 LINE",
"165 0 LINE",
"350 0 LINE",
"350 462 LINE",
"878 462 LINE",
"878 0 LINE",
"1063 0 LINE",
"1063 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 4 0 1 0 4 1 97 5 1 3 3 24 75 2 1 0 0 23 0 76 17 17 17 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni043D;
unicode = 043D;
},
{
glyphname = uni043F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1063 1082 LINE",
"165 1082 LINE",
"165 0 LINE",
"350 0 LINE",
"350 929 LINE",
"878 929 LINE",
"878 0 LINE",
"1063 0 LINE",
"1063 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
0 1 1 3 89 0 3 3 24 75 2 1 0 0 23 0 76 17 17 17 16 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni043F;
unicode = 043F;
},
{
glyphname = uni0442;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1147 1082 LINE",
"104 1082 LINE",
"104 932 LINE",
"529 932 LINE",
"529 0 LINE",
"715 0 LINE",
"715 932 LINE",
"1147 932 LINE",
"1147 932 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
2 1 0 0 3 89 0 3 3 24 75 0 1 1 23 1 76 17 17 17 16 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0442;
unicode = 0442;
},
{
glyphname = uni0444;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"122 529 LINE SMOOTH",
"122 425 OFFCURVE",
"176 242 OFFCURVE",
"279 100 OFFCURVE",
"427 5 OFFCURVE",
"520 -11 QCURVE",
"520 -416 LINE",
"705 -416 LINE",
"705 -12 LINE",
"799 3 OFFCURVE",
"948 98 OFFCURVE",
"1051 241 OFFCURVE",
"1106 424 OFFCURVE",
"1106 529 QCURVE SMOOTH",
"1106 551 LINE SMOOTH",
"1106 655 OFFCURVE",
"1052 839 OFFCURVE",
"948 982 OFFCURVE",
"799 1078 OFFCURVE",
"705 1094 QCURVE",
"705 1536 LINE",
"520 1536 LINE",
"520 1094 LINE",
"427 1077 OFFCURVE",
"279 982 OFFCURVE",
"176 839 OFFCURVE",
"122 655 OFFCURVE",
"122 551 QCURVE",
"122 551 LINE"
);
},
{
closed = 1;
nodes = (
"921 529 LINE SMOOTH",
"921 461 OFFCURVE",
"894 337 OFFCURVE",
"840 235 OFFCURVE",
"759 161 OFFCURVE",
"705 143 QCURVE",
"705 935 LINE",
"759 917 OFFCURVE",
"840 843 OFFCURVE",
"894 741 OFFCURVE",
"921 617 OFFCURVE",
"921 551 QCURVE",
"921 551 LINE"
);
},
{
closed = 1;
nodes = (
"307 551 LINE SMOOTH",
"307 617 OFFCURVE",
"334 740 OFFCURVE",
"387 842 OFFCURVE",
"467 917 OFFCURVE",
"520 935 QCURVE",
"520 145 LINE",
"466 163 OFFCURVE",
"386 237 OFFCURVE",
"333 339 OFFCURVE",
"307 462 OFFCURVE",
"307 529 QCURVE",
"307 529 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
46 45 34 33 22 19 8 5 8 1 0 1 74 0 0 1 0 114 0 1 1 26 1 76 29 22 2 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0444;
unicode = 0444;
},
{
glyphname = uni0446;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"170 0 LINE",
"984 0 LINE",
"984 -321 LINE",
"1150 -321 LINE",
"1168 151 LINE",
"1039 151 LINE",
"1039 1082 LINE",
"853 1082 LINE",
"853 151 LINE",
"355 151 LINE",
"355 1082 LINE",
"170 1082 LINE",
"170 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
0 4 1 4 82 2 1 0 0 24 75 3 1 1 1 5 90 0 5 5 23 5 76 17 17 17 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0446;
unicode = 0446;
},
{
glyphname = uni0447;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1063 1082 LINE",
"878 1082 LINE",
"878 547 LINE",
"809 530 OFFCURVE",
"661 512 OFFCURVE",
"580 512 QCURVE SMOOTH",
"458 512 OFFCURVE",
"327 634 OFFCURVE",
"326 767 QCURVE SMOOTH",
"326 1082 LINE",
"141 1082 LINE",
"141 767 LINE SMOOTH",
"141 664 OFFCURVE",
"203 511 OFFCURVE",
"318 410 OFFCURVE",
"480 360 OFFCURVE",
"580 360 QCURVE SMOOTH",
"665 360 OFFCURVE",
"810 378 OFFCURVE",
"878 395 QCURVE",
"878 0 LINE",
"1063 0 LINE",
"1063 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
19 1 3 2 2 1 1 3 2 74 0 3 0 1 0 3 1 99 4 1 2 2 24 75 0 0 0 23 0 76 19 35 21 35 16 5 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0447;
unicode = 0447;
},
{
glyphname = uni0448;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"129 1082 LINE",
"129 0 LINE",
"1100 0 LINE",
"1100 1082 LINE",
"915 1082 LINE",
"915 151 LINE",
"707 151 LINE",
"707 1082 LINE",
"522 1082 LINE",
"522 151 LINE",
"314 151 LINE",
"314 1082 LINE",
"314 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
6 5 3 3 1 1 24 75 2 1 0 0 4 90 0 4 4 23 4 76 0 0 0 11 0 11 17 17 17 17 17 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0448;
unicode = 0448;
},
{
glyphname = uni0449;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"118 1082 LINE",
"118 0 LINE",
"993 0 LINE",
"993 -321 LINE",
"1158 -321 LINE",
"1176 152 LINE",
"1089 152 LINE",
"1089 1082 LINE",
"904 1082 LINE",
"904 152 LINE",
"850 152 LINE",
"850 151 LINE",
"696 151 LINE",
"696 1082 LINE",
"511 1082 LINE",
"511 151 LINE",
"303 151 LINE",
"303 1082 LINE",
"303 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
0 5 0 5 82 8 7 3 3 1 1 24 75 4 2 2 0 0 6 90 0 6 6 23 6 76 0 0 0 17 0 17 17 17 17 17 49 17 17 9 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0449;
unicode = 0449;
},
{
glyphname = uni044A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"57 930 LINE",
"357 930 LINE",
"357 0 LINE",
"742 0 LINE SMOOTH",
"838 0 OFFCURVE",
"988 53 OFFCURVE",
"1090 144 OFFCURVE",
"1143 268 OFFCURVE",
"1143 340 QCURVE SMOOTH",
"1143 412 OFFCURVE",
"1090 534 OFFCURVE",
"988 622 OFFCURVE",
"838 672 OFFCURVE",
"742 672 QCURVE SMOOTH",
"542 672 LINE",
"542 1082 LINE",
"57 1082 LINE",
"57 1082 LINE"
);
},
{
closed = 1;
nodes = (
"742 521 LINE SMOOTH",
"799 521 OFFCURVE",
"881 487 OFFCURVE",
"933 434 OFFCURVE",
"957 367 OFFCURVE",
"957 333 QCURVE SMOOTH",
"957 298 OFFCURVE",
"933 232 OFFCURVE",
"881 181 OFFCURVE",
"800 151 OFFCURVE",
"742 151 QCURVE SMOOTH",
"542 151 LINE",
"542 521 LINE",
"542 521 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
0 1 6 1 5 4 1 5 99 0 3 3 0 89 0 0 0 24 75 0 4 4 2 91 0 2 2 23 2 76 17 17 17 29 17 28 34 17 40 33 16 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni044A;
unicode = 044A;
},
{
glyphname = uni044B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"329 1082 LINE",
"144 1082 LINE",
"144 0 LINE",
"428 0 LINE SMOOTH",
"516 0 OFFCURVE",
"650 53 OFFCURVE",
"741 145 OFFCURVE",
"788 269 OFFCURVE",
"788 340 QCURVE SMOOTH",
"788 411 OFFCURVE",
"741 533 OFFCURVE",
"650 622 OFFCURVE",
"515 672 OFFCURVE",
"428 672 QCURVE SMOOTH",
"329 672 LINE",
"329 672 LINE"
);
},
{
closed = 1;
nodes = (
"1087 1082 LINE",
"902 1082 LINE",
"902 0 LINE",
"1087 0 LINE",
"1087 0 LINE"
);
},
{
closed = 1;
nodes = (
"428 521 LINE SMOOTH",
"475 521 OFFCURVE",
"541 487 OFFCURVE",
"582 433 OFFCURVE",
"601 366 OFFCURVE",
"601 333 QCURVE SMOOTH",
"601 298 OFFCURVE",
"582 233 OFFCURVE",
"541 182 OFFCURVE",
"475 151 OFFCURVE",
"428 151 QCURVE SMOOTH",
"329 151 LINE",
"329 521 LINE",
"329 521 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
0 0 7 1 6 5 0 6 99 4 1 2 2 24 75 0 5 5 1 92 3 1 1 1 23 1 76 19 19 19 31 19 30 34 17 17 17 40 32 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni044B;
unicode = 044B;
},
{
glyphname = uni044C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"350 1082 LINE",
"165 1082 LINE",
"165 0 LINE",
"681 0 LINE SMOOTH",
"778 0 OFFCURVE",
"930 52 OFFCURVE",
"1034 143 OFFCURVE",
"1088 268 OFFCURVE",
"1088 340 QCURVE SMOOTH",
"1088 413 OFFCURVE",
"1033 535 OFFCURVE",
"929 623 OFFCURVE",
"778 672 OFFCURVE",
"681 672 QCURVE SMOOTH",
"350 672 LINE",
"350 672 LINE"
);
},
{
closed = 1;
nodes = (
"681 521 LINE SMOOTH",
"739 521 OFFCURVE",
"822 488 OFFCURVE",
"876 435 OFFCURVE",
"902 368 OFFCURVE",
"902 333 QCURVE SMOOTH",
"902 297 OFFCURVE",
"877 231 OFFCURVE",
"823 181 OFFCURVE",
"739 151 OFFCURVE",
"681 151 QCURVE SMOOTH",
"350 151 LINE",
"350 521 LINE",
"350 521 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 0 5 1 4 3 0 4 99 0 2 2 24 75 0 3 3 1 92 0 1 1 23 1 76 15 15 15 27 15 26 34 17 40 32 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni044C;
unicode = 044C;
},
{
glyphname = uni044D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"653 950 OFFCURVE",
"769 896 OFFCURVE",
"845 806 OFFCURVE",
"887 690 OFFCURVE",
"893 627 QCURVE",
"466 627 LINE",
"466 475 LINE",
"895 475 LINE",
"890 410 OFFCURVE",
"851 286 OFFCURVE",
"774 189 OFFCURVE",
"656 130 OFFCURVE",
"572 130 QCURVE SMOOTH",
"516 130 OFFCURVE",
"419 168 OFFCURVE",
"347 233 OFFCURVE",
"305 321 OFFCURVE",
"305 371 QCURVE",
"129 371 LINE",
"129 288 OFFCURVE",
"196 145 OFFCURVE",
"314 40 OFFCURVE",
"476 -20 OFFCURVE",
"572 -20 QCURVE SMOOTH",
"699 -20 OFFCURVE",
"890 67 OFFCURVE",
"1018 216 OFFCURVE",
"1082 412 OFFCURVE",
"1082 520 QCURVE SMOOTH",
"1082 562 LINE SMOOTH",
"1082 670 OFFCURVE",
"1018 866 OFFCURVE",
"891 1014 OFFCURVE",
"699 1102 OFFCURVE",
"572 1102 QCURVE SMOOTH",
"486 1102 OFFCURVE",
"326 1043 OFFCURVE",
"203 943 OFFCURVE",
"129 811 OFFCURVE",
"129 738 QCURVE",
"305 738 LINE",
"305 784 OFFCURVE",
"351 861 OFFCURVE",
"426 918 OFFCURVE",
"522 950 OFFCURVE",
"572 950 QCURVE",
"572 950 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
0 1 0 7 0 1 7 112 0 4 6 5 6 4 5 112 0 7 0 6 4 7 6 97 8 1 0 0 2 91 0 2 2 31 75 0 5 5 3 91 0 3 3 30 3 76 1 0 41 40 39 38 34 32 28 27 23 21 12 10 6 5 0 45 1 45 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni044D;
unicode = 044D;
},
{
glyphname = uni044E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"298 1082 LINE",
"113 1082 LINE",
"113 0 LINE",
"298 0 LINE",
"298 471 LINE",
"427 471 LINE",
"433 367 OFFCURVE",
"482 187 OFFCURVE",
"572 55 OFFCURVE",
"703 -20 OFFCURVE",
"790 -20 QCURVE SMOOTH",
"883 -20 OFFCURVE",
"1020 66 OFFCURVE",
"1109 214 OFFCURVE",
"1153 415 OFFCURVE",
"1153 529 QCURVE SMOOTH",
"1153 551 LINE SMOOTH",
"1153 665 OFFCURVE",
"1109 866 OFFCURVE",
"1019 1016 OFFCURVE",
"881 1102 OFFCURVE",
"788 1102 QCURVE SMOOTH",
"703 1102 OFFCURVE",
"575 1029 OFFCURVE",
"485 900 OFFCURVE",
"435 725 OFFCURVE",
"428 623 QCURVE",
"298 623 LINE",
"298 623 LINE"
);
},
{
closed = 1;
nodes = (
"612 551 LINE SMOOTH",
"612 629 OFFCURVE",
"628 773 OFFCURVE",
"668 884 OFFCURVE",
"736 950 OFFCURVE",
"788 950 QCURVE SMOOTH",
"841 950 OFFCURVE",
"910 884 OFFCURVE",
"951 773 OFFCURVE",
"968 629 OFFCURVE",
"968 551 QCURVE SMOOTH",
"968 529 LINE SMOOTH",
"968 451 OFFCURVE",
"951 306 OFFCURVE",
"911 196 OFFCURVE",
"842 130 OFFCURVE",
"790 130 QCURVE SMOOTH",
"737 130 OFFCURVE",
"669 196 OFFCURVE",
"628 306 OFFCURVE",
"612 451 OFFCURVE",
"612 529 QCURVE",
"612 529 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 0 0 3 6 0 3 97 0 7 7 1 91 5 1 1 1 31 75 0 6 6 2 91 4 1 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 0 0 3 6 0 3 97 0 5 5 24 75 0 7 7 1 91 0 1 1 31 75 0 4 4 23 75 0 6 6 2 91 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
41 37 17 17 20 41 36 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni044E;
unicode = 044E;
},
{
glyphname = uni044F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"549 1082 LINE SMOOTH",
"453 1082 OFFCURVE",
"299 1032 OFFCURVE",
"193 945 OFFCURVE",
"136 824 OFFCURVE",
"136 752 QCURVE SMOOTH",
"136 646 OFFCURVE",
"248 487 OFFCURVE",
"352 449 QCURVE",
"79 0 LINE",
"279 0 LINE",
"536 421 LINE",
"872 421 LINE",
"872 0 LINE",
"1057 0 LINE",
"1057 1082 LINE",
"1057 1082 LINE"
);
},
{
closed = 1;
nodes = (
"322 785 OFFCURVE",
"350 850 OFFCURVE",
"406 901 OFFCURVE",
"492 932 OFFCURVE",
"549 932 QCURVE SMOOTH",
"872 932 LINE",
"872 573 LINE",
"526 573 LINE SMOOTH",
"473 573 OFFCURVE",
"397 603 OFFCURVE",
"346 652 OFFCURVE",
"322 716 OFFCURVE",
"322 750 QCURVE",
"322 750 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
7 1 1 4 1 74 0 4 0 1 0 4 1 97 0 5 5 3 91 6 1 3 3 24 75 2 1 0 0 23 0 76 0 0 25 23 22 20 0 15 0 14 17 17 17 7 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni044F;
unicode = 044F;
},
{
glyphname = uni0452;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"614 1360 LINE",
"351 1360 LINE",
"351 1536 LINE",
"166 1536 LINE",
"166 1360 LINE",
"-23 1360 LINE",
"-23 1209 LINE",
"166 1209 LINE",
"166 0 LINE",
"351 0 LINE",
"351 786 LINE",
"396 858 OFFCURVE",
"541 945 OFFCURVE",
"630 945 QCURVE SMOOTH",
"748 946 OFFCURVE",
"875 816 OFFCURVE",
"875 683 QCURVE SMOOTH",
"875 0 LINE",
"876 0 LINE",
"876 -89 LINE SMOOTH",
"876 -180 OFFCURVE",
"804 -285 OFFCURVE",
"738 -285 QCURVE SMOOTH",
"730 -285 OFFCURVE",
"703 -283 OFFCURVE",
"673 -280 OFFCURVE",
"645 -275 OFFCURVE",
"637 -272 QCURVE",
"622 -420 LINE",
"652 -430 OFFCURVE",
"706 -437 OFFCURVE",
"738 -437 QCURVE SMOOTH",
"892 -437 OFFCURVE",
"1061 -257 OFFCURVE",
"1061 -89 QCURVE SMOOTH",
"1061 454 LINE",
"1060 454 LINE",
"1060 681 LINE SMOOTH",
"1060 790 OFFCURVE",
"1007 949 OFFCURVE",
"909 1053 OFFCURVE",
"770 1102 OFFCURVE",
"685 1102 QCURVE SMOOTH",
"579 1101 OFFCURVE",
"409 1006 OFFCURVE",
"351 921 QCURVE",
"351 1209 LINE",
"614 1209 LINE",
"614 1209 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 70 values pushed */
37 2 2 5 4 20 1 3 5 19 1 2 3 3 74 9 1 7 6 1 0 1 7 0 97 0 4 4 1 91 0 1 1 31 75 0 8 8 5 89 0 5 5 23 75 0 3 3 2 91 0 2 2 33 2 76 47 46 17 17 17 19 39 39 41 35 16 10 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0452;
unicode = 0452;
},
{
glyphname = uni0454;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"557 130 OFFCURVE",
"446 186 OFFCURVE",
"374 279 OFFCURVE",
"336 400 OFFCURVE",
"331 464 QCURVE",
"741 464 LINE",
"741 616 LINE",
"331 616 LINE",
"336 679 OFFCURVE",
"374 800 OFFCURVE",
"447 893 OFFCURVE",
"557 950 OFFCURVE",
"635 950 QCURVE SMOOTH",
"691 950 OFFCURVE",
"788 912 OFFCURVE",
"858 846 OFFCURVE",
"899 759 OFFCURVE",
"900 710 QCURVE",
"1075 710 LINE",
"1075 792 OFFCURVE",
"1009 936 OFFCURVE",
"892 1041 OFFCURVE",
"731 1102 OFFCURVE",
"635 1102 QCURVE SMOOTH",
"512 1102 OFFCURVE",
"328 1014 OFFCURVE",
"205 865 OFFCURVE",
"143 669 OFFCURVE",
"143 562 QCURVE SMOOTH",
"143 520 LINE SMOOTH",
"143 412 OFFCURVE",
"205 217 OFFCURVE",
"328 68 OFFCURVE",
"512 -20 OFFCURVE",
"635 -20 QCURVE SMOOTH",
"721 -20 OFFCURVE",
"879 39 OFFCURVE",
"1001 138 OFFCURVE",
"1074 269 OFFCURVE",
"1075 341 QCURVE",
"900 341 LINE",
"899 296 OFFCURVE",
"854 219 OFFCURVE",
"780 162 OFFCURVE",
"685 130 OFFCURVE",
"635 130 QCURVE",
"635 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
0 4 5 6 5 4 6 112 0 1 7 0 7 1 0 112 0 6 0 7 1 6 7 97 0 5 5 3 91 0 3 3 31 75 8 1 0 0 2 91 0 2 2 30 2 76 1 0 41 40 39 38 34 32 28 27 23 21 12 10 6 5 0 45 1 45 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0454;
unicode = 0454;
},
{
glyphname = uni0459;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"212 1082 LINE",
"212 619 LINE SMOOTH",
"212 507 OFFCURVE",
"199 335 OFFCURVE",
"167 217 OFFCURVE",
"113 156 OFFCURVE",
"72 156 QCURVE SMOOTH",
"42 155 LINE",
"38 0 LINE",
"83 0 LINE SMOOTH",
"173 0 OFFCURVE",
"293 84 OFFCURVE",
"366 243 OFFCURVE",
"397 473 OFFCURVE",
"397 619 QCURVE SMOOTH",
"397 929 LINE",
"591 929 LINE",
"591 0 LINE",
"842 0 LINE SMOOTH",
"929 0 OFFCURVE",
"1063 53 OFFCURVE",
"1153 144 OFFCURVE",
"1200 267 OFFCURVE",
"1200 338 QCURVE SMOOTH",
"1200 410 OFFCURVE",
"1153 531 OFFCURVE",
"1063 620 OFFCURVE",
"929 670 OFFCURVE",
"842 670 QCURVE SMOOTH",
"776 670 LINE",
"776 1082 LINE",
"776 1082 LINE"
);
},
{
closed = 1;
nodes = (
"842 518 LINE SMOOTH",
"889 518 OFFCURVE",
"954 487 OFFCURVE",
"995 437 OFFCURVE",
"1013 373 OFFCURVE",
"1013 340 QCURVE SMOOTH",
"1013 306 OFFCURVE",
"995 238 OFFCURVE",
"954 184 OFFCURVE",
"889 149 OFFCURVE",
"842 149 QCURVE SMOOTH",
"776 149 LINE",
"776 518 LINE",
"776 518 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
0 0 9 1 7 4 0 7 99 0 2 2 5 89 8 1 5 5 24 75 6 1 4 4 1 91 3 1 1 1 23 1 76 31 31 0 0 31 43 31 42 34 32 0 30 0 30 33 37 17 40 33 10 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0459;
unicode = 0459;
},
{
glyphname = uni045A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"315 1082 LINE",
"130 1082 LINE",
"130 0 LINE",
"315 0 LINE",
"315 522 LINE",
"564 522 LINE",
"564 0 LINE",
"832 0 LINE SMOOTH",
"914 0 OFFCURVE",
"1041 53 OFFCURVE",
"1126 144 OFFCURVE",
"1170 267 OFFCURVE",
"1170 338 QCURVE SMOOTH",
"1170 409 OFFCURVE",
"1126 530 OFFCURVE",
"1041 619 OFFCURVE",
"914 669 OFFCURVE",
"832 669 QCURVE SMOOTH",
"749 669 LINE",
"749 1082 LINE",
"564 1082 LINE",
"564 673 LINE",
"315 673 LINE",
"315 673 LINE"
);
},
{
closed = 1;
nodes = (
"832 518 LINE SMOOTH",
"874 518 OFFCURVE",
"932 487 OFFCURVE",
"968 437 OFFCURVE",
"984 373 OFFCURVE",
"984 340 QCURVE SMOOTH",
"984 306 OFFCURVE",
"968 238 OFFCURVE",
"932 184 OFFCURVE",
"874 149 OFFCURVE",
"832 149 QCURVE SMOOTH",
"749 149 LINE",
"749 518 LINE",
"749 518 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
2 1 0 9 8 2 4 7 0 4 99 6 1 1 1 24 75 0 7 7 3 92 5 1 3 3 23 3 76 23 23 23 35 23 34 34 17 17 17 40 33 17 16 10 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni045A;
unicode = 045A;
},
{
glyphname = uni045B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"665 1365 LINE",
"358 1365 LINE",
"358 1536 LINE",
"173 1536 LINE",
"173 1365 LINE",
"28 1365 LINE",
"28 1214 LINE",
"173 1214 LINE",
"173 0 LINE",
"358 0 LINE",
"358 786 LINE",
"403 858 OFFCURVE",
"548 945 OFFCURVE",
"637 945 QCURVE SMOOTH",
"755 946 OFFCURVE",
"882 816 OFFCURVE",
"882 683 QCURVE SMOOTH",
"882 0 LINE",
"1067 0 LINE",
"1067 681 LINE SMOOTH",
"1067 790 OFFCURVE",
"1014 949 OFFCURVE",
"916 1053 OFFCURVE",
"777 1102 OFFCURVE",
"692 1102 QCURVE SMOOTH",
"586 1101 OFFCURVE",
"416 1006 OFFCURVE",
"358 921 QCURVE",
"358 1214 LINE",
"665 1214 LINE",
"665 1214 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
19 2 2 2 3 1 74 8 1 6 5 1 0 1 6 0 97 0 3 3 1 91 0 1 1 31 75 0 7 7 2 89 4 1 2 2 23 2 76 17 17 17 17 19 35 21 35 16 9 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni045B;
unicode = 045B;
},
{
glyphname = uni045F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"165 1082 LINE",
"165 0 LINE",
"524 0 LINE",
"524 -356 LINE",
"709 -356 LINE",
"709 0 LINE",
"1063 0 LINE",
"1063 1082 LINE",
"878 1082 LINE",
"878 151 LINE",
"350 151 LINE",
"350 1082 LINE",
"350 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 3 2 3 115 6 5 2 1 1 24 75 0 0 0 2 90 4 1 2 2 23 2 76 0 0 0 11 0 11 17 17 17 17 17 7 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni045F;
unicode = 045F;
},
{
glyphname = uni0460;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"966 1456 LINE",
"965 318 LINE SMOOTH",
"965 230 OFFCURVE",
"907 130 OFFCURVE",
"855 130 QCURVE SMOOTH",
"794 130 OFFCURVE",
"725 230 OFFCURVE",
"725 318 QCURVE SMOOTH",
"725 1456 LINE",
"534 1456 LINE",
"533 318 LINE SMOOTH",
"533 230 OFFCURVE",
"464 130 OFFCURVE",
"404 130 QCURVE SMOOTH",
"352 130 OFFCURVE",
"293 230 OFFCURVE",
"293 318 QCURVE SMOOTH",
"292 1456 LINE",
"108 1456 LINE",
"107 318 LINE SMOOTH",
"107 236 OFFCURVE",
"150 110 OFFCURVE",
"228 24 OFFCURVE",
"337 -20 OFFCURVE",
"404 -20 QCURVE SMOOTH",
"481 -20 OFFCURVE",
"597 55 OFFCURVE",
"629 127 QCURVE",
"661 54 OFFCURVE",
"777 -20 OFFCURVE",
"855 -20 QCURVE SMOOTH",
"921 -20 OFFCURVE",
"1030 24 OFFCURVE",
"1108 110 OFFCURVE",
"1151 236 OFFCURVE",
"1151 318 QCURVE SMOOTH",
"1150 1456 LINE",
"1150 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
9 1 0 3 1 74 7 6 4 3 2 2 22 75 5 1 3 3 0 91 1 1 0 0 30 0 76 0 0 0 36 0 36 35 19 35 21 36 37 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0460;
unicode = 0460;
},
{
glyphname = uni0461;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"961 1083 LINE",
"961 316 LINE SMOOTH",
"961 228 OFFCURVE",
"900 130 OFFCURVE",
"848 130 QCURVE SMOOTH",
"787 130 OFFCURVE",
"717 228 OFFCURVE",
"717 316 QCURVE SMOOTH",
"716 1083 LINE",
"525 1083 LINE",
"525 316 LINE SMOOTH",
"525 228 OFFCURVE",
"454 130 OFFCURVE",
"394 130 QCURVE SMOOTH",
"341 130 OFFCURVE",
"281 228 OFFCURVE",
"281 316 QCURVE SMOOTH",
"281 1083 LINE",
"96 1083 LINE",
"95 316 LINE SMOOTH",
"95 234 OFFCURVE",
"139 108 OFFCURVE",
"217 23 OFFCURVE",
"327 -21 OFFCURVE",
"394 -21 QCURVE SMOOTH",
"472 -21 OFFCURVE",
"588 54 OFFCURVE",
"620 126 QCURVE",
"653 53 OFFCURVE",
"770 -21 OFFCURVE",
"848 -21 QCURVE SMOOTH",
"914 -21 OFFCURVE",
"1024 23 OFFCURVE",
"1103 108 OFFCURVE",
"1146 234 OFFCURVE",
"1146 316 QCURVE SMOOTH",
"1146 1083 LINE",
"1146 1083 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
9 1 0 3 1 74 7 6 4 3 2 2 24 75 5 1 3 3 0 91 1 1 0 0 30 0 76 0 0 0 36 0 36 35 19 35 21 36 37 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0461;
unicode = 0461;
},
{
glyphname = uni0463;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"727 1228 LINE",
"405 1228 LINE",
"405 1560 LINE",
"220 1560 LINE",
"220 1228 LINE",
"28 1228 LINE",
"28 1076 LINE",
"220 1076 LINE",
"220 0 LINE",
"680 0 LINE SMOOTH",
"777 0 OFFCURVE",
"927 52 OFFCURVE",
"1030 144 OFFCURVE",
"1084 268 OFFCURVE",
"1084 340 QCURVE SMOOTH",
"1084 412 OFFCURVE",
"1030 534 OFFCURVE",
"927 623 OFFCURVE",
"777 672 OFFCURVE",
"680 672 QCURVE SMOOTH",
"405 672 LINE",
"405 1076 LINE",
"727 1076 LINE",
"727 1076 LINE"
);
},
{
closed = 1;
nodes = (
"680 521 LINE SMOOTH",
"738 521 OFFCURVE",
"820 488 OFFCURVE",
"873 435 OFFCURVE",
"898 367 OFFCURVE",
"898 333 QCURVE SMOOTH",
"898 297 OFFCURVE",
"873 232 OFFCURVE",
"820 181 OFFCURVE",
"738 151 OFFCURVE",
"680 151 QCURVE SMOOTH",
"405 151 LINE",
"405 521 LINE",
"405 521 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
0 5 4 5 114 6 1 4 3 1 0 1 4 0 97 0 1 9 1 8 7 1 8 99 0 7 7 2 92 0 2 2 23 2 76 23 23 23 35 23 34 34 17 17 17 17 40 33 16 10 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0463;
unicode = 0463;
},
{
glyphname = uni0464;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"309 1456 LINE",
"125 1456 LINE",
"125 0 LINE",
"309 0 LINE",
"309 681 LINE",
"459 681 LINE",
"459 526 LINE SMOOTH",
"459 397 OFFCURVE",
"509 194 OFFCURVE",
"604 55 OFFCURVE",
"741 -19 OFFCURVE",
"828 -19 QCURVE SMOOTH",
"909 -19 OFFCURVE",
"1031 43 OFFCURVE",
"1116 154 OFFCURVE",
"1165 305 OFFCURVE",
"1172 393 QCURVE",
"1005 393 LINE",
"999 331 OFFCURVE",
"976 234 OFFCURVE",
"934 167 OFFCURVE",
"872 131 OFFCURVE",
"828 131 QCURVE SMOOTH",
"781 131 OFFCURVE",
"712 185 OFFCURVE",
"667 286 OFFCURVE",
"644 433 OFFCURVE",
"644 526 QCURVE SMOOTH",
"644 681 LINE",
"926 681 LINE",
"926 832 LINE",
"644 832 LINE",
"644 933 LINE SMOOTH",
"644 1025 OFFCURVE",
"667 1171 OFFCURVE",
"712 1272 OFFCURVE",
"781 1326 OFFCURVE",
"828 1326 QCURVE SMOOTH",
"872 1326 OFFCURVE",
"934 1288 OFFCURVE",
"976 1217 OFFCURVE",
"1000 1118 OFFCURVE",
"1005 1057 QCURVE",
"1172 1057 LINE",
"1165 1153 OFFCURVE",
"1116 1309 OFFCURVE",
"1031 1418 OFFCURVE",
"909 1477 OFFCURVE",
"828 1477 QCURVE SMOOTH",
"741 1477 OFFCURVE",
"604 1403 OFFCURVE",
"509 1263 OFFCURVE",
"459 1060 OFFCURVE",
"459 931 QCURVE SMOOTH",
"459 832 LINE",
"309 832 LINE",
"309 832 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 2 3 0 3 2 0 112 0 7 5 6 5 7 6 112 4 1 0 9 1 5 7 0 5 97 0 3 3 1 91 11 1 1 1 29 75 0 6 6 8 91 10 1 8 8 30 8 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 53 values pushed */
0 2 3 0 3 2 0 112 0 7 5 6 5 7 6 112 4 1 0 9 1 5 7 0 5 97 0 11 11 22 75 0 3 3 1 91 0 1 1 29 75 0 6 6 8 91 10 1 8 8 30 8 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 57 values pushed */
0 2 3 0 3 2 0 112 0 7 5 6 5 7 6 112 4 1 0 9 1 5 7 0 5 97 0 11 11 22 75 0 3 3 1 91 0 1 1 29 75 0 10 10 23 75 0 6 6 8 91 0 8 8 30 8 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
55 54 53 52 51 50 36 20 37 17 21 36 20 37 16 12 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0464;
unicode = 0464;
},
{
glyphname = uni0465;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"967 615 LINE",
"668 615 LINE",
"669 679 OFFCURVE",
"690 800 OFFCURVE",
"733 894 OFFCURVE",
"800 950 OFFCURVE",
"847 950 QCURVE SMOOTH",
"880 950 OFFCURVE",
"931 917 OFFCURVE",
"967 861 OFFCURVE",
"986 787 OFFCURVE",
"986 747 QCURVE",
"1161 747 LINE",
"1161 821 OFFCURVE",
"1116 950 OFFCURVE",
"1034 1046 OFFCURVE",
"918 1102 OFFCURVE",
"847 1102 QCURVE SMOOTH",
"758 1102 OFFCURVE",
"624 1026 OFFCURVE",
"533 894 OFFCURVE",
"485 717 OFFCURVE",
"483 615 QCURVE",
"340 615 LINE",
"340 1082 LINE",
"155 1082 LINE",
"155 0 LINE",
"340 0 LINE",
"340 464 LINE",
"483 464 LINE",
"486 362 OFFCURVE",
"534 186 OFFCURVE",
"625 55 OFFCURVE",
"758 -20 OFFCURVE",
"847 -20 QCURVE SMOOTH",
"911 -20 OFFCURVE",
"1026 33 OFFCURVE",
"1111 123 OFFCURVE",
"1161 240 OFFCURVE",
"1161 304 QCURVE",
"986 304 LINE",
"985 268 OFFCURVE",
"964 205 OFFCURVE",
"927 157 OFFCURVE",
"877 130 OFFCURVE",
"847 130 QCURVE SMOOTH",
"800 130 OFFCURVE",
"733 185 OFFCURVE",
"691 278 OFFCURVE",
"670 398 OFFCURVE",
"668 464 QCURVE",
"967 464 LINE",
"967 464 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 49 values pushed */
0 9 10 7 10 9 7 112 0 2 0 1 0 2 1 112 11 1 7 4 1 0 2 7 0 97 0 10 10 6 91 8 1 6 6 24 75 0 1 1 3 91 5 1 3 3 30 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 57 values pushed */
0 9 10 7 10 9 7 112 0 2 0 1 0 2 1 112 11 1 7 4 1 0 2 7 0 97 0 6 6 24 75 0 10 10 8 91 0 8 8 31 75 0 5 5 23 75 0 1 1 3 91 0 3 3 30 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
51 50 46 44 40 39 36 17 17 17 20 36 20 36 16 12 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0465;
unicode = 0465;
},
{
glyphname = uni0466;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1013 0 LINE",
"1202 0 LINE",
"705 1456 LINE",
"545 1456 LINE",
"39 0 LINE",
"228 0 LINE",
"375 440 LINE",
"523 440 LINE",
"523 0 LINE",
"708 0 LINE",
"708 440 LINE",
"869 440 LINE",
"869 440 LINE"
);
},
{
closed = 1;
nodes = (
"624 1188 LINE",
"816 601 LINE",
"428 601 LINE",
"428 601 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
14 1 6 4 1 74 0 6 2 1 0 1 6 0 97 0 4 4 22 75 5 3 2 1 1 23 1 76 17 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0466;
unicode = 0466;
},
{
glyphname = uni0467;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"963 0 LINE",
"1153 0 LINE",
"698 1082 LINE",
"539 1082 LINE",
"87 0 LINE",
"276 0 LINE",
"394 297 LINE",
"529 297 LINE",
"529 0 LINE",
"714 0 LINE",
"714 297 LINE",
"842 297 LINE",
"842 297 LINE"
);
},
{
closed = 1;
nodes = (
"592 792 LINE",
"617 874 LINE",
"641 792 LINE",
"780 449 LINE",
"455 449 LINE",
"455 449 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
15 1 6 4 1 74 0 6 2 1 0 1 6 0 97 0 4 4 24 75 5 3 2 1 1 23 1 76 17 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0467;
unicode = 0467;
},
{
glyphname = uni0468;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1024 0 LINE",
"1212 0 LINE",
"874 1456 LINE",
"715 1456 LINE",
"507 629 LINE",
"298 629 LINE",
"298 1456 LINE",
"113 1456 LINE",
"113 0 LINE",
"298 0 LINE",
"298 468 LINE",
"466 468 LINE",
"349 0 LINE",
"538 0 LINE",
"642 468 LINE",
"711 468 LINE",
"711 0 LINE",
"859 0 LINE",
"859 468 LINE",
"929 468 LINE",
"929 468 LINE"
);
},
{
closed = 1;
nodes = (
"792 1145 LINE",
"896 629 LINE",
"677 629 LINE",
"677 629 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
22 1 7 6 1 74 10 1 7 4 2 2 0 1 7 0 98 8 1 6 6 22 75 9 5 3 3 1 1 23 1 76 21 20 19 18 17 17 17 17 17 17 17 17 16 11 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0468;
unicode = 0468;
},
{
glyphname = uni0469;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1024 0 LINE",
"1213 0 LINE",
"874 1082 LINE",
"715 1082 LINE",
"502 454 LINE",
"297 454 LINE",
"297 1082 LINE",
"112 1082 LINE",
"112 0 LINE",
"297 0 LINE",
"297 293 LINE",
"448 293 LINE",
"349 0 LINE",
"538 0 LINE",
"631 293 LINE",
"710 293 LINE",
"710 0 LINE",
"867 0 LINE",
"867 293 LINE",
"939 293 LINE",
"939 293 LINE"
);
},
{
closed = 1;
nodes = (
"792 802 LINE",
"893 454 LINE",
"682 454 LINE",
"682 454 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
22 1 7 6 1 74 10 1 7 4 2 2 0 1 7 0 97 8 1 6 6 24 75 9 5 3 3 1 1 23 1 76 21 20 19 18 17 17 17 17 17 17 17 17 16 11 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0469;
unicode = 0469;
},
{
glyphname = uni046A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"271 0 LINE",
"271 427 LINE SMOOTH",
"271 488 OFFCURVE",
"292 570 OFFCURVE",
"335 620 OFFCURVE",
"402 642 OFFCURVE",
"448 642 QCURVE SMOOTH",
"528 642 LINE",
"531 637 LINE",
"531 0 LINE",
"716 0 LINE",
"716 622 LINE",
"725 642 LINE",
"793 642 LINE SMOOTH",
"839 642 OFFCURVE",
"906 620 OFFCURVE",
"950 570 OFFCURVE",
"972 488 OFFCURVE",
"972 427 QCURVE SMOOTH",
"972 0 LINE",
"1157 0 LINE",
"1157 427 LINE SMOOTH",
"1157 525 OFFCURVE",
"1109 663 OFFCURVE",
"1016 752 OFFCURVE",
"882 793 OFFCURVE",
"796 794 QCURVE",
"1105 1456 LINE",
"114 1456 LINE",
"451 794 LINE",
"448 794 LINE SMOOTH",
"362 794 OFFCURVE",
"227 753 OFFCURVE",
"134 664 OFFCURVE",
"85 525 OFFCURVE",
"85 427 QCURVE SMOOTH",
"86 0 LINE",
"86 0 LINE"
);
},
{
closed = 1;
nodes = (
"398 1304 LINE",
"828 1304 LINE",
"624 830 LINE",
"624 830 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
25 1 3 4 1 74 2 1 0 6 1 4 3 0 4 99 0 8 8 1 89 0 1 1 22 75 9 7 5 3 3 3 23 3 76 0 0 39 38 0 36 0 36 49 18 37 21 17 18 21 10 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni046A;
unicode = 046A;
},
{
glyphname = uni046B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"290 0 LINE",
"290 219 LINE SMOOTH",
"290 286 OFFCURVE",
"310 375 OFFCURVE",
"350 429 OFFCURVE",
"411 452 OFFCURVE",
"453 452 QCURVE SMOOTH",
"514 452 LINE",
"519 443 LINE",
"519 0 LINE",
"705 0 LINE",
"705 435 LINE",
"715 452 LINE",
"764 452 LINE SMOOTH",
"806 452 OFFCURVE",
"867 429 OFFCURVE",
"907 375 OFFCURVE",
"927 286 OFFCURVE",
"927 219 QCURVE SMOOTH",
"928 0 LINE",
"1113 0 LINE",
"1113 219 LINE SMOOTH",
"1113 316 OFFCURVE",
"1071 456 OFFCURVE",
"991 549 OFFCURVE",
"877 597 OFFCURVE",
"804 602 QCURVE",
"1087 1082 LINE",
"143 1082 LINE",
"425 603 LINE",
"350 600 OFFCURVE",
"231 553 OFFCURVE",
"148 461 OFFCURVE",
"105 318 OFFCURVE",
"105 219 QCURVE SMOOTH",
"105 0 LINE",
"105 0 LINE"
);
},
{
closed = 1;
nodes = (
"433 930 LINE",
"795 930 LINE",
"617 604 LINE",
"612 604 LINE",
"612 604 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
27 24 2 3 4 1 74 2 1 0 6 1 4 3 0 4 99 0 8 8 1 89 0 1 1 24 75 9 7 5 3 3 3 23 3 76 0 0 39 38 0 35 0 35 19 18 37 21 17 17 21 10 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni046B;
unicode = 046B;
},
{
glyphname = uni046C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1146 1456 LINE",
"401 1456 LINE",
"636 792 LINE",
"251 792 LINE",
"251 1456 LINE",
"80 1456 LINE",
"80 0 LINE",
"251 0 LINE",
"251 640 LINE",
"406 640 LINE",
"386 580 OFFCURVE",
"386 500 QCURVE SMOOTH",
"387 0 LINE",
"540 0 LINE",
"540 500 LINE SMOOTH",
"540 573 OFFCURVE",
"589 638 OFFCURVE",
"646 640 QCURVE SMOOTH",
"650 640 LINE",
"652 640 LINE",
"690 640 LINE",
"698 617 LINE",
"698 0 LINE",
"851 0 LINE",
"851 620 LINE",
"858 640 LINE",
"893 640 LINE SMOOTH",
"954 640 OFFCURVE",
"1005 575 OFFCURVE",
"1005 500 QCURVE SMOOTH",
"1006 0 LINE",
"1159 0 LINE",
"1159 500 LINE SMOOTH",
"1159 646 OFFCURVE",
"1031 787 OFFCURVE",
"911 792 QCURVE",
"911 792 LINE"
);
},
{
closed = 1;
nodes = (
"645 1304 LINE",
"903 1304 LINE",
"774 893 LINE",
"774 893 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
14 11 2 1 2 1 74 9 1 0 6 4 2 2 1 0 2 99 0 11 11 8 89 10 1 8 8 22 75 7 5 3 3 1 1 23 1 76 38 37 35 34 33 32 17 17 19 19 66 18 35 19 16 12 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni046C;
unicode = 046C;
},
{
glyphname = uni046D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1146 1082 LINE",
"412 1082 LINE",
"622 595 LINE",
"252 595 LINE",
"252 1082 LINE",
"81 1082 LINE",
"81 0 LINE",
"252 0 LINE",
"252 443 LINE",
"408 443 LINE",
"387 384 OFFCURVE",
"387 303 QCURVE SMOOTH",
"388 0 LINE",
"541 0 LINE",
"541 303 LINE SMOOTH",
"541 377 OFFCURVE",
"593 441 OFFCURVE",
"650 443 QCURVE SMOOTH",
"652 443 LINE",
"656 443 LINE",
"688 443 LINE",
"698 421 LINE",
"698 0 LINE",
"852 0 LINE",
"852 414 LINE",
"858 414 LINE",
"870 443 LINE",
"888 443 LINE SMOOTH",
"951 443 OFFCURVE",
"1004 379 OFFCURVE",
"1004 303 QCURVE SMOOTH",
"1005 0 LINE",
"1158 0 LINE",
"1158 303 LINE SMOOTH",
"1158 443 OFFCURVE",
"1044 581 OFFCURVE",
"935 592 QCURVE",
"935 592 LINE"
);
},
{
closed = 1;
nodes = (
"655 939 LINE",
"903 939 LINE",
"779 620 LINE",
"779 620 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
15 11 2 0 1 1 74 0 8 5 3 2 1 0 8 1 99 0 10 10 7 89 9 1 7 7 24 75 6 4 2 3 0 0 23 0 76 39 38 36 35 17 17 17 19 19 66 20 19 20 11 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni046D;
unicode = 046D;
},
{
glyphname = uni046E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"399 823 LINE",
"399 672 LINE",
"540 672 LINE SMOOTH",
"619 672 OFFCURVE",
"743 639 OFFCURVE",
"829 573 OFFCURVE",
"874 471 OFFCURVE",
"874 402 QCURVE SMOOTH",
"874 342 OFFCURVE",
"832 243 OFFCURVE",
"755 172 OFFCURVE",
"646 132 OFFCURVE",
"580 132 QCURVE SMOOTH",
"534 132 LINE SMOOTH",
"459 132 OFFCURVE",
"337 102 OFFCURVE",
"250 40 OFFCURVE",
"202 -56 OFFCURVE",
"202 -123 QCURVE SMOOTH",
"203 -183 OFFCURVE",
"250 -283 OFFCURVE",
"325 -363 OFFCURVE",
"418 -422 OFFCURVE",
"465 -442 QCURVE",
"539 -318 LINE",
"516 -308 OFFCURVE",
"461 -277 OFFCURVE",
"411 -233 OFFCURVE",
"378 -172 OFFCURVE",
"378 -132 QCURVE SMOOTH",
"378 -81 OFFCURVE",
"449 -19 OFFCURVE",
"527 -19 QCURVE SMOOTH",
"580 -19 LINE SMOOTH",
"681 -19 OFFCURVE",
"857 37 OFFCURVE",
"986 145 OFFCURVE",
"1060 304 OFFCURVE",
"1060 406 QCURVE SMOOTH",
"1060 538 OFFCURVE",
"918 710 OFFCURVE",
"790 750 QCURVE",
"847 772 OFFCURVE",
"939 836 OFFCURVE",
"1003 916 OFFCURVE",
"1038 1010 OFFCURVE",
"1038 1063 QCURVE SMOOTH",
"1038 1156 OFFCURVE",
"965 1302 OFFCURVE",
"837 1403 OFFCURVE",
"662 1456 OFFCURVE",
"560 1456 QCURVE SMOOTH",
"254 1456 LINE",
"254 1304 LINE",
"560 1304 LINE SMOOTH",
"632 1304 OFFCURVE",
"741 1268 OFFCURVE",
"815 1204 OFFCURVE",
"852 1117 OFFCURVE",
"852 1067 QCURVE SMOOTH",
"852 954 OFFCURVE",
"699 824 OFFCURVE",
"540 823 QCURVE",
"540 823 LINE"
);
},
{
closed = 1;
nodes = (
"421 1908 LINE",
"264 1908 LINE",
"264 1887 LINE",
"515 1642 LINE",
"629 1642 LINE",
"883 1890 LINE",
"883 1908 LINE",
"723 1908 LINE",
"572 1756 LINE",
"572 1756 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 81 values pushed */
69 1 7 6 21 1 5 0 2 74 39 38 2 3 71 8 1 6 7 6 114 0 7 2 7 114 9 1 0 0 5 4 0 5 99 0 1 1 2 91 0 2 2 22 75 0 4 4 3 91 0 3 3 30 3 76 1 0 71 70 68 67 65 64 61 59 51 48 31 28 12 10 9 7 0 62 1 62 10 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni046E;
unicode = 046E;
},
{
glyphname = uni046F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"415 617 LINE",
"415 466 LINE",
"556 466 LINE SMOOTH",
"623 466 OFFCURVE",
"731 446 OFFCURVE",
"807 406 OFFCURVE",
"848 343 OFFCURVE",
"848 300 QCURVE SMOOTH",
"848 262 OFFCURVE",
"810 200 OFFCURVE",
"744 156 OFFCURVE",
"651 132 OFFCURVE",
"596 132 QCURVE SMOOTH",
"555 132 LINE SMOOTH",
"480 132 OFFCURVE",
"357 102 OFFCURVE",
"270 40 OFFCURVE",
"222 -56 OFFCURVE",
"222 -123 QCURVE SMOOTH",
"223 -183 OFFCURVE",
"271 -283 OFFCURVE",
"346 -363 OFFCURVE",
"439 -422 OFFCURVE",
"485 -442 QCURVE",
"560 -318 LINE",
"537 -308 OFFCURVE",
"482 -277 OFFCURVE",
"432 -233 OFFCURVE",
"399 -172 OFFCURVE",
"399 -132 QCURVE SMOOTH",
"398 -81 OFFCURVE",
"470 -19 OFFCURVE",
"548 -19 QCURVE SMOOTH",
"596 -19 LINE SMOOTH",
"687 -19 OFFCURVE",
"847 24 OFFCURVE",
"965 106 OFFCURVE",
"1033 226 OFFCURVE",
"1033 304 QCURVE SMOOTH",
"1033 393 OFFCURVE",
"919 514 OFFCURVE",
"816 545 QCURVE",
"907 580 OFFCURVE",
"1011 698 OFFCURVE",
"1011 773 QCURVE SMOOTH",
"1011 846 OFFCURVE",
"943 961 OFFCURVE",
"826 1041 OFFCURVE",
"667 1082 OFFCURVE",
"576 1082 QCURVE SMOOTH",
"276 1082 LINE",
"276 929 LINE",
"576 929 LINE SMOOTH",
"636 929 OFFCURVE",
"728 906 OFFCURVE",
"792 866 OFFCURVE",
"825 810 OFFCURVE",
"825 777 QCURVE SMOOTH",
"826 702 OFFCURVE",
"693 617 OFFCURVE",
"556 617 QCURVE",
"556 617 LINE"
);
},
{
closed = 1;
nodes = (
"429 1566 LINE",
"272 1566 LINE",
"272 1545 LINE",
"523 1300 LINE",
"637 1300 LINE",
"891 1548 LINE",
"891 1566 LINE",
"731 1566 LINE",
"580 1414 LINE",
"580 1414 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 81 values pushed */
67 1 7 6 19 1 5 0 2 74 37 36 2 3 71 8 1 6 7 6 114 0 7 2 7 114 9 1 0 0 5 4 0 5 99 0 1 1 2 91 0 2 2 24 75 0 4 4 3 91 0 3 3 30 3 76 1 0 69 68 66 65 63 62 59 57 49 46 29 26 12 10 9 7 0 60 1 60 10 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni046F;
unicode = 046F;
},
{
glyphname = uni0472;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1114 810 LINE SMOOTH",
"1113 888 OFFCURVE",
"1088 1048 OFFCURVE",
"1035 1196 OFFCURVE",
"954 1325 OFFCURVE",
"842 1421 OFFCURVE",
"696 1476 OFFCURVE",
"606 1476 QCURVE SMOOTH",
"516 1476 OFFCURVE",
"371 1421 OFFCURVE",
"259 1324 OFFCURVE",
"178 1195 OFFCURVE",
"125 1047 OFFCURVE",
"100 888 OFFCURVE",
"99 810 QCURVE SMOOTH",
"99 644 LINE SMOOTH",
"100 566 OFFCURVE",
"126 408 OFFCURVE",
"179 260 OFFCURVE",
"261 131 OFFCURVE",
"373 35 OFFCURVE",
"518 -20 OFFCURVE",
"608 -20 QCURVE SMOOTH",
"698 -20 OFFCURVE",
"843 35 OFFCURVE",
"955 131 OFFCURVE",
"1036 259 OFFCURVE",
"1088 407 OFFCURVE",
"1113 566 OFFCURVE",
"1114 644 QCURVE",
"1114 644 LINE"
);
},
{
closed = 1;
nodes = (
"281 812 LINE SMOOTH",
"282 863 OFFCURVE",
"295 976 OFFCURVE",
"324 1087 OFFCURVE",
"372 1188 OFFCURVE",
"444 1265 OFFCURVE",
"542 1311 OFFCURVE",
"606 1311 QCURVE SMOOTH",
"671 1311 OFFCURVE",
"769 1266 OFFCURVE",
"841 1189 OFFCURVE",
"889 1088 OFFCURVE",
"918 977 OFFCURVE",
"930 864 OFFCURVE",
"931 812 QCURVE SMOOTH",
"931 801 LINE",
"281 801 LINE",
"281 801 LINE"
);
},
{
closed = 1;
nodes = (
"931 644 LINE SMOOTH",
"930 592 OFFCURVE",
"919 478 OFFCURVE",
"890 367 OFFCURVE",
"843 266 OFFCURVE",
"772 189 OFFCURVE",
"673 143 OFFCURVE",
"608 143 QCURVE SMOOTH",
"543 143 OFFCURVE",
"445 189 OFFCURVE",
"373 266 OFFCURVE",
"325 368 OFFCURVE",
"295 479 OFFCURVE",
"282 593 OFFCURVE",
"281 644 QCURVE SMOOTH",
"281 649 LINE",
"931 649 LINE",
"931 649 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
6 1 2 7 1 4 5 2 4 97 0 3 3 1 91 0 1 1 29 75 0 5 5 0 91 0 0 0 30 0 76 48 47 31 30 57 55 47 63 48 63 40 38 30 46 31 46 45 38 8 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0472;
unicode = 0472;
},
{
glyphname = uni0473;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"93 529 LINE SMOOTH",
"93 412 OFFCURVE",
"161 212 OFFCURVE",
"288 64 OFFCURVE",
"471 -20 OFFCURVE",
"586 -20 QCURVE SMOOTH",
"700 -20 OFFCURVE",
"882 64 OFFCURVE",
"1009 212 OFFCURVE",
"1077 412 OFFCURVE",
"1077 529 QCURVE SMOOTH",
"1077 551 LINE SMOOTH",
"1077 668 OFFCURVE",
"1009 869 OFFCURVE",
"882 1017 OFFCURVE",
"699 1102 OFFCURVE",
"584 1102 QCURVE SMOOTH",
"470 1102 OFFCURVE",
"288 1017 OFFCURVE",
"161 869 OFFCURVE",
"93 668 OFFCURVE",
"93 551 QCURVE",
"93 551 LINE"
);
},
{
closed = 1;
nodes = (
"516 130 OFFCURVE",
"409 183 OFFCURVE",
"332 275 OFFCURVE",
"288 398 OFFCURVE",
"281 468 QCURVE",
"889 468 LINE",
"882 398 OFFCURVE",
"838 275 OFFCURVE",
"762 183 OFFCURVE",
"655 130 OFFCURVE",
"586 130 QCURVE",
"586 130 LINE"
);
},
{
closed = 1;
nodes = (
"652 950 OFFCURVE",
"759 898 OFFCURVE",
"835 808 OFFCURVE",
"880 687 OFFCURVE",
"888 619 QCURVE",
"281 619 LINE",
"288 687 OFFCURVE",
"334 808 OFFCURVE",
"410 898 OFFCURVE",
"516 950 OFFCURVE",
"584 950 QCURVE",
"584 950 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
0 5 0 3 2 5 3 97 7 1 4 4 0 91 0 0 0 31 75 6 1 2 2 1 91 0 1 1 30 1 76 34 33 23 22 39 38 33 43 34 43 28 27 22 32 23 32 41 36 8 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0473;
unicode = 0473;
},
{
glyphname = uni0474;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"235 1456 LINE",
"26 1456 LINE",
"532 0 LINE",
"702 0 LINE",
"1089 1159 LINE SMOOTH",
"1103 1197 OFFCURVE",
"1131 1252 OFFCURVE",
"1166 1287 OFFCURVE",
"1208 1303 OFFCURVE",
"1235 1303 QCURVE SMOOTH",
"1248 1303 LINE",
"1249 1474 LINE",
"1203 1475 LINE SMOOTH",
"1147 1475 OFFCURVE",
"1059 1441 OFFCURVE",
"989 1369 OFFCURVE",
"933 1259 OFFCURVE",
"909 1182 QCURVE SMOOTH",
"651 373 LINE",
"617 244 LINE",
"583 374 LINE",
"583 374 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
1 1 2 1 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 1 1 0 91 3 1 0 0 29 75 0 2 2 23 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 3 3 22 75 0 1 1 0 91 0 0 0 29 75 0 2 2 23 2 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
17 21 33 39 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0474;
unicode = 0474;
},
{
glyphname = uni0475;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"271 1082 LINE",
"81 1082 LINE",
"491 0 LINE",
"632 0 LINE",
"949 844 LINE SMOOTH",
"963 885 OFFCURVE",
"1023 937 OFFCURVE",
"1056 937 QCURVE SMOOTH",
"1070 937 OFFCURVE",
"1093 932 OFFCURVE",
"1099 929 QCURVE",
"1120 1077 LINE",
"1094 1094 OFFCURVE",
"1042 1101 OFFCURVE",
"1014 1101 QCURVE SMOOTH",
"937 1102 OFFCURVE",
"806 988 OFFCURVE",
"764 859 QCURVE SMOOTH",
"588 316 LINE",
"563 215 LINE",
"539 316 LINE",
"539 316 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 11 values pushed */
9 1 1 0 10 1 2 2 1 2 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 11 values pushed */
9 1 1 3 10 1 2 2 1 2 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
27 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 17 values pushed */
0 1 1 0 91 3 1 0 0 31 75 0 2 2 23 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 3 3 24 75 0 1 1 0 91 0 0 0 31 75 0 2 2 23 2 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
17 19 37 37 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0475;
unicode = 0475;
},
{
glyphname = uni0478;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"650 968 LINE SMOOTH",
"650 1083 OFFCURVE",
"611 1271 OFFCURVE",
"534 1404 OFFCURVE",
"422 1476 OFFCURVE",
"349 1476 QCURVE SMOOTH",
"280 1476 OFFCURVE",
"175 1404 OFFCURVE",
"104 1271 OFFCURVE",
"69 1083 OFFCURVE",
"69 968 QCURVE SMOOTH",
"69 487 LINE SMOOTH",
"69 372 OFFCURVE",
"104 185 OFFCURVE",
"175 52 OFFCURVE",
"280 -20 OFFCURVE",
"349 -20 QCURVE SMOOTH",
"422 -20 OFFCURVE",
"535 52 OFFCURVE",
"611 185 OFFCURVE",
"650 372 OFFCURVE",
"650 487 QCURVE",
"650 487 LINE"
);
},
{
closed = 1;
nodes = (
"864 1082 LINE",
"700 1082 LINE",
"859 -1 LINE",
"835 -95 LINE SMOOTH",
"830 -116 OFFCURVE",
"813 -178 OFFCURVE",
"786 -236 OFFCURVE",
"745 -277 OFFCURVE",
"716 -277 QCURVE SMOOTH",
"710 -277 OFFCURVE",
"691 -276 OFFCURVE",
"671 -274 OFFCURVE",
"652 -272 OFFCURVE",
"646 -271 QCURVE",
"642 -415 LINE",
"649 -417 OFFCURVE",
"673 -423 OFFCURVE",
"699 -428 OFFCURVE",
"724 -431 OFFCURVE",
"734 -431 QCURVE SMOOTH",
"791 -431 OFFCURVE",
"871 -378 OFFCURVE",
"926 -299 OFFCURVE",
"960 -207 OFFCURVE",
"969 -168 QCURVE SMOOTH",
"1210 1082 LINE",
"1046 1082 LINE",
"941 464 LINE",
"926 627 LINE",
"926 627 LINE"
);
},
{
closed = 1;
nodes = (
"465 450 LINE SMOOTH",
"465 378 OFFCURVE",
"453 262 OFFCURVE",
"426 181 OFFCURVE",
"382 137 OFFCURVE",
"349 137 QCURVE SMOOTH",
"317 137 OFFCURVE",
"274 181 OFFCURVE",
"248 262 OFFCURVE",
"236 378 OFFCURVE",
"236 450 QCURVE SMOOTH",
"236 1007 LINE SMOOTH",
"236 1079 OFFCURVE",
"248 1194 OFFCURVE",
"274 1275 OFFCURVE",
"317 1318 OFFCURVE",
"349 1318 QCURVE SMOOTH",
"381 1318 OFFCURVE",
"426 1275 OFFCURVE",
"453 1194 OFFCURVE",
"465 1079 OFFCURVE",
"465 1007 QCURVE",
"465 1007 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
23 1 7 2 48 1 0 7 37 1 4 0 3 74 0 6 6 1 91 0 1 1 29 75 5 1 2 2 24 75 0 7 7 0 91 0 0 0 30 75 0 4 4 3 92 0 3 3 33 3 76 41 37 22 57 21 23 41 36 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0478;
unicode = 0478;
},
{
glyphname = uni0479;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"55 529 LINE SMOOTH",
"55 412 OFFCURVE",
"91 211 OFFCURVE",
"167 64 OFFCURVE",
"288 -20 OFFCURVE",
"374 -20 QCURVE SMOOTH",
"459 -20 OFFCURVE",
"580 64 OFFCURVE",
"657 211 OFFCURVE",
"693 412 OFFCURVE",
"693 529 QCURVE SMOOTH",
"693 552 LINE SMOOTH",
"693 669 OFFCURVE",
"657 870 OFFCURVE",
"580 1018 OFFCURVE",
"458 1102 OFFCURVE",
"372 1102 QCURVE SMOOTH",
"287 1102 OFFCURVE",
"167 1018 OFFCURVE",
"90 870 OFFCURVE",
"55 669 OFFCURVE",
"55 552 QCURVE",
"55 552 LINE"
);
},
{
closed = 1;
nodes = (
"865 1082 LINE",
"701 1082 LINE",
"860 -1 LINE",
"836 -95 LINE SMOOTH",
"830 -116 OFFCURVE",
"814 -178 OFFCURVE",
"787 -236 OFFCURVE",
"746 -277 OFFCURVE",
"717 -277 QCURVE SMOOTH",
"711 -277 OFFCURVE",
"692 -276 OFFCURVE",
"672 -274 OFFCURVE",
"653 -272 OFFCURVE",
"647 -271 QCURVE",
"643 -415 LINE",
"650 -417 OFFCURVE",
"674 -423 OFFCURVE",
"700 -428 OFFCURVE",
"725 -431 OFFCURVE",
"735 -431 QCURVE SMOOTH",
"792 -431 OFFCURVE",
"872 -378 OFFCURVE",
"927 -299 OFFCURVE",
"961 -207 OFFCURVE",
"970 -168 QCURVE SMOOTH",
"1211 1082 LINE",
"1047 1082 LINE",
"939 448 LINE",
"926 627 LINE",
"926 627 LINE"
);
},
{
closed = 1;
nodes = (
"240 552 LINE SMOOTH",
"240 630 OFFCURVE",
"248 774 OFFCURVE",
"275 884 OFFCURVE",
"328 950 OFFCURVE",
"372 950 QCURVE SMOOTH",
"417 950 OFFCURVE",
"471 884 OFFCURVE",
"499 774 OFFCURVE",
"507 630 OFFCURVE",
"507 552 QCURVE SMOOTH",
"507 529 LINE SMOOTH",
"507 449 OFFCURVE",
"499 305 OFFCURVE",
"472 195 OFFCURVE",
"419 130 OFFCURVE",
"374 130 QCURVE SMOOTH",
"329 130 OFFCURVE",
"276 195 OFFCURVE",
"248 305 OFFCURVE",
"240 449 OFFCURVE",
"240 529 QCURVE",
"240 529 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
23 1 6 7 48 1 1 6 37 1 4 1 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 33 values pushed */
0 7 7 0 89 5 2 2 0 0 24 75 0 6 6 1 91 0 1 1 30 75 0 4 4 3 92 0 3 3 33 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
5 1 2 2 24 75 0 7 7 0 91 0 0 0 31 75 0 6 6 1 91 0 1 1 30 75 0 4 4 3 92 0 3 3 33 3 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
41 37 22 57 21 23 41 36 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0479;
unicode = 0479;
},
{
glyphname = uni047A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"706 1589 LINE",
"521 1589 LINE",
"521 1203 LINE",
"706 1203 LINE",
"706 1203 LINE"
);
},
{
closed = 1;
nodes = (
"706 254 LINE",
"521 254 LINE",
"521 -141 LINE",
"706 -141 LINE",
"706 -141 LINE"
);
},
{
closed = 1;
nodes = (
"1121 810 LINE SMOOTH",
"1120 888 OFFCURVE",
"1095 1048 OFFCURVE",
"1042 1196 OFFCURVE",
"961 1325 OFFCURVE",
"849 1421 OFFCURVE",
"703 1476 OFFCURVE",
"613 1476 QCURVE SMOOTH",
"523 1476 OFFCURVE",
"378 1421 OFFCURVE",
"266 1324 OFFCURVE",
"185 1195 OFFCURVE",
"132 1047 OFFCURVE",
"107 888 OFFCURVE",
"106 810 QCURVE SMOOTH",
"106 644 LINE SMOOTH",
"107 566 OFFCURVE",
"133 408 OFFCURVE",
"186 260 OFFCURVE",
"268 131 OFFCURVE",
"380 35 OFFCURVE",
"525 -20 OFFCURVE",
"615 -20 QCURVE SMOOTH",
"705 -20 OFFCURVE",
"850 35 OFFCURVE",
"962 131 OFFCURVE",
"1043 259 OFFCURVE",
"1095 407 OFFCURVE",
"1120 566 OFFCURVE",
"1121 644 QCURVE",
"1121 644 LINE"
);
},
{
closed = 1;
nodes = (
"938 644 LINE SMOOTH",
"937 592 OFFCURVE",
"926 478 OFFCURVE",
"897 367 OFFCURVE",
"850 266 OFFCURVE",
"779 189 OFFCURVE",
"680 143 OFFCURVE",
"615 143 QCURVE SMOOTH",
"550 143 OFFCURVE",
"452 189 OFFCURVE",
"380 266 OFFCURVE",
"332 368 OFFCURVE",
"302 479 OFFCURVE",
"289 593 OFFCURVE",
"288 644 QCURVE SMOOTH",
"288 812 LINE SMOOTH",
"289 863 OFFCURVE",
"302 976 OFFCURVE",
"331 1087 OFFCURVE",
"379 1188 OFFCURVE",
"451 1265 OFFCURVE",
"549 1311 OFFCURVE",
"613 1311 QCURVE SMOOTH",
"678 1311 OFFCURVE",
"776 1266 OFFCURVE",
"848 1189 OFFCURVE",
"896 1088 OFFCURVE",
"925 977 OFFCURVE",
"937 864 OFFCURVE",
"938 812 QCURVE",
"938 812 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 46 values pushed */
0 1 5 5 1 102 0 0 6 3 6 0 104 0 3 7 7 3 102 0 2 4 4 2 103 0 6 6 5 91 0 5 5 29 75 0 7 7 4 92 0 4 4 30 4 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 1 5 5 1 102 0 0 6 3 6 0 104 0 3 7 7 3 102 0 2 4 2 115 0 6 6 5 91 0 5 5 29 75 0 7 7 4 92 0 4 4 30 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 1 5 1 114 0 0 6 3 6 0 3 112 0 3 7 6 3 7 110 0 2 4 2 115 0 6 6 5 91 0 5 5 29 75 0 7 7 4 92 0 4 4 30 4 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
45 45 45 39 17 17 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni047A;
unicode = 047A;
},
{
glyphname = uni047B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"708 1227 LINE",
"522 1227 LINE",
"522 838 LINE",
"708 838 LINE",
"708 838 LINE"
);
},
{
closed = 1;
nodes = (
"708 248 LINE",
"522 248 LINE",
"522 -159 LINE",
"708 -159 LINE",
"708 -159 LINE"
);
},
{
closed = 1;
nodes = (
"122 529 LINE SMOOTH",
"122 412 OFFCURVE",
"190 212 OFFCURVE",
"317 64 OFFCURVE",
"500 -20 OFFCURVE",
"615 -20 QCURVE SMOOTH",
"729 -20 OFFCURVE",
"911 64 OFFCURVE",
"1038 212 OFFCURVE",
"1106 412 OFFCURVE",
"1106 529 QCURVE SMOOTH",
"1106 551 LINE SMOOTH",
"1106 668 OFFCURVE",
"1038 869 OFFCURVE",
"911 1017 OFFCURVE",
"728 1102 OFFCURVE",
"613 1102 QCURVE SMOOTH",
"499 1102 OFFCURVE",
"317 1017 OFFCURVE",
"190 869 OFFCURVE",
"122 668 OFFCURVE",
"122 551 QCURVE",
"122 551 LINE"
);
},
{
closed = 1;
nodes = (
"307 551 LINE SMOOTH",
"307 630 OFFCURVE",
"345 775 OFFCURVE",
"422 885 OFFCURVE",
"536 950 OFFCURVE",
"613 950 QCURVE SMOOTH",
"690 950 OFFCURVE",
"805 885 OFFCURVE",
"882 775 OFFCURVE",
"921 630 OFFCURVE",
"921 551 QCURVE SMOOTH",
"921 529 LINE SMOOTH",
"921 449 OFFCURVE",
"883 304 OFFCURVE",
"806 194 OFFCURVE",
"691 130 OFFCURVE",
"615 130 QCURVE SMOOTH",
"538 130 OFFCURVE",
"422 194 OFFCURVE",
"345 304 OFFCURVE",
"307 449 OFFCURVE",
"307 529 QCURVE",
"307 529 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 46 values pushed */
0 1 4 4 1 102 0 0 7 3 7 0 104 0 3 6 6 3 102 0 2 5 5 2 103 0 7 7 4 91 0 4 4 31 75 0 6 6 5 92 0 5 5 30 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 1 4 4 1 102 0 0 7 3 7 0 104 0 3 6 6 3 102 0 2 5 2 115 0 7 7 4 91 0 4 4 31 75 0 6 6 5 92 0 5 5 30 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
22 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 44 values pushed */
0 1 4 1 114 0 0 7 3 7 0 104 0 3 6 6 3 102 0 2 5 2 115 0 7 7 4 91 0 4 4 31 75 0 6 6 5 92 0 5 5 30 5 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 45 values pushed */
0 1 4 1 114 0 0 7 3 7 0 104 0 3 6 7 3 6 110 0 2 5 2 115 0 7 7 4 91 0 4 4 31 75 0 6 6 5 92 0 5 5 30 5 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 46 values pushed */
0 1 4 1 114 0 0 7 3 7 0 3 112 0 3 6 7 3 6 110 0 2 5 2 115 0 7 7 4 91 0 4 4 31 75 0 6 6 5 92 0 5 5 30 5 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
41 41 41 37 17 17 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni047B;
unicode = 047B;
},
{
glyphname = uni047C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"802 1304 LINE",
"879 1303 OFFCURVE",
"969 1177 OFFCURVE",
"970 1061 QCURVE SMOOTH",
"970 336 LINE SMOOTH",
"969 239 OFFCURVE",
"899 130 OFFCURVE",
"839 130 QCURVE SMOOTH",
"779 130 OFFCURVE",
"709 230 OFFCURVE",
"709 318 QCURVE SMOOTH",
"709 826 LINE",
"523 826 LINE",
"523 318 LINE SMOOTH",
"523 230 OFFCURVE",
"453 130 OFFCURVE",
"393 130 QCURVE SMOOTH",
"332 130 OFFCURVE",
"263 239 OFFCURVE",
"263 336 QCURVE SMOOTH",
"263 1061 LINE SMOOTH",
"263 1177 OFFCURVE",
"352 1303 OFFCURVE",
"430 1304 QCURVE",
"430 1455 LINE",
"351 1455 OFFCURVE",
"221 1404 OFFCURVE",
"128 1304 OFFCURVE",
"77 1157 OFFCURVE",
"77 1061 QCURVE SMOOTH",
"77 336 LINE SMOOTH",
"77 249 OFFCURVE",
"123 116 OFFCURVE",
"206 26 OFFCURVE",
"322 -21 OFFCURVE",
"393 -21 QCURVE SMOOTH",
"468 -21 OFFCURVE",
"583 51 OFFCURVE",
"616 121 QCURVE",
"648 51 OFFCURVE",
"763 -21 OFFCURVE",
"839 -21 QCURVE SMOOTH",
"909 -21 OFFCURVE",
"1026 26 OFFCURVE",
"1109 116 OFFCURVE",
"1155 249 OFFCURVE",
"1155 336 QCURVE SMOOTH",
"1155 1061 LINE SMOOTH",
"1155 1157 OFFCURVE",
"1103 1304 OFFCURVE",
"1010 1404 OFFCURVE",
"880 1455 OFFCURVE",
"802 1455 QCURVE",
"802 1455 LINE"
);
},
{
closed = 1;
nodes = (
"949 1747 LINE SMOOTH",
"904 1747 OFFCURVE",
"827 1766 OFFCURVE",
"759 1794 OFFCURVE",
"697 1827 OFFCURVE",
"636 1854 OFFCURVE",
"573 1873 OFFCURVE",
"539 1873 QCURVE SMOOTH",
"430 1873 OFFCURVE",
"308 1765 OFFCURVE",
"308 1655 QCURVE SMOOTH",
"308 1619 LINE",
"435 1619 LINE",
"436 1637 LINE SMOOTH",
"436 1692 OFFCURVE",
"493 1746 OFFCURVE",
"543 1746 QCURVE SMOOTH",
"581 1746 OFFCURVE",
"662 1707 OFFCURVE",
"758 1660 OFFCURVE",
"874 1620 OFFCURVE",
"947 1620 QCURVE SMOOTH",
"989 1620 LINE",
"989 1747 LINE",
"989 1747 LINE"
);
},
{
closed = 1;
nodes = (
"585 1323 LINE",
"610 1336 OFFCURVE",
"657 1381 OFFCURVE",
"693 1434 OFFCURVE",
"715 1493 OFFCURVE",
"715 1522 QCURVE SMOOTH",
"715 1624 LINE",
"576 1624 LINE",
"576 1528 LINE SMOOTH",
"576 1490 OFFCURVE",
"542 1419 OFFCURVE",
"509 1379 QCURVE",
"509 1379 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 102 values pushed */
63 1 13 10 65 1 0 9 88 1 4 0 14 1 1 5 4 74 0 13 10 9 10 13 9 112 0 6 4 5 4 6 5 112 0 11 0 10 13 11 10 99 14 1 12 0 9 0 12 9 99 8 1 4 4 0 91 3 1 0 0 22 75 7 1 5 5 1 91 2 1 1 1 30 1 76 53 53 82 81 53 76 53 75 70 68 61 59 56 54 21 35 19 37 17 25 36 41 16 15 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni047C;
unicode = 047C;
},
{
glyphname = uni047D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"813 950 LINE",
"882 949 OFFCURVE",
"963 828 OFFCURVE",
"963 710 QCURVE SMOOTH",
"963 332 LINE SMOOTH",
"963 235 OFFCURVE",
"902 130 OFFCURVE",
"849 130 QCURVE SMOOTH",
"789 130 OFFCURVE",
"719 226 OFFCURVE",
"719 314 QCURVE SMOOTH",
"719 583 LINE",
"533 583 LINE",
"533 314 LINE SMOOTH",
"532 226 OFFCURVE",
"462 130 OFFCURVE",
"402 130 QCURVE SMOOTH",
"348 130 OFFCURVE",
"289 235 OFFCURVE",
"289 332 QCURVE SMOOTH",
"289 710 LINE SMOOTH",
"289 828 OFFCURVE",
"369 949 OFFCURVE",
"438 950 QCURVE",
"438 1101 LINE",
"363 1101 OFFCURVE",
"240 1051 OFFCURVE",
"152 952 OFFCURVE",
"103 806 OFFCURVE",
"103 710 QCURVE SMOOTH",
"103 332 LINE SMOOTH",
"103 245 OFFCURVE",
"146 113 OFFCURVE",
"225 24 OFFCURVE",
"335 -21 OFFCURVE",
"402 -21 QCURVE SMOOTH",
"478 -21 OFFCURVE",
"593 49 OFFCURVE",
"626 119 QCURVE",
"659 49 OFFCURVE",
"773 -21 OFFCURVE",
"849 -21 QCURVE SMOOTH",
"916 -21 OFFCURVE",
"1026 24 OFFCURVE",
"1105 113 OFFCURVE",
"1148 245 OFFCURVE",
"1148 332 QCURVE SMOOTH",
"1148 710 LINE SMOOTH",
"1148 806 OFFCURVE",
"1099 952 OFFCURVE",
"1010 1051 OFFCURVE",
"887 1101 OFFCURVE",
"813 1101 QCURVE",
"813 1101 LINE"
);
},
{
closed = 1;
nodes = (
"967 1376 LINE SMOOTH",
"899 1376 OFFCURVE",
"791 1416 OFFCURVE",
"696 1463 OFFCURVE",
"605 1502 OFFCURVE",
"553 1502 QCURVE SMOOTH",
"444 1502 OFFCURVE",
"321 1395 OFFCURVE",
"321 1285 QCURVE SMOOTH",
"321 1248 LINE",
"448 1248 LINE",
"449 1266 LINE SMOOTH",
"449 1321 OFFCURVE",
"507 1375 OFFCURVE",
"557 1375 QCURVE SMOOTH",
"596 1375 OFFCURVE",
"677 1336 OFFCURVE",
"774 1289 OFFCURVE",
"890 1249 OFFCURVE",
"964 1249 QCURVE SMOOTH",
"1007 1249 LINE",
"1007 1376 LINE",
"1007 1376 LINE"
);
},
{
closed = 1;
nodes = (
"598 951 LINE",
"623 964 OFFCURVE",
"670 1009 OFFCURVE",
"706 1062 OFFCURVE",
"728 1121 OFFCURVE",
"728 1150 QCURVE SMOOTH",
"728 1252 LINE",
"589 1252 LINE",
"589 1156 LINE SMOOTH",
"589 1118 OFFCURVE",
"555 1047 OFFCURVE",
"522 1007 QCURVE",
"522 1007 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 18 values pushed */
63 1 13 10 65 1 0 9 86 1 4 0 14 1 1 5 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
38 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 60 values pushed */
0 13 10 9 10 13 9 112 0 6 4 5 4 6 5 112 14 1 12 0 9 0 12 9 99 0 10 10 11 91 0 11 11 29 75 8 1 4 4 0 91 3 1 0 0 31 75 7 1 5 5 1 91 2 1 1 1 30 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 58 values pushed */
0 13 10 9 10 13 9 112 0 6 4 5 4 6 5 112 0 11 0 10 13 11 10 99 14 1 12 0 9 0 12 9 99 8 1 4 4 0 91 3 1 0 0 31 75 7 1 5 5 1 91 2 1 1 1 30 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 26 values pushed */
53 53 80 79 53 74 53 73 70 68 61 59 56 54 21 35 19 37 17 25 36 41 16 15 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni047D;
unicode = 047D;
},
{
glyphname = uni047E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"283 1688 LINE",
"551 1688 LINE",
"551 1563 LINE",
"719 1563 LINE",
"719 1688 LINE",
"1004 1688 LINE",
"1003 1796 LINE",
"283 1796 LINE",
"283 1796 LINE"
);
},
{
closed = 1;
nodes = (
"972 1456 LINE",
"971 318 LINE SMOOTH",
"971 230 OFFCURVE",
"913 130 OFFCURVE",
"861 130 QCURVE SMOOTH",
"800 130 OFFCURVE",
"731 230 OFFCURVE",
"731 318 QCURVE SMOOTH",
"731 1456 LINE",
"540 1456 LINE",
"539 318 LINE SMOOTH",
"539 230 OFFCURVE",
"470 130 OFFCURVE",
"410 130 QCURVE SMOOTH",
"358 130 OFFCURVE",
"299 230 OFFCURVE",
"299 318 QCURVE SMOOTH",
"298 1456 LINE",
"114 1456 LINE",
"113 318 LINE SMOOTH",
"113 236 OFFCURVE",
"156 110 OFFCURVE",
"234 24 OFFCURVE",
"343 -20 OFFCURVE",
"410 -20 QCURVE SMOOTH",
"487 -20 OFFCURVE",
"603 55 OFFCURVE",
"635 127 QCURVE",
"667 54 OFFCURVE",
"783 -20 OFFCURVE",
"861 -20 QCURVE SMOOTH",
"927 -20 OFFCURVE",
"1036 24 OFFCURVE",
"1114 110 OFFCURVE",
"1157 236 OFFCURVE",
"1157 318 QCURVE SMOOTH",
"1156 1456 LINE",
"1156 1456 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
17 1 4 7 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
0 2 1 6 1 2 104 0 0 3 1 1 2 0 1 97 11 10 8 3 6 6 22 75 9 1 7 7 4 91 5 1 4 4 30 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 2 1 6 1 2 6 112 0 0 3 1 1 2 0 1 97 11 10 8 3 6 6 22 75 9 1 7 7 4 91 5 1 4 4 30 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
8 8 8 44 8 44 41 39 19 35 21 36 38 17 17 17 16 12 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni047E;
unicode = 047E;
},
{
glyphname = uni047F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"260 1348 LINE",
"531 1348 LINE",
"531 1221 LINE",
"699 1221 LINE",
"699 1348 LINE",
"987 1348 LINE",
"986 1456 LINE",
"260 1456 LINE",
"260 1456 LINE"
);
},
{
closed = 1;
nodes = (
"961 1083 LINE",
"961 316 LINE SMOOTH",
"961 228 OFFCURVE",
"900 130 OFFCURVE",
"848 130 QCURVE SMOOTH",
"787 130 OFFCURVE",
"717 228 OFFCURVE",
"717 316 QCURVE SMOOTH",
"716 1083 LINE",
"525 1083 LINE",
"525 316 LINE SMOOTH",
"525 228 OFFCURVE",
"454 130 OFFCURVE",
"394 130 QCURVE SMOOTH",
"341 130 OFFCURVE",
"281 228 OFFCURVE",
"281 316 QCURVE SMOOTH",
"281 1083 LINE",
"96 1083 LINE",
"95 316 LINE SMOOTH",
"95 234 OFFCURVE",
"139 108 OFFCURVE",
"217 23 OFFCURVE",
"327 -21 OFFCURVE",
"394 -21 QCURVE SMOOTH",
"472 -21 OFFCURVE",
"588 54 OFFCURVE",
"620 126 QCURVE",
"653 53 OFFCURVE",
"770 -21 OFFCURVE",
"848 -21 QCURVE SMOOTH",
"914 -21 OFFCURVE",
"1024 23 OFFCURVE",
"1103 108 OFFCURVE",
"1146 234 OFFCURVE",
"1146 316 QCURVE SMOOTH",
"1146 1083 LINE",
"1146 1083 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
17 1 4 7 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 39 values pushed */
0 2 1 6 1 2 104 3 1 1 1 0 89 0 0 0 22 75 11 10 8 3 6 6 24 75 9 1 7 7 4 91 5 1 4 4 30 4 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 2 1 6 1 2 6 112 3 1 1 1 0 89 0 0 0 22 75 11 10 8 3 6 6 24 75 9 1 7 7 4 91 5 1 4 4 30 4 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 20 values pushed */
8 8 8 44 8 44 41 39 19 35 21 36 38 17 17 17 16 12 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni047F;
unicode = 047F;
},
{
glyphname = uni0480;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"810 130 LINE",
"701 130 LINE SMOOTH",
"613 130 OFFCURVE",
"477 207 OFFCURVE",
"384 338 OFFCURVE",
"336 510 OFFCURVE",
"336 605 QCURVE SMOOTH",
"336 854 LINE SMOOTH",
"336 948 OFFCURVE",
"377 1119 OFFCURVE",
"457 1248 OFFCURVE",
"574 1325 OFFCURVE",
"649 1325 QCURVE SMOOTH",
"720 1325 OFFCURVE",
"828 1277 OFFCURVE",
"901 1190 OFFCURVE",
"939 1066 OFFCURVE",
"940 991 QCURVE",
"1125 991 LINE",
"1125 1101 OFFCURVE",
"1058 1280 OFFCURVE",
"935 1408 OFFCURVE",
"759 1477 OFFCURVE",
"649 1477 QCURVE SMOOTH",
"535 1477 OFFCURVE",
"351 1380 OFFCURVE",
"221 1211 OFFCURVE",
"151 983 OFFCURVE",
"151 852 QCURVE SMOOTH",
"151 605 LINE SMOOTH",
"151 484 OFFCURVE",
"217 271 OFFCURVE",
"340 106 OFFCURVE",
"515 -1 OFFCURVE",
"625 -15 QCURVE",
"625 -382 LINE",
"810 -382 LINE",
"810 -382 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
2 1 0 4 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 2 3 4 3 2 4 112 0 3 3 1 91 0 1 1 29 75 0 4 4 0 89 0 0 0 26 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 2 3 4 3 2 4 112 0 4 0 0 4 0 93 0 3 3 1 91 0 1 1 29 3 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
41 36 20 43 16 5 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0480;
unicode = 0480;
},
{
glyphname = uni0481;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"765 130 LINE",
"663 130 LINE SMOOTH",
"586 130 OFFCURVE",
"478 199 OFFCURVE",
"408 310 OFFCURVE",
"376 449 OFFCURVE",
"376 520 QCURVE SMOOTH",
"376 562 LINE SMOOTH",
"376 631 OFFCURVE",
"409 770 OFFCURVE",
"479 881 OFFCURVE",
"587 950 OFFCURVE",
"663 950 QCURVE SMOOTH",
"715 950 OFFCURVE",
"805 912 OFFCURVE",
"870 846 OFFCURVE",
"908 758 OFFCURVE",
"908 709 QCURVE",
"1083 709 LINE",
"1083 792 OFFCURVE",
"1020 935 OFFCURVE",
"908 1041 OFFCURVE",
"754 1102 OFFCURVE",
"663 1102 QCURVE SMOOTH",
"549 1102 OFFCURVE",
"373 1014 OFFCURVE",
"253 865 OFFCURVE",
"191 669 OFFCURVE",
"191 562 QCURVE SMOOTH",
"191 520 LINE SMOOTH",
"191 422 OFFCURVE",
"242 243 OFFCURVE",
"340 99 OFFCURVE",
"485 2 OFFCURVE",
"580 -14 QCURVE",
"580 -382 LINE",
"765 -382 LINE",
"765 -382 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
2 1 0 4 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
29 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 29 values pushed */
0 2 3 4 3 2 4 112 0 3 3 1 91 0 1 1 31 75 0 4 4 0 89 0 0 0 26 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 26 values pushed */
0 2 3 4 3 2 4 112 0 4 0 0 4 0 93 0 3 3 1 91 0 1 1 31 3 76 
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 8 values pushed */
41 36 20 43 16 5 6 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0481;
unicode = 0481;
},
{
glyphname = uni0482;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"810 811 LINE",
"1098 641 LINE",
"1170 763 LINE",
"877 934 LINE",
"1108 1342 LINE",
"943 1342 LINE",
"755 1011 LINE",
"464 1182 LINE",
"394 1057 LINE",
"684 886 LINE",
"479 521 LINE",
"186 692 LINE",
"118 569 LINE",
"407 398 LINE",
"182 0 LINE",
"350 0 LINE",
"532 321 LINE",
"823 151 LINE",
"891 274 LINE",
"602 446 LINE",
"602 446 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
19 18 17 16 13 12 11 10 9 8 7 6 3 2 1 15 0 1 1 74 0 1 0 1 114 0 0 0 23 0 76 25 20 2 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0482;
unicode = 0482;
},
{
glyphname = uni0483;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"913 1315 LINE",
"913 1531 LINE",
"748 1532 LINE",
"749 1424 LINE",
"210 1424 LINE",
"209 1191 LINE",
"375 1190 LINE",
"375 1315 LINE",
"375 1315 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
20 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 24 values pushed */
0 2 1 1 2 102 0 0 3 3 0 103 4 1 3 3 1 89 0 1 1 22 3 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
0 2 1 1 2 102 0 0 3 0 115 4 1 3 3 1 89 0 1 1 22 3 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 22 values pushed */
0 2 1 2 114 0 0 3 0 115 4 1 3 3 1 89 0 1 1 22 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
0 2 1 2 114 0 0 3 0 115 0 1 3 3 1 85 0 1 1 3 90 4 1 3 1 3 78 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
0 0 0 7 0 7 17 17 17 5 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni0483;
unicode = 0483;
},
{
glyphname = uni0484;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"252 1430 LINE",
"252 1304 LINE",
"296 1304 LINE SMOOTH",
"381 1304 OFFCURVE",
"516 1343 OFFCURVE",
"627 1390 OFFCURVE",
"721 1429 OFFCURVE",
"766 1429 QCURVE SMOOTH",
"817 1429 OFFCURVE",
"880 1377 OFFCURVE",
"880 1321 QCURVE SMOOTH",
"880 1303 LINE",
"1008 1303 LINE",
"1008 1339 LINE SMOOTH",
"1008 1449 OFFCURVE",
"880 1557 OFFCURVE",
"770 1557 QCURVE SMOOTH",
"730 1557 OFFCURVE",
"658 1538 OFFCURVE",
"587 1510 OFFCURVE",
"515 1477 OFFCURVE",
"436 1449 OFFCURVE",
"346 1430 OFFCURVE",
"294 1430 QCURVE",
"294 1430 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
38 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 1 0 3 2 1 3 99 4 1 2 2 0 91 5 1 0 0 22 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
5 1 0 3 2 0 87 0 1 0 3 2 1 3 99 5 1 0 0 2 91 4 1 2 0 2 79 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 17 values pushed */
1 0 22 20 17 15 12 11 8 6 0 23 1 23 6 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni0484;
unicode = 0484;
},
{
glyphname = uni0485;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"612 1302 LINE",
"690 1367 LINE",
"630 1483 LINE",
"631 1623 LINE",
"451 1623 LINE",
"451 1500 LINE",
"451 1500 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
5 4 3 0 4 0 71 0 0 0 105 17 1 6 21 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni0485;
unicode = 0485;
},
{
glyphname = uni0486;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"810 1500 LINE",
"810 1623 LINE",
"630 1623 LINE",
"630 1483 LINE",
"572 1367 LINE",
"648 1302 LINE",
"648 1302 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 14 values pushed */
5 2 1 3 0 71 0 0 0 105 19 1 6 21 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni0486;
unicode = 0486;
},
{
glyphname = uni0488;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"581 1267 LINE",
"581 1287 OFFCURVE",
"591 1323 OFFCURVE",
"614 1351 OFFCURVE",
"651 1368 OFFCURVE",
"678 1368 QCURVE SMOOTH",
"705 1368 OFFCURVE",
"742 1351 OFFCURVE",
"766 1323 OFFCURVE",
"777 1287 OFFCURVE",
"777 1267 QCURVE",
"889 1267 LINE",
"889 1308 OFFCURVE",
"859 1377 OFFCURVE",
"804 1427 OFFCURVE",
"726 1455 OFFCURVE",
"678 1455 QCURVE SMOOTH",
"630 1455 OFFCURVE",
"552 1427 OFFCURVE",
"497 1377 OFFCURVE",
"468 1308 OFFCURVE",
"468 1267 QCURVE",
"468 1267 LINE"
);
},
{
closed = 1;
nodes = (
"1173 990 LINE",
"1173 1010 OFFCURVE",
"1183 1046 OFFCURVE",
"1206 1074 OFFCURVE",
"1243 1091 OFFCURVE",
"1269 1091 QCURVE SMOOTH",
"1296 1091 OFFCURVE",
"1333 1074 OFFCURVE",
"1357 1046 OFFCURVE",
"1368 1010 OFFCURVE",
"1368 990 QCURVE",
"1481 990 LINE",
"1481 1031 OFFCURVE",
"1451 1100 OFFCURVE",
"1395 1150 OFFCURVE",
"1317 1178 OFFCURVE",
"1269 1178 QCURVE SMOOTH",
"1221 1178 OFFCURVE",
"1143 1150 OFFCURVE",
"1089 1100 OFFCURVE",
"1059 1031 OFFCURVE",
"1059 990 QCURVE",
"1059 990 LINE"
);
},
{
closed = 1;
nodes = (
"1359 487 LINE",
"1359 507 OFFCURVE",
"1370 543 OFFCURVE",
"1393 571 OFFCURVE",
"1430 588 OFFCURVE",
"1456 588 QCURVE SMOOTH",
"1483 588 OFFCURVE",
"1520 571 OFFCURVE",
"1544 543 OFFCURVE",
"1555 507 OFFCURVE",
"1555 487 QCURVE",
"1667 487 LINE",
"1667 528 OFFCURVE",
"1637 597 OFFCURVE",
"1582 647 OFFCURVE",
"1504 675 OFFCURVE",
"1456 675 QCURVE SMOOTH",
"1408 675 OFFCURVE",
"1330 647 OFFCURVE",
"1276 597 OFFCURVE",
"1246 528 OFFCURVE",
"1246 487 QCURVE",
"1246 487 LINE"
);
},
{
closed = 1;
nodes = (
"1162 -32 LINE",
"1162 -12 OFFCURVE",
"1173 24 OFFCURVE",
"1196 52 OFFCURVE",
"1233 69 OFFCURVE",
"1259 69 QCURVE SMOOTH",
"1286 69 OFFCURVE",
"1323 52 OFFCURVE",
"1347 24 OFFCURVE",
"1358 -12 OFFCURVE",
"1358 -32 QCURVE",
"1470 -32 LINE",
"1470 9 OFFCURVE",
"1440 78 OFFCURVE",
"1385 128 OFFCURVE",
"1307 156 OFFCURVE",
"1259 156 QCURVE SMOOTH",
"1211 156 OFFCURVE",
"1133 128 OFFCURVE",
"1079 78 OFFCURVE",
"1049 9 OFFCURVE",
"1049 -32 QCURVE",
"1049 -32 LINE"
);
},
{
closed = 1;
nodes = (
"586 -316 LINE",
"586 -296 OFFCURVE",
"597 -259 OFFCURVE",
"620 -231 OFFCURVE",
"657 -215 OFFCURVE",
"683 -215 QCURVE SMOOTH",
"710 -215 OFFCURVE",
"747 -231 OFFCURVE",
"771 -259 OFFCURVE",
"782 -296 OFFCURVE",
"782 -316 QCURVE",
"894 -316 LINE",
"894 -274 OFFCURVE",
"864 -205 OFFCURVE",
"809 -156 OFFCURVE",
"731 -128 OFFCURVE",
"683 -128 QCURVE SMOOTH",
"635 -128 OFFCURVE",
"557 -156 OFFCURVE",
"502 -205 OFFCURVE",
"473 -274 OFFCURVE",
"473 -316 QCURVE",
"473 -316 LINE"
);
},
{
closed = 1;
nodes = (
"9 990 LINE",
"9 1010 OFFCURVE",
"19 1046 OFFCURVE",
"42 1074 OFFCURVE",
"79 1091 OFFCURVE",
"106 1091 QCURVE SMOOTH",
"133 1091 OFFCURVE",
"170 1074 OFFCURVE",
"194 1046 OFFCURVE",
"205 1010 OFFCURVE",
"205 990 QCURVE",
"317 990 LINE",
"317 1031 OFFCURVE",
"287 1100 OFFCURVE",
"232 1150 OFFCURVE",
"154 1178 OFFCURVE",
"106 1178 QCURVE SMOOTH",
"58 1178 OFFCURVE",
"-20 1150 OFFCURVE",
"-75 1100 OFFCURVE",
"-105 1031 OFFCURVE",
"-105 990 QCURVE",
"-105 990 LINE"
);
},
{
closed = 1;
nodes = (
"-168 487 LINE",
"-168 507 OFFCURVE",
"-157 543 OFFCURVE",
"-133 571 OFFCURVE",
"-97 588 OFFCURVE",
"-71 588 QCURVE SMOOTH",
"-44 588 OFFCURVE",
"-7 571 OFFCURVE",
"17 543 OFFCURVE",
"28 507 OFFCURVE",
"28 487 QCURVE",
"140 487 LINE",
"140 528 OFFCURVE",
"110 597 OFFCURVE",
"55 647 OFFCURVE",
"-23 675 OFFCURVE",
"-71 675 QCURVE SMOOTH",
"-119 675 OFFCURVE",
"-196 647 OFFCURVE",
"-251 597 OFFCURVE",
"-281 528 OFFCURVE",
"-281 487 QCURVE",
"-281 487 LINE"
);
},
{
closed = 1;
nodes = (
"-1 -32 LINE",
"-1 -12 OFFCURVE",
"10 24 OFFCURVE",
"32 52 OFFCURVE",
"69 69 OFFCURVE",
"95 69 QCURVE SMOOTH",
"122 69 OFFCURVE",
"159 52 OFFCURVE",
"183 24 OFFCURVE",
"194 -12 OFFCURVE",
"194 -32 QCURVE",
"307 -32 LINE",
"307 9 OFFCURVE",
"277 78 OFFCURVE",
"221 128 OFFCURVE",
"143 156 OFFCURVE",
"95 156 QCURVE SMOOTH",
"47 156 OFFCURVE",
"-30 128 OFFCURVE",
"-85 78 OFFCURVE",
"-115 9 OFFCURVE",
"-115 -32 QCURVE",
"-115 -32 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
31 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 102 values pushed */
32 3 2 1 2 4 2 1 4 112 37 23 21 33 7 5 5 6 8 6 5 8 112 38 27 25 34 11 5 9 10 12 10 9 12 112 36 19 2 17 18 17 115 20 1 4 22 1 6 5 4 6 99 24 1 8 26 1 10 9 8 10 99 28 1 12 30 1 14 13 12 14 99 0 16 0 18 17 16 18 99 0 2 2 0 91 0 0 0 22 75 39 31 29 35 15 5 13 13 23 13 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 105 values pushed */
32 3 2 1 2 4 2 1 4 112 37 23 21 33 7 5 5 6 8 6 5 8 112 38 27 25 34 11 5 9 10 12 10 9 12 112 39 31 29 35 15 5 13 14 16 14 13 16 112 36 19 2 17 18 17 115 20 1 4 22 1 6 5 4 6 99 24 1 8 26 1 10 9 8 10 99 28 1 12 30 1 14 13 12 14 99 0 16 0 18 17 16 18 99 0 2 2 0 91 0 0 0 22 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 96 values pushed */
154 154 132 132 110 110 88 88 66 66 44 44 22 22 0 0 154 175 154 175 171 169 165 164 160 158 132 153 132 153 149 147 143 142 138 136 110 131 110 131 127 125 121 120 116 114 88 109 88 109 105 103 99 98 94 92 66 87 66 87 83 81 77 76 72 70 44 65 44 65 61 59 55 54 50 48 22 43 22 43 39 37 33 32 28 26 0 21 0 21 36 20 36 40 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni0488;
unicode = 0488;
},
{
glyphname = uni0489;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"968 -60 LINE",
"898 -413 LINE",
"994 -413 LINE",
"1116 -74 LINE",
"1105 -60 LINE",
"1105 -60 LINE"
);
},
{
closed = 1;
nodes = (
"1046 1126 LINE",
"1116 1478 LINE",
"1020 1478 LINE",
"898 1140 LINE",
"910 1126 LINE",
"910 1126 LINE"
);
},
{
closed = 1;
nodes = (
"1588 492 LINE",
"1934 421 LINE",
"1934 519 LINE",
"1601 643 LINE",
"1588 631 LINE",
"1588 631 LINE"
);
},
{
closed = 1;
nodes = (
"424 572 LINE",
"78 643 LINE",
"78 545 LINE",
"411 421 LINE",
"424 433 LINE",
"424 433 LINE"
);
},
{
closed = 1;
nodes = (
"1445 903 LINE",
"1739 1103 LINE",
"1671 1171 LINE",
"1350 1018 LINE",
"1348 1002 LINE",
"1348 1002 LINE"
);
},
{
closed = 1;
nodes = (
"567 120 LINE",
"273 -80 LINE",
"342 -149 LINE",
"662 4 LINE",
"664 21 LINE",
"664 21 LINE"
);
},
{
closed = 1;
nodes = (
"622 958 LINE",
"424 1257 LINE",
"359 1188 LINE",
"507 862 LINE",
"524 860 LINE",
"524 860 LINE"
);
},
{
closed = 1;
nodes = (
"1389 62 LINE",
"1586 -237 LINE",
"1652 -166 LINE",
"1503 159 LINE",
"1486 161 LINE",
"1486 161 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 31 values pushed */
33 32 22 3 3 2 39 34 29 24 23 19 18 17 15 14 13 12 10 13 1 3 38 37 28 27 4 0 1 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
46 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 23 values pushed */
5 1 3 3 2 89 0 2 2 22 75 4 1 1 1 0 89 0 0 0 26 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 2 5 1 3 1 2 3 97 4 1 1 1 0 89 0 0 0 26 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
5 5 0 0 5 9 5 9 8 7 0 4 0 4 18 6 6 21 
CALL[ ]\011/* CallFunction */";
};
width = 0;
}
);
note = uni0489;
unicode = 0489;
},
{
glyphname = uni048E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"709 959 LINE",
"578 889 LINE",
"941 397 LINE",
"1073 467 LINE",
"1073 467 LINE"
);
},
{
closed = 1;
nodes = (
"663 584 LINE SMOOTH",
"761 585 OFFCURVE",
"936 643 OFFCURVE",
"1068 753 OFFCURVE",
"1145 914 OFFCURVE",
"1145 1019 QCURVE SMOOTH",
"1145 1124 OFFCURVE",
"1068 1286 OFFCURVE",
"936 1396 OFFCURVE",
"761 1454 OFFCURVE",
"663 1456 QCURVE SMOOTH",
"191 1456 LINE",
"191 0 LINE",
"376 0 LINE",
"376 584 LINE",
"376 584 LINE"
);
},
{
closed = 1;
nodes = (
"376 1304 LINE",
"663 1304 LINE SMOOTH",
"727 1303 OFFCURVE",
"836 1263 OFFCURVE",
"915 1189 OFFCURVE",
"960 1083 OFFCURVE",
"960 1017 QCURVE SMOOTH",
"960 951 OFFCURVE",
"915 848 OFFCURVE",
"835 776 OFFCURVE",
"727 737 OFFCURVE",
"663 736 QCURVE SMOOTH",
"376 736 LINE",
"376 736 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
3 2 2 3 4 1 1 0 2 2 74 0 3 5 1 2 0 3 2 99 0 4 4 1 91 0 1 1 22 75 0 0 0 23 0 76 4 4 31 29 21 19 4 18 4 17 33 21 6 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni048E;
unicode = 048E;
},
{
glyphname = uni048F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"716 376 LINE",
"603 282 LINE",
"966 -91 LINE",
"1078 2 LINE",
"1078 2 LINE"
);
},
{
closed = 1;
nodes = (
"1087 550 LINE SMOOTH",
"1087 671 OFFCURVE",
"1031 874 OFFCURVE",
"923 1020 OFFCURVE",
"763 1102 OFFCURVE",
"659 1102 QCURVE SMOOTH",
"558 1102 OFFCURVE",
"405 1031 OFFCURVE",
"351 964 QCURVE",
"342 1082 LINE",
"173 1082 LINE",
"173 -416 LINE",
"358 -416 LINE",
"358 104 LINE",
"412 44 OFFCURVE",
"563 -20 OFFCURVE",
"662 -20 QCURVE SMOOTH",
"764 -20 OFFCURVE",
"923 64 OFFCURVE",
"1031 212 OFFCURVE",
"1087 413 OFFCURVE",
"1087 529 QCURVE",
"1087 529 LINE"
);
},
{
closed = 1;
nodes = (
"902 529 LINE SMOOTH",
"902 450 OFFCURVE",
"867 306 OFFCURVE",
"795 196 OFFCURVE",
"683 131 OFFCURVE",
"606 131 QCURVE SMOOTH",
"514 131 OFFCURVE",
"394 212 OFFCURVE",
"358 276 QCURVE",
"358 797 LINE",
"394 862 OFFCURVE",
"515 945 OFFCURVE",
"604 945 QCURVE SMOOTH",
"682 945 OFFCURVE",
"794 881 OFFCURVE",
"867 772 OFFCURVE",
"902 629 OFFCURVE",
"902 550 QCURVE",
"902 550 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
17 1 4 2 35 34 3 2 4 5 4 12 1 0 5 1 1 1 0 4 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 4 4 2 91 3 1 2 2 24 75 0 5 5 0 91 0 0 0 30 75 0 1 1 26 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 31 values pushed */
0 2 2 24 75 0 4 4 3 91 0 3 3 31 75 0 5 5 0 91 0 0 0 30 75 0 1 1 26 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
37 41 35 17 19 40 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni048F;
unicode = 048F;
},
{
glyphname = uni0490;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1095 1791 LINE",
"910 1791 LINE",
"910 1456 LINE",
"182 1456 LINE",
"182 0 LINE",
"368 0 LINE",
"368 1304 LINE",
"1095 1304 LINE",
"1095 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 2 3 114 0 0 0 2 89 0 2 2 22 75 0 1 1 23 1 76 17 17 17 16 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0490;
unicode = 0490;
},
{
glyphname = uni0491;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1073 1399 LINE",
"887 1399 LINE",
"887 1082 LINE",
"182 1082 LINE",
"182 0 LINE",
"368 0 LINE",
"368 929 LINE",
"1073 929 LINE",
"1073 929 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 3 2 3 114 0 0 0 2 89 0 2 2 24 75 0 1 1 23 1 76 17 17 17 16 4 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0491;
unicode = 0491;
},
{
glyphname = uni0494;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1076 1456 LINE",
"185 1456 LINE",
"185 0 LINE",
"371 0 LINE",
"371 672 LINE",
"555 672 LINE SMOOTH",
"761 672 OFFCURVE",
"964 456 OFFCURVE",
"966 257 QCURVE SMOOTH",
"966 167 OFFCURVE",
"936 20 OFFCURVE",
"868 -84 OFFCURVE",
"757 -141 OFFCURVE",
"676 -141 QCURVE",
"678 -288 LINE",
"793 -288 OFFCURVE",
"970 -215 OFFCURVE",
"1090 -77 OFFCURVE",
"1151 126 OFFCURVE",
"1151 257 QCURVE SMOOTH",
"1151 391 OFFCURVE",
"1071 605 OFFCURVE",
"918 754 OFFCURVE",
"697 834 OFFCURVE",
"555 834 QCURVE SMOOTH",
"371 834 LINE",
"371 1304 LINE",
"1076 1304 LINE",
"1076 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
0 1 0 4 5 1 4 99 0 3 0 2 3 2 95 0 0 0 6 89 0 6 6 22 75 0 5 5 23 5 76 17 17 38 17 24 33 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0494;
unicode = 0494;
},
{
glyphname = uni0495;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1067 1082 LINE",
"184 1082 LINE",
"184 0 LINE",
"370 0 LINE",
"370 484 LINE",
"588 484 LINE SMOOTH",
"659 484 OFFCURVE",
"780 443 OFFCURVE",
"870 364 OFFCURVE",
"921 246 OFFCURVE",
"921 170 QCURVE SMOOTH",
"921 114 OFFCURVE",
"893 18 OFFCURVE",
"833 -61 OFFCURVE",
"737 -120 OFFCURVE",
"669 -138 QCURVE",
"717 -284 LINE",
"820 -265 OFFCURVE",
"968 -162 OFFCURVE",
"1062 -30 OFFCURVE",
"1106 112 OFFCURVE",
"1106 170 QCURVE SMOOTH",
"1106 283 OFFCURVE",
"1027 460 OFFCURVE",
"888 581 OFFCURVE",
"699 646 OFFCURVE",
"588 646 QCURVE SMOOTH",
"370 646 LINE",
"370 929 LINE",
"1067 929 LINE",
"1067 929 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
14 13 2 3 71 0 1 0 2 3 1 2 99 0 0 0 4 89 0 4 4 24 75 0 3 3 23 3 76 29 28 27 26 25 23 33 16 5 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0495;
unicode = 0495;
},
{
glyphname = uni049C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"960 1456 LINE",
"663 811 LINE",
"609 811 LINE",
"609 1068 LINE",
"460 1068 LINE",
"460 811 LINE",
"359 811 LINE",
"359 1456 LINE",
"174 1456 LINE",
"174 0 LINE",
"359 0 LINE",
"359 660 LINE",
"460 660 LINE",
"460 415 LINE",
"609 415 LINE",
"609 660 LINE",
"663 660 LINE",
"989 0 LINE",
"1220 0 LINE",
"841 769 LINE",
"1176 1456 LINE",
"1176 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
1 1 1 6 1 74 8 1 6 3 1 1 2 6 1 97 10 9 2 5 5 22 75 0 2 2 7 89 0 7 7 24 75 4 1 0 0 23 0 76 0 0 0 20 0 20 17 17 17 17 17 17 17 17 18 11 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni049C;
unicode = 049C;
},
{
glyphname = uni049D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"890 1082 LINE",
"631 624 LINE",
"587 624 LINE",
"587 837 LINE",
"439 837 LINE",
"439 624 LINE",
"349 624 LINE",
"349 1082 LINE",
"163 1082 LINE",
"163 0 LINE",
"349 0 LINE",
"349 461 LINE",
"439 461 LINE",
"439 267 LINE",
"587 267 LINE",
"587 461 LINE",
"638 461 LINE",
"916 0 LINE",
"1150 0 LINE",
"775 568 LINE",
"1113 1082 LINE",
"1113 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
1 1 1 6 1 74 8 1 6 3 1 1 2 6 1 97 0 7 0 2 0 7 2 97 10 9 2 5 5 24 75 4 1 0 0 23 0 76 0 0 0 20 0 20 17 17 17 17 17 17 17 17 18 11 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni049D;
unicode = 049D;
},
{
glyphname = uni04A0;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"964 0 LINE",
"1190 0 LINE",
"825 751 LINE",
"1150 1456 LINE",
"939 1456 LINE",
"653 810 LINE",
"555 810 LINE",
"555 1456 LINE",
"45 1456 LINE",
"45 1304 LINE",
"371 1304 LINE",
"371 0 LINE",
"555 0 LINE",
"555 659 LINE",
"661 659 LINE",
"661 659 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
12 1 0 4 1 74 0 4 0 0 1 4 0 97 0 2 2 3 89 5 1 3 3 22 75 6 1 1 1 23 1 76 18 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A0;
unicode = 04A0;
},
{
glyphname = uni04A1;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"967 0 LINE",
"1201 0 LINE",
"837 568 LINE",
"1166 1082 LINE",
"942 1082 LINE",
"693 624 LINE",
"566 624 LINE",
"566 1082 LINE",
"56 1082 LINE",
"56 929 LINE",
"381 929 LINE",
"381 0 LINE",
"566 0 LINE",
"566 461 LINE",
"700 461 LINE",
"700 461 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 42 values pushed */
12 1 0 4 1 74 0 4 0 0 1 4 0 97 0 2 2 3 89 5 1 3 3 24 75 6 1 1 1 23 1 76 18 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A1;
unicode = 04A1;
},
{
glyphname = uni04A4;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"299 1456 LINE",
"114 1456 LINE",
"114 0 LINE",
"299 0 LINE",
"299 647 LINE",
"670 647 LINE",
"670 0 LINE",
"854 0 LINE",
"854 1304 LINE",
"1178 1304 LINE",
"1178 1456 LINE",
"670 1456 LINE",
"670 799 LINE",
"299 799 LINE",
"299 799 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
0 0 0 4 3 0 4 97 0 2 2 1 89 6 1 1 1 22 75 5 1 3 3 23 3 76 17 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A4;
unicode = 04A4;
},
{
glyphname = uni04A5;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"295 1082 LINE",
"110 1082 LINE",
"110 0 LINE",
"295 0 LINE",
"295 462 LINE",
"675 462 LINE",
"675 0 LINE",
"860 0 LINE",
"860 929 LINE",
"1180 929 LINE",
"1180 1082 LINE",
"675 1082 LINE",
"675 613 LINE",
"295 613 LINE",
"295 613 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
0 0 0 4 3 0 4 97 0 2 2 1 89 6 1 1 1 24 75 5 1 3 3 23 3 76 17 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A5;
unicode = 04A5;
},
{
glyphname = uni04A6;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"737 1456 LINE",
"109 1456 LINE",
"109 0 LINE",
"293 0 LINE",
"293 1304 LINE",
"552 1304 LINE",
"552 0 LINE",
"737 0 LINE",
"737 670 LINE",
"804 668 OFFCURVE",
"900 609 OFFCURVE",
"962 502 OFFCURVE",
"992 350 OFFCURVE",
"993 256 QCURVE SMOOTH",
"993 169 OFFCURVE",
"974 22 OFFCURVE",
"927 -83 OFFCURVE",
"849 -142 OFFCURVE",
"791 -142 QCURVE",
"793 -289 LINE",
"889 -289 OFFCURVE",
"1033 -215 OFFCURVE",
"1130 -75 OFFCURVE",
"1178 127 OFFCURVE",
"1178 256 QCURVE SMOOTH",
"1178 385 OFFCURVE",
"1121 596 OFFCURVE",
"1009 748 OFFCURVE",
"844 831 OFFCURVE",
"737 833 QCURVE",
"737 833 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 43 values pushed */
0 0 0 3 4 0 3 99 0 2 0 1 2 1 95 0 5 5 7 89 0 7 7 22 75 6 1 4 4 23 4 76 17 17 17 17 24 17 24 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A6;
unicode = 04A6;
},
{
glyphname = uni04A7;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"717 1082 LINE",
"116 1082 LINE",
"116 0 LINE",
"301 0 LINE",
"301 929 LINE",
"532 929 LINE",
"532 0 LINE",
"717 0 LINE",
"717 483 LINE",
"725 483 LINE SMOOTH",
"779 483 OFFCURVE",
"866 440 OFFCURVE",
"928 360 OFFCURVE",
"962 243 OFFCURVE",
"963 170 QCURVE SMOOTH",
"963 116 OFFCURVE",
"943 20 OFFCURVE",
"896 -59 OFFCURVE",
"819 -119 OFFCURVE",
"762 -137 QCURVE",
"810 -283 LINE",
"871 -270 OFFCURVE",
"969 -214 OFFCURVE",
"1044 -138 OFFCURVE",
"1097 -49 OFFCURVE",
"1131 43 OFFCURVE",
"1147 132 OFFCURVE",
"1148 170 QCURVE SMOOTH",
"1148 279 OFFCURVE",
"1086 455 OFFCURVE",
"974 579 OFFCURVE",
"818 645 OFFCURVE",
"725 645 QCURVE SMOOTH",
"717 645 LINE",
"717 645 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
14 13 2 2 71 0 0 0 1 2 0 1 99 0 3 3 5 89 0 5 5 24 75 4 1 2 2 23 2 76 33 32 31 30 29 28 27 26 24 23 32 6 6 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A7;
unicode = 04A7;
},
{
glyphname = uni04A8;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1104 127 LINE",
"1060 127 OFFCURVE",
"982 140 OFFCURVE",
"947 152 QCURVE",
"1017 240 OFFCURVE",
"1092 481 OFFCURVE",
"1093 621 QCURVE SMOOTH",
"1093 981 LINE SMOOTH",
"1093 1085 OFFCURVE",
"1050 1265 OFFCURVE",
"970 1398 OFFCURVE",
"855 1474 OFFCURVE",
"783 1474 QCURVE SMOOTH",
"711 1474 OFFCURVE",
"596 1396 OFFCURVE",
"516 1262 OFFCURVE",
"473 1082 OFFCURVE",
"473 981 QCURVE SMOOTH",
"473 642 LINE SMOOTH",
"473 487 OFFCURVE",
"570 235 OFFCURVE",
"661 144 QCURVE",
"645 140 OFFCURVE",
"613 136 OFFCURVE",
"596 136 QCURVE SMOOTH",
"522 136 OFFCURVE",
"407 213 OFFCURVE",
"329 344 OFFCURVE",
"289 520 OFFCURVE",
"289 621 QCURVE SMOOTH",
"289 902 LINE SMOOTH",
"289 989 OFFCURVE",
"308 1140 OFFCURVE",
"347 1253 OFFCURVE",
"403 1319 OFFCURVE",
"441 1319 QCURVE",
"440 1477 LINE",
"362 1477 OFFCURVE",
"238 1386 OFFCURVE",
"151 1230 OFFCURVE",
"104 1020 OFFCURVE",
"104 900 QCURVE SMOOTH",
"104 621 LINE SMOOTH",
"104 488 OFFCURVE",
"173 255 OFFCURVE",
"301 81 OFFCURVE",
"483 -21 OFFCURVE",
"596 -21 QCURVE SMOOTH",
"656 -21 OFFCURVE",
"765 8 OFFCURVE",
"813 35 QCURVE",
"876 4 OFFCURVE",
"1022 -29 OFFCURVE",
"1104 -30 QCURVE",
"1104 -30 LINE"
);
},
{
closed = 1;
nodes = (
"658 984 LINE SMOOTH",
"658 1051 OFFCURVE",
"673 1171 OFFCURVE",
"705 1262 OFFCURVE",
"751 1316 OFFCURVE",
"783 1316 QCURVE SMOOTH",
"814 1316 OFFCURVE",
"861 1265 OFFCURVE",
"892 1175 OFFCURVE",
"907 1053 OFFCURVE",
"907 984 QCURVE SMOOTH",
"907 621 LINE SMOOTH",
"907 505 OFFCURVE",
"853 308 OFFCURVE",
"800 241 QCURVE",
"731 309 OFFCURVE",
"658 512 OFFCURVE",
"658 640 QCURVE",
"658 640 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
57 50 32 3 4 3 3 1 0 4 2 74 7 1 3 3 2 91 5 1 2 2 29 75 6 1 4 4 0 91 1 1 0 0 30 0 76 44 26 43 25 17 25 36 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A8;
unicode = 04A8;
},
{
glyphname = uni04A9;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1163 145 LINE",
"1066 145 OFFCURVE",
"987 166 QCURVE",
"1049 241 OFFCURVE",
"1115 437 OFFCURVE",
"1115 550 QCURVE SMOOTH",
"1115 655 LINE SMOOTH",
"1115 747 OFFCURVE",
"1072 910 OFFCURVE",
"991 1032 OFFCURVE",
"872 1103 OFFCURVE",
"797 1103 QCURVE SMOOTH",
"722 1103 OFFCURVE",
"604 1038 OFFCURVE",
"523 923 OFFCURVE",
"480 767 OFFCURVE",
"480 676 QCURVE SMOOTH",
"480 572 LINE SMOOTH",
"480 444 OFFCURVE",
"581 227 OFFCURVE",
"675 148 QCURVE",
"631 136 OFFCURVE",
"584 136 QCURVE SMOOTH",
"512 136 OFFCURVE",
"398 203 OFFCURVE",
"320 320 OFFCURVE",
"278 478 OFFCURVE",
"278 569 QCURVE SMOOTH",
"278 629 LINE SMOOTH",
"278 695 OFFCURVE",
"300 810 OFFCURVE",
"342 895 OFFCURVE",
"404 944 OFFCURVE",
"444 944 QCURVE",
"444 1102 LINE",
"364 1102 OFFCURVE",
"234 1028 OFFCURVE",
"142 899 OFFCURVE",
"92 726 OFFCURVE",
"92 627 QCURVE SMOOTH",
"92 569 LINE SMOOTH",
"92 445 OFFCURVE",
"163 229 OFFCURVE",
"292 70 OFFCURVE",
"473 -21 OFFCURVE",
"584 -21 QCURVE SMOOTH",
"658 -21 OFFCURVE",
"789 14 OFFCURVE",
"846 46 QCURVE",
"915 18 OFFCURVE",
"1073 -11 OFFCURVE",
"1163 -12 QCURVE",
"1163 -12 LINE"
);
},
{
closed = 1;
nodes = (
"666 678 LINE SMOOTH",
"666 735 OFFCURVE",
"682 833 OFFCURVE",
"714 905 OFFCURVE",
"763 946 OFFCURVE",
"797 946 QCURVE SMOOTH",
"831 946 OFFCURVE",
"881 899 OFFCURVE",
"914 820 OFFCURVE",
"930 716 OFFCURVE",
"930 658 QCURVE SMOOTH",
"930 550 LINE SMOOTH",
"929 456 OFFCURVE",
"875 298 OFFCURVE",
"824 241 QCURVE",
"747 298 OFFCURVE",
"666 465 OFFCURVE",
"666 570 QCURVE",
"666 570 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
55 49 31 3 4 3 3 1 0 4 2 74 7 1 3 3 2 91 5 1 2 2 31 75 6 1 4 4 0 91 1 1 0 0 30 0 76 44 25 41 41 17 25 36 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04A9;
unicode = 04A9;
},
{
glyphname = uni04B4;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"326 0 LINE",
"1023 0 LINE",
"1023 -351 LINE",
"1188 -351 LINE",
"1206 156 LINE",
"1061 156 LINE",
"1061 1456 LINE",
"876 1456 LINE",
"876 151 LINE",
"511 151 LINE",
"511 1304 LINE",
"749 1304 LINE",
"749 1455 LINE",
"511 1455 LINE",
"511 1456 LINE",
"326 1456 LINE",
"326 1455 LINE",
"57 1455 LINE",
"57 1304 LINE",
"326 1304 LINE",
"326 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
0 6 3 6 82 2 1 0 0 1 89 4 1 1 1 22 75 5 1 3 3 7 90 0 7 7 23 7 76 17 17 17 17 17 17 81 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04B4;
unicode = 04B4;
},
{
glyphname = uni04B5;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"284 0 LINE",
"979 0 LINE",
"979 -321 LINE",
"1145 -321 LINE",
"1163 151 LINE",
"1035 151 LINE",
"1035 1082 LINE",
"850 1082 LINE",
"850 151 LINE",
"469 151 LINE",
"469 931 LINE",
"697 931 LINE",
"697 1082 LINE",
"52 1082 LINE",
"52 931 LINE",
"284 931 LINE",
"284 931 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
0 6 3 6 82 2 1 0 0 1 89 4 1 1 1 24 75 5 1 3 3 7 90 0 7 7 23 7 76 17 17 17 17 17 17 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04B5;
unicode = 04B5;
},
{
glyphname = uni04B8;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"678 1009 LINE",
"529 1009 LINE",
"529 309 LINE",
"678 309 LINE",
"678 309 LINE"
);
},
{
closed = 1;
nodes = (
"878 1456 LINE",
"878 757 LINE",
"806 733 OFFCURVE",
"662 704 OFFCURVE",
"579 704 QCURVE SMOOTH",
"522 704 OFFCURVE",
"438 733 OFFCURVE",
"383 802 OFFCURVE",
"356 915 OFFCURVE",
"356 1000 QCURVE SMOOTH",
"356 1456 LINE",
"171 1456 LINE",
"171 1000 LINE SMOOTH",
"171 879 OFFCURVE",
"226 709 OFFCURVE",
"330 601 OFFCURVE",
"482 552 OFFCURVE",
"579 552 QCURVE SMOOTH",
"627 552 OFFCURVE",
"708 559 OFFCURVE",
"779 573 OFFCURVE",
"845 591 OFFCURVE",
"878 603 QCURVE",
"878 0 LINE",
"1063 0 LINE",
"1063 1456 LINE",
"1063 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
28 1 5 1 7 1 3 5 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 1 4 5 4 1 5 112 0 0 3 2 3 0 104 0 5 0 3 0 5 3 100 7 6 2 4 4 22 75 0 2 2 23 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 37 values pushed */
0 1 4 5 4 1 5 112 0 0 3 2 3 0 2 112 0 5 0 3 0 5 3 100 7 6 2 4 4 22 75 0 2 2 23 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
4 4 4 29 4 29 37 21 37 18 17 16 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04B8;
unicode = 04B8;
},
{
glyphname = uni04B9;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"687 777 LINE",
"537 777 LINE",
"537 211 LINE",
"687 211 LINE",
"687 211 LINE"
);
},
{
closed = 1;
nodes = (
"1068 1082 LINE",
"883 1082 LINE",
"883 547 LINE",
"814 530 OFFCURVE",
"666 512 OFFCURVE",
"585 512 QCURVE SMOOTH",
"463 512 OFFCURVE",
"332 634 OFFCURVE",
"331 767 QCURVE SMOOTH",
"331 1082 LINE",
"146 1082 LINE",
"146 767 LINE SMOOTH",
"146 664 OFFCURVE",
"208 511 OFFCURVE",
"323 410 OFFCURVE",
"485 360 OFFCURVE",
"585 360 QCURVE SMOOTH",
"670 360 OFFCURVE",
"815 378 OFFCURVE",
"883 395 QCURVE",
"883 0 LINE",
"1068 0 LINE",
"1068 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
23 1 5 1 6 1 3 5 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 1 4 5 5 1 104 0 0 3 2 3 0 104 0 5 0 3 0 5 3 100 6 1 4 4 24 75 0 2 2 23 2 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
18 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 1 4 5 4 1 5 112 0 0 3 2 3 0 104 0 5 0 3 0 5 3 100 6 1 4 4 24 75 0 2 2 23 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 36 values pushed */
0 1 4 5 4 1 5 112 0 0 3 2 3 0 2 112 0 5 0 3 0 5 3 100 6 1 4 4 24 75 0 2 2 23 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
19 35 21 35 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04B9;
unicode = 04B9;
},
{
glyphname = uni04BA;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"412 0 LINE",
"412 698 LINE",
"483 722 OFFCURVE",
"627 751 OFFCURVE",
"710 751 QCURVE SMOOTH",
"767 751 OFFCURVE",
"851 722 OFFCURVE",
"906 653 OFFCURVE",
"933 540 OFFCURVE",
"933 455 QCURVE SMOOTH",
"933 0 LINE",
"1118 0 LINE",
"1119 455 LINE SMOOTH",
"1119 576 OFFCURVE",
"1064 746 OFFCURVE",
"959 854 OFFCURVE",
"807 903 OFFCURVE",
"710 903 QCURVE SMOOTH",
"662 903 OFFCURVE",
"581 896 OFFCURVE",
"510 882 OFFCURVE",
"445 863 OFFCURVE",
"412 851 QCURVE",
"412 1456 LINE",
"227 1456 LINE",
"227 0 LINE",
"227 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
3 1 3 1 24 1 2 3 2 74 0 1 0 3 2 1 3 99 0 0 0 22 75 5 4 2 2 2 23 2 76 0 0 0 25 0 25 37 21 37 17 6 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04BA;
unicode = 04BA;
},
{
glyphname = uni04BC;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"875 -22 OFFCURVE",
"977 0 OFFCURVE",
"1053 31 OFFCURVE",
"1106 66 OFFCURVE",
"1121 78 QCURVE",
"1074 214 LINE",
"1052 200 OFFCURVE",
"999 170 OFFCURVE",
"934 144 OFFCURVE",
"857 128 OFFCURVE",
"810 128 QCURVE SMOOTH",
"722 128 OFFCURVE",
"598 198 OFFCURVE",
"519 317 OFFCURVE",
"483 476 OFFCURVE",
"483 566 QCURVE SMOOTH",
"483 702 LINE",
"1161 702 LINE",
"1161 890 LINE SMOOTH",
"1161 1176 OFFCURVE",
"963 1475 OFFCURVE",
"750 1475 QCURVE SMOOTH",
"655 1475 OFFCURVE",
"490 1388 OFFCURVE",
"368 1226 OFFCURVE",
"298 996 OFFCURVE",
"298 852 QCURVE",
"240 877 OFFCURVE",
"188 997 OFFCURVE",
"187 1081 QCURVE",
"38 1081 LINE",
"38 1006 OFFCURVE",
"71 880 OFFCURVE",
"136 785 OFFCURVE",
"233 722 OFFCURVE",
"298 710 QCURVE",
"298 566 LINE SMOOTH",
"298 438 OFFCURVE",
"365 223 OFFCURVE",
"495 66 OFFCURVE",
"686 -22 OFFCURVE",
"810 -22 QCURVE",
"810 -22 LINE"
);
},
{
closed = 1;
nodes = (
"483 850 LINE SMOOTH",
"483 1080 OFFCURVE",
"623 1323 OFFCURVE",
"750 1323 QCURVE SMOOTH",
"817 1323 OFFCURVE",
"904 1263 OFFCURVE",
"955 1161 OFFCURVE",
"976 1024 OFFCURVE",
"976 946 QCURVE SMOOTH",
"976 834 LINE",
"483 834 LINE",
"483 834 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 79 values pushed */
15 1 5 1 6 1 3 5 36 1 4 3 37 1 0 4 4 74 8 1 5 0 3 4 5 3 97 0 6 6 2 91 0 2 2 29 75 0 1 1 24 75 0 4 4 0 91 7 1 0 0 30 0 76 43 42 1 0 50 48 42 52 43 52 32 30 25 24 21 19 12 11 0 41 1 41 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04BC;
unicode = 04BC;
},
{
glyphname = uni04BD;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"835 -20 OFFCURVE",
"947 4 OFFCURVE",
"1036 42 OFFCURVE",
"1103 90 OFFCURVE",
"1127 115 QCURVE",
"1053 239 LINE",
"1005 193 OFFCURVE",
"866 130 OFFCURVE",
"766 130 QCURVE SMOOTH",
"697 130 OFFCURVE",
"592 188 OFFCURVE",
"520 288 OFFCURVE",
"482 421 OFFCURVE",
"479 497 QCURVE",
"1157 497 LINE",
"1157 617 LINE SMOOTH",
"1157 722 OFFCURVE",
"1106 900 OFFCURVE",
"1002 1029 OFFCURVE",
"843 1102 OFFCURVE",
"736 1102 QCURVE SMOOTH",
"656 1102 OFFCURVE",
"511 1038 OFFCURVE",
"395 921 OFFCURVE",
"315 758 OFFCURVE",
"300 661 QCURVE",
"241 682 OFFCURVE",
"187 789 OFFCURVE",
"186 866 QCURVE",
"38 866 LINE",
"38 724 OFFCURVE",
"165 545 OFFCURVE",
"293 522 QCURVE",
"293 521 LINE SMOOTH",
"293 404 OFFCURVE",
"359 206 OFFCURVE",
"481 61 OFFCURVE",
"656 -20 OFFCURVE",
"766 -20 QCURVE",
"766 -20 LINE"
);
},
{
closed = 1;
nodes = (
"797 950 OFFCURVE",
"886 904 OFFCURVE",
"944 827 OFFCURVE",
"972 727 OFFCURVE",
"972 673 QCURVE SMOOTH",
"972 649 LINE",
"485 649 LINE",
"494 713 OFFCURVE",
"538 823 OFFCURVE",
"602 904 OFFCURVE",
"686 950 OFFCURVE",
"736 950 QCURVE",
"736 950 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 82 values pushed */
13 1 6 1 5 1 3 6 33 1 4 3 34 1 0 4 4 74 0 1 5 6 5 1 6 112 0 6 0 3 4 6 3 97 8 1 5 5 2 91 0 2 2 31 75 0 4 4 0 91 7 1 0 0 30 0 76 40 39 1 0 45 44 39 50 40 50 31 29 25 24 19 17 10 9 0 38 1 38 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04BD;
unicode = 04BD;
},
{
glyphname = uni04C3;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1153 1456 LINE",
"938 1456 LINE",
"527 828 LINE",
"385 828 LINE",
"385 1456 LINE",
"200 1456 LINE",
"200 0 LINE",
"385 0 LINE",
"385 666 LINE",
"609 666 LINE SMOOTH",
"702 666 OFFCURVE",
"841 610 OFFCURVE",
"932 504 OFFCURVE",
"978 350 OFFCURVE",
"979 251 QCURVE SMOOTH",
"979 161 OFFCURVE",
"950 15 OFFCURVE",
"882 -90 OFFCURVE",
"773 -148 OFFCURVE",
"693 -148 QCURVE",
"695 -294 LINE",
"810 -294 OFFCURVE",
"985 -221 OFFCURVE",
"1103 -82 OFFCURVE",
"1164 120 OFFCURVE",
"1164 251 QCURVE SMOOTH",
"1164 370 OFFCURVE",
"1104 567 OFFCURVE",
"990 713 OFFCURVE",
"822 806 OFFCURVE",
"714 821 QCURVE",
"714 821 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
0 5 0 2 3 5 2 99 0 1 0 0 1 0 95 6 1 4 4 22 75 0 3 3 23 3 76 17 17 17 17 40 17 25 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04C3;
unicode = 04C3;
},
{
glyphname = uni04C4;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1084 1082 LINE",
"860 1082 LINE",
"484 624 LINE",
"365 624 LINE",
"365 1082 LINE",
"180 1082 LINE",
"180 0 LINE",
"365 0 LINE",
"365 461 LINE",
"564 461 LINE SMOOTH",
"635 461 OFFCURVE",
"754 429 OFFCURVE",
"841 360 OFFCURVE",
"891 251 OFFCURVE",
"891 175 QCURVE SMOOTH",
"891 124 OFFCURVE",
"866 33 OFFCURVE",
"810 -40 OFFCURVE",
"723 -96 OFFCURVE",
"660 -112 QCURVE",
"709 -258 LINE",
"806 -240 OFFCURVE",
"945 -142 OFFCURVE",
"1033 -17 OFFCURVE",
"1075 119 OFFCURVE",
"1075 175 QCURVE SMOOTH",
"1075 271 OFFCURVE",
"1018 421 OFFCURVE",
"916 530 OFFCURVE",
"773 598 OFFCURVE",
"687 612 QCURVE",
"687 612 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
11 10 2 1 71 0 3 0 0 1 3 0 99 4 1 2 2 24 75 0 1 1 23 1 76 30 29 28 27 26 25 24 23 22 20 5 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04C4;
unicode = 04C4;
},
{
glyphname = uni04C7;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"182 1456 LINE",
"182 0 LINE",
"367 0 LINE",
"367 645 LINE",
"864 645 LINE",
"864 -89 LINE SMOOTH",
"864 -176 OFFCURVE",
"797 -285 OFFCURVE",
"732 -285 QCURVE SMOOTH",
"726 -285 OFFCURVE",
"700 -283 OFFCURVE",
"671 -280 OFFCURVE",
"644 -275 OFFCURVE",
"636 -272 QCURVE",
"622 -419 LINE",
"651 -429 OFFCURVE",
"703 -437 OFFCURVE",
"732 -437 QCURVE SMOOTH",
"808 -437 OFFCURVE",
"926 -390 OFFCURVE",
"1007 -300 OFFCURVE",
"1049 -171 OFFCURVE",
"1049 -89 QCURVE SMOOTH",
"1049 1456 LINE",
"864 1456 LINE",
"864 796 LINE",
"367 796 LINE",
"367 1456 LINE",
"367 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
14 1 3 5 13 1 2 3 2 74 0 0 0 4 5 0 4 97 7 6 2 1 1 22 75 0 5 5 23 75 0 3 3 2 91 0 2 2 33 2 76 0 0 0 27 0 27 17 19 39 37 17 17 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04C7;
unicode = 04C7;
},
{
glyphname = uni04C8;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"179 1082 LINE",
"179 0 LINE",
"364 0 LINE",
"364 462 LINE",
"861 462 LINE",
"861 -89 LINE SMOOTH",
"861 -179 OFFCURVE",
"790 -285 OFFCURVE",
"724 -285 QCURVE SMOOTH",
"717 -285 OFFCURVE",
"691 -283 OFFCURVE",
"662 -280 OFFCURVE",
"634 -275 OFFCURVE",
"626 -272 QCURVE",
"612 -419 LINE",
"641 -429 OFFCURVE",
"694 -437 OFFCURVE",
"724 -437 QCURVE SMOOTH",
"800 -437 OFFCURVE",
"920 -390 OFFCURVE",
"1002 -301 OFFCURVE",
"1046 -172 OFFCURVE",
"1046 -89 QCURVE SMOOTH",
"1046 1082 LINE",
"861 1082 LINE",
"861 613 LINE",
"364 613 LINE",
"364 1082 LINE",
"364 1082 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
14 1 3 5 13 1 2 3 2 74 0 0 0 4 5 0 4 97 7 6 2 1 1 24 75 0 5 5 23 75 0 3 3 2 91 0 2 2 33 2 76 0 0 0 27 0 27 17 19 39 37 17 17 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04C8;
unicode = 04C8;
},
{
glyphname = uni04D8;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"502 1476 OFFCURVE",
"388 1454 OFFCURVE",
"301 1422 OFFCURVE",
"242 1387 OFFCURVE",
"225 1375 QCURVE",
"272 1239 LINE",
"297 1253 OFFCURVE",
"358 1284 OFFCURVE",
"432 1309 OFFCURVE",
"521 1325 OFFCURVE",
"574 1325 QCURVE SMOOTH",
"668 1325 OFFCURVE",
"802 1249 OFFCURVE",
"887 1118 OFFCURVE",
"926 944 OFFCURVE",
"926 846 QCURVE SMOOTH",
"926 753 LINE",
"90 753 LINE",
"90 587 LINE SMOOTH",
"90 449 OFFCURVE",
"153 225 OFFCURVE",
"279 66 OFFCURVE",
"467 -20 OFFCURVE",
"593 -20 QCURVE SMOOTH",
"704 -21 OFFCURVE",
"893 76 OFFCURVE",
"1032 250 OFFCURVE",
"1111 488 OFFCURVE",
"1111 628 QCURVE SMOOTH",
"1111 846 LINE SMOOTH",
"1111 982 OFFCURVE",
"1041 1213 OFFCURVE",
"904 1381 OFFCURVE",
"704 1476 OFFCURVE",
"574 1476 QCURVE",
"574 1476 LINE"
);
},
{
closed = 1;
nodes = (
"504 130 OFFCURVE",
"383 193 OFFCURVE",
"308 302 OFFCURVE",
"275 448 OFFCURVE",
"275 531 QCURVE SMOOTH",
"275 621 LINE",
"926 621 LINE",
"925 522 OFFCURVE",
"881 343 OFFCURVE",
"797 209 OFFCURVE",
"674 130 OFFCURVE",
"593 130 QCURVE",
"593 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 64 values pushed */
30 1 3 0 29 1 2 3 2 74 0 2 0 5 4 2 5 97 0 3 3 0 91 6 1 0 0 29 75 7 1 4 4 1 91 0 1 1 30 1 76 36 35 1 0 41 40 35 46 36 46 25 23 18 17 12 10 0 34 1 34 8 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04D8;
unicode = 04D8;
},
{
glyphname = uni04E0;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"452 851 LINE",
"452 700 LINE",
"595 700 LINE SMOOTH",
"754 700 OFFCURVE",
"921 558 OFFCURVE",
"921 402 QCURVE SMOOTH",
"921 343 OFFCURVE",
"879 243 OFFCURVE",
"801 171 OFFCURVE",
"688 130 OFFCURVE",
"617 130 QCURVE SMOOTH",
"554 130 OFFCURVE",
"449 173 OFFCURVE",
"375 248 OFFCURVE",
"333 347 OFFCURVE",
"333 404 QCURVE",
"148 404 LINE",
"148 293 OFFCURVE",
"229 133 OFFCURVE",
"361 29 OFFCURVE",
"530 -21 OFFCURVE",
"617 -21 QCURVE SMOOTH",
"723 -21 OFFCURVE",
"902 36 OFFCURVE",
"1033 146 OFFCURVE",
"1106 304 OFFCURVE",
"1106 406 QCURVE SMOOTH",
"1106 506 OFFCURVE",
"1044 665 OFFCURVE",
"927 776 OFFCURVE",
"757 840 OFFCURVE",
"649 846 QCURVE",
"1060 1338 LINE",
"1059 1456 LINE",
"190 1456 LINE",
"190 1304 LINE",
"842 1304 LINE",
"842 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
4 1 0 1 36 1 2 0 2 74 0 4 6 5 6 4 5 112 0 2 0 6 4 2 6 99 0 0 0 1 89 0 1 1 22 75 0 5 5 3 91 0 3 3 30 3 76 38 36 20 40 18 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04E0;
unicode = 04E0;
},
{
glyphname = uni04E1;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"440 476 LINE",
"440 325 LINE",
"581 325 LINE SMOOTH",
"740 325 OFFCURVE",
"911 184 OFFCURVE",
"911 27 QCURVE SMOOTH",
"911 -32 OFFCURVE",
"869 -131 OFFCURVE",
"791 -203 OFFCURVE",
"678 -243 OFFCURVE",
"606 -243 QCURVE SMOOTH",
"543 -243 OFFCURVE",
"439 -200 OFFCURVE",
"364 -126 OFFCURVE",
"323 -27 OFFCURVE",
"323 29 QCURVE",
"137 29 LINE",
"137 -81 OFFCURVE",
"219 -241 OFFCURVE",
"351 -345 OFFCURVE",
"519 -395 OFFCURVE",
"606 -395 QCURVE SMOOTH",
"712 -395 OFFCURVE",
"892 -338 OFFCURVE",
"1023 -228 OFFCURVE",
"1096 -70 OFFCURVE",
"1096 31 QCURVE SMOOTH",
"1096 129 OFFCURVE",
"1036 285 OFFCURVE",
"922 396 OFFCURVE",
"757 461 OFFCURVE",
"652 469 QCURVE",
"1050 964 LINE",
"1049 1082 LINE",
"180 1082 LINE",
"180 929 LINE",
"812 929 LINE",
"812 929 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 11 values pushed */
4 1 0 1 36 5 2 5 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
48 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 36 values pushed */
0 5 0 3 0 5 3 112 0 3 4 0 3 4 110 0 0 0 1 89 0 1 1 24 75 0 4 4 2 91 0 2 2 26 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 33 values pushed */
0 5 0 3 0 5 3 112 0 3 4 0 3 4 110 0 4 0 2 4 2 95 0 0 0 1 89 0 1 1 24 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
38 36 20 43 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04E1;
unicode = 04E1;
},
{
glyphname = uni04FA;
layers = (
{
components = (
{
name = Gamma;
transform = "{1, 0, 0, 1, 75, 0}";
},
{
name = crossbar;
transform = "{1, 0, 0, 1, -243, 63}";
},
{
name = cyrillichook;
transform = "{1, 0, 0, 1, -177, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04FA;
unicode = 04FA;
},
{
glyphname = uni04FB;
layers = (
{
components = (
{
name = uni0433;
transform = "{1, 0, 0, 1, 82, 0}";
},
{
name = crossbar;
transform = "{1, 0, 0, 1, -193, -156}";
},
{
name = cyrillichook;
transform = "{1, 0, 0, 1, -188, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04FB;
unicode = 04FB;
},
{
glyphname = uni0500;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"584 877 LINE SMOOTH",
"467 877 OFFCURVE",
"286 814 OFFCURVE",
"162 700 OFFCURVE",
"97 540 OFFCURVE",
"97 443 QCURVE SMOOTH",
"97 347 OFFCURVE",
"162 184 OFFCURVE",
"286 66 OFFCURVE",
"467 0 OFFCURVE",
"584 0 QCURVE SMOOTH",
"1072 0 LINE",
"1072 1456 LINE",
"887 1456 LINE",
"887 877 LINE",
"887 877 LINE"
);
},
{
closed = 1;
nodes = (
"584 151 LINE SMOOTH",
"506 151 OFFCURVE",
"392 200 OFFCURVE",
"318 282 OFFCURVE",
"283 388 OFFCURVE",
"283 445 QCURVE SMOOTH",
"283 501 OFFCURVE",
"318 603 OFFCURVE",
"392 680 OFFCURVE",
"506 726 OFFCURVE",
"584 726 QCURVE SMOOTH",
"887 726 LINE",
"887 151 LINE",
"887 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 45 values pushed */
5 1 2 0 3 4 2 3 99 0 0 0 22 75 6 1 4 4 1 92 0 1 1 23 1 76 15 15 0 0 15 27 15 26 18 16 0 14 0 13 33 17 7 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0500;
unicode = 0500;
},
{
glyphname = uni0502;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"811 0 LINE SMOOTH",
"882 0 OFFCURVE",
"1009 60 OFFCURVE",
"1104 180 OFFCURVE",
"1161 358 OFFCURVE",
"1163 476 QCURVE SMOOTH",
"1165 572 OFFCURVE",
"1125 764 OFFCURVE",
"1098 855 QCURVE",
"919 855 LINE",
"948 764 OFFCURVE",
"980 567 OFFCURVE",
"978 476 QCURVE SMOOTH",
"977 404 OFFCURVE",
"955 285 OFFCURVE",
"913 199 OFFCURVE",
"852 152 OFFCURVE",
"811 151 QCURVE SMOOTH",
"762 150 LINE",
"762 1456 LINE",
"577 1456 LINE",
"577 877 LINE",
"463 877 LINE SMOOTH",
"369 877 OFFCURVE",
"225 813 OFFCURVE",
"127 698 OFFCURVE",
"77 538 OFFCURVE",
"77 443 QCURVE SMOOTH",
"77 348 OFFCURVE",
"127 186 OFFCURVE",
"225 67 OFFCURVE",
"369 0 OFFCURVE",
"463 0 QCURVE",
"463 0 LINE"
);
},
{
closed = 1;
nodes = (
"463 151 LINE SMOOTH",
"409 151 OFFCURVE",
"332 201 OFFCURVE",
"284 283 OFFCURVE",
"262 389 OFFCURVE",
"262 445 QCURVE SMOOTH",
"262 500 OFFCURVE",
"284 602 OFFCURVE",
"332 680 OFFCURVE",
"409 726 OFFCURVE",
"463 726 QCURVE SMOOTH",
"577 726 LINE",
"577 151 LINE",
"577 151 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
4 1 1 0 5 3 1 5 99 0 2 2 22 75 8 6 2 3 3 0 92 7 1 0 0 23 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 35 values pushed */
0 4 1 5 1 4 5 112 0 1 0 5 3 1 5 99 0 2 2 22 75 8 6 2 3 3 0 92 7 1 0 0 23 0 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 25 values pushed */
33 33 1 0 33 45 33 44 36 34 24 23 16 14 13 12 11 9 0 32 1 31 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0502;
unicode = 0502;
},
{
glyphname = uni0503;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"101 445 LINE SMOOTH",
"101 347 OFFCURVE",
"139 177 OFFCURVE",
"215 51 OFFCURVE",
"327 -21 OFFCURVE",
"401 -21 QCURVE SMOOTH",
"472 -21 OFFCURVE",
"577 47 OFFCURVE",
"614 110 QCURVE",
"681 -24 OFFCURVE",
"849 -21 QCURVE SMOOTH",
"916 -21 OFFCURVE",
"1032 51 OFFCURVE",
"1118 191 OFFCURVE",
"1168 395 OFFCURVE",
"1170 529 QCURVE SMOOTH",
"1172 632 OFFCURVE",
"1132 834 OFFCURVE",
"1104 932 QCURVE",
"926 931 LINE",
"955 831 OFFCURVE",
"986 629 OFFCURVE",
"984 529 QCURVE SMOOTH",
"983 442 OFFCURVE",
"966 297 OFFCURVE",
"933 191 OFFCURVE",
"883 131 OFFCURVE",
"849 130 QCURVE SMOOTH",
"826 130 OFFCURVE",
"791 159 OFFCURVE",
"767 207 OFFCURVE",
"756 272 OFFCURVE",
"757 308 QCURVE SMOOTH",
"757 1560 LINE",
"572 1560 LINE",
"572 1029 LINE",
"539 1064 OFFCURVE",
"455 1102 OFFCURVE",
"403 1102 QCURVE SMOOTH",
"328 1102 OFFCURVE",
"214 1021 OFFCURVE",
"139 879 OFFCURVE",
"101 687 OFFCURVE",
"101 576 QCURVE",
"101 576 LINE"
);
},
{
closed = 1;
nodes = (
"572 308 LINE SMOOTH",
"573 285 OFFCURVE",
"577 243 OFFCURVE",
"580 223 QCURVE",
"557 183 OFFCURVE",
"493 135 OFFCURVE",
"447 136 QCURVE SMOOTH",
"402 136 OFFCURVE",
"340 186 OFFCURVE",
"302 272 OFFCURVE",
"286 383 OFFCURVE",
"286 445 QCURVE SMOOTH",
"286 576 LINE SMOOTH",
"286 648 OFFCURVE",
"302 781 OFFCURVE",
"340 884 OFFCURVE",
"403 945 OFFCURVE",
"449 945 QCURVE SMOOTH",
"490 945 OFFCURVE",
"550 905 OFFCURVE",
"572 872 QCURVE",
"572 872 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
8 1 6 0 61 44 2 2 3 35 1 4 2 3 74 0 1 0 1 114 0 3 6 2 6 3 2 112 0 6 6 0 91 0 0 0 31 75 7 1 2 2 4 92 5 1 4 4 30 4 76 41 39 35 39 23 37 19 36 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0503;
unicode = 0503;
},
{
glyphname = uni0504;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"503 267 LINE SMOOTH",
"509 116 OFFCURVE",
"661 -23 OFFCURVE",
"798 -21 QCURVE SMOOTH",
"872 -21 OFFCURVE",
"1003 50 OFFCURVE",
"1100 189 OFFCURVE",
"1158 394 OFFCURVE",
"1160 529 QCURVE SMOOTH",
"1162 632 OFFCURVE",
"1120 834 OFFCURVE",
"1094 932 QCURVE",
"915 932 LINE",
"944 831 OFFCURVE",
"976 629 OFFCURVE",
"975 529 QCURVE SMOOTH",
"973 442 OFFCURVE",
"950 296 OFFCURVE",
"906 190 OFFCURVE",
"841 131 OFFCURVE",
"798 130 QCURVE SMOOTH",
"771 130 OFFCURVE",
"730 152 OFFCURVE",
"702 189 OFFCURVE",
"688 239 OFFCURVE",
"688 267 QCURVE SMOOTH",
"688 372 LINE SMOOTH",
"688 431 OFFCURVE",
"669 537 OFFCURVE",
"625 625 OFFCURVE",
"556 692 OFFCURVE",
"507 713 QCURVE",
"598 761 OFFCURVE",
"698 931 OFFCURVE",
"698 1045 QCURVE SMOOTH",
"698 1145 OFFCURVE",
"641 1299 OFFCURVE",
"533 1402 OFFCURVE",
"378 1456 OFFCURVE",
"280 1456 QCURVE SMOOTH",
"55 1456 LINE",
"55 1304 LINE",
"280 1304 LINE SMOOTH",
"339 1304 OFFCURVE",
"426 1268 OFFCURVE",
"484 1201 OFFCURVE",
"513 1106 OFFCURVE",
"513 1047 QCURVE SMOOTH",
"513 920 OFFCURVE",
"394 787 OFFCURVE",
"265 787 QCURVE SMOOTH",
"183 787 LINE",
"183 635 LINE",
"316 635 LINE SMOOTH",
"358 635 OFFCURVE",
"427 596 OFFCURVE",
"476 526 OFFCURVE",
"503 428 OFFCURVE",
"503 370 QCURVE",
"503 370 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
27 1 0 1 1 74 0 5 2 1 2 5 1 112 0 1 0 0 4 1 0 99 0 2 2 3 91 0 3 3 22 75 0 4 4 6 91 0 6 6 30 6 76 56 54 47 46 39 37 33 38 33 36 7 6 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0504;
unicode = 0504;
},
{
glyphname = uni0505;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"731 213 LINE",
"731 290 LINE SMOOTH",
"731 375 OFFCURVE",
"647 501 OFFCURVE",
"545 529 QCURVE",
"636 565 OFFCURVE",
"733 676 OFFCURVE",
"733 760 QCURVE SMOOTH",
"733 836 OFFCURVE",
"676 956 OFFCURVE",
"567 1038 OFFCURVE",
"409 1082 OFFCURVE",
"309 1082 QCURVE SMOOTH",
"80 1082 LINE",
"86 932 LINE",
"309 932 LINE SMOOTH",
"431 932 OFFCURVE",
"547 833 OFFCURVE",
"547 754 QCURVE SMOOTH",
"547 679 OFFCURVE",
"435 592 OFFCURVE",
"313 592 QCURVE SMOOTH",
"164 592 LINE",
"166 442 LINE",
"339 442 LINE SMOOTH",
"438 441 OFFCURVE",
"545 363 OFFCURVE",
"546 289 QCURVE SMOOTH",
"546 214 LINE",
"552 85 OFFCURVE",
"688 -29 OFFCURVE",
"822 -26 QCURVE SMOOTH",
"888 -26 OFFCURVE",
"1005 31 OFFCURVE",
"1092 143 OFFCURVE",
"1145 309 OFFCURVE",
"1147 419 QCURVE SMOOTH",
"1149 500 OFFCURVE",
"1106 660 OFFCURVE",
"1080 738 QCURVE",
"900 738 LINE",
"930 660 OFFCURVE",
"963 497 OFFCURVE",
"961 419 QCURVE SMOOTH",
"960 353 OFFCURVE",
"942 245 OFFCURVE",
"907 168 OFFCURVE",
"856 125 OFFCURVE",
"822 125 QCURVE SMOOTH",
"769 125 OFFCURVE",
"731 174 OFFCURVE",
"731 213 QCURVE",
"731 213 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
47 1 3 4 1 74 0 1 5 4 5 1 4 112 0 4 0 3 0 4 3 99 0 5 5 6 91 0 6 6 24 75 0 0 0 2 91 0 2 2 30 2 76 33 36 33 37 39 23 34 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0505;
unicode = 0505;
},
{
glyphname = uni0506;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"491 633 LINE SMOOTH",
"551 633 OFFCURVE",
"648 596 OFFCURVE",
"717 527 OFFCURVE",
"755 429 OFFCURVE",
"755 369 QCURVE SMOOTH",
"755 237 LINE SMOOTH",
"755 218 OFFCURVE",
"758 155 OFFCURVE",
"770 86 OFFCURVE",
"795 21 OFFCURVE",
"818 0 QCURVE",
"1009 0 LINE",
"1009 25 LINE",
"970 63 OFFCURVE",
"940 172 OFFCURVE",
"940 235 QCURVE SMOOTH",
"940 371 LINE SMOOTH",
"940 432 OFFCURVE",
"915 540 OFFCURVE",
"861 628 OFFCURVE",
"775 694 OFFCURVE",
"713 714 QCURVE",
"825 763 OFFCURVE",
"944 927 OFFCURVE",
"944 1042 QCURVE SMOOTH",
"944 1144 OFFCURVE",
"878 1299 OFFCURVE",
"753 1403 OFFCURVE",
"571 1456 OFFCURVE",
"455 1456 QCURVE SMOOTH",
"179 1456 LINE",
"179 1304 LINE",
"455 1304 LINE SMOOTH",
"533 1304 OFFCURVE",
"648 1268 OFFCURVE",
"723 1201 OFFCURVE",
"759 1104 OFFCURVE",
"759 1044 QCURVE SMOOTH",
"759 914 OFFCURVE",
"604 785 OFFCURVE",
"435 785 QCURVE SMOOTH",
"272 785 LINE",
"272 633 LINE",
"272 633 LINE"
);
},
{
closed = 1;
nodes = (
"1106 208 LINE",
"905 208 LINE",
"905 29 LINE SMOOTH",
"905 -56 OFFCURVE",
"865 -214 OFFCURVE",
"817 -284 QCURVE",
"932 -347 LINE",
"974 -311 OFFCURVE",
"1038 -219 OFFCURVE",
"1083 -118 OFFCURVE",
"1106 -15 OFFCURVE",
"1106 32 QCURVE",
"1106 32 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 61 values pushed */
21 1 4 0 30 1 3 5 2 74 50 49 2 3 71 0 0 6 1 4 5 0 4 99 0 1 1 2 91 0 2 2 22 75 0 5 5 3 89 0 3 3 23 3 76 0 0 55 54 0 43 0 42 32 31 33 38 33 7 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0506;
unicode = 0506;
},
{
glyphname = uni0507;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"522 441 LINE SMOOTH",
"623 440 OFFCURVE",
"733 350 OFFCURVE",
"733 268 QCURVE SMOOTH",
"733 173 LINE SMOOTH",
"733 160 OFFCURVE",
"735 113 OFFCURVE",
"745 62 OFFCURVE",
"767 14 OFFCURVE",
"787 0 QCURVE",
"978 0 LINE",
"978 19 LINE",
"960 32 OFFCURVE",
"937 70 OFFCURVE",
"924 112 OFFCURVE",
"919 154 OFFCURVE",
"919 172 QCURVE SMOOTH",
"919 269 LINE SMOOTH",
"919 315 OFFCURVE",
"898 396 OFFCURVE",
"852 462 OFFCURVE",
"779 512 OFFCURVE",
"727 527 QCURVE",
"821 562 OFFCURVE",
"919 677 OFFCURVE",
"919 761 QCURVE SMOOTH",
"919 838 OFFCURVE",
"861 957 OFFCURVE",
"751 1039 OFFCURVE",
"593 1082 OFFCURVE",
"493 1082 QCURVE SMOOTH",
"209 1082 LINE",
"208 932 LINE",
"493 932 LINE SMOOTH",
"616 932 OFFCURVE",
"733 835 OFFCURVE",
"733 755 QCURVE SMOOTH",
"733 677 OFFCURVE",
"617 591 OFFCURVE",
"493 591 QCURVE SMOOTH",
"281 591 LINE",
"281 441 LINE",
"281 441 LINE"
);
},
{
closed = 1;
nodes = (
"1072 189 LINE",
"871 189 LINE",
"871 10 LINE SMOOTH",
"871 -75 OFFCURVE",
"831 -233 OFFCURVE",
"783 -303 QCURVE",
"898 -366 LINE",
"940 -330 OFFCURVE",
"1004 -238 OFFCURVE",
"1049 -137 OFFCURVE",
"1072 -34 OFFCURVE",
"1072 13 QCURVE",
"1072 13 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 53 values pushed */
19 1 3 0 1 74 48 47 32 30 25 5 4 71 0 4 3 4 115 0 0 5 1 3 4 0 3 99 0 1 1 2 91 0 2 2 24 1 76 0 0 53 52 0 41 0 40 33 36 33 6 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0507;
unicode = 0507;
},
{
glyphname = uni0508;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"610 271 LINE",
"615 121 OFFCURVE",
"746 -23 OFFCURVE",
"868 -21 QCURVE SMOOTH",
"934 -21 OFFCURVE",
"1049 51 OFFCURVE",
"1135 191 OFFCURVE",
"1185 395 OFFCURVE",
"1187 529 QCURVE SMOOTH",
"1189 632 OFFCURVE",
"1160 834 OFFCURVE",
"1140 932 QCURVE",
"961 931 LINE",
"981 831 OFFCURVE",
"1002 629 OFFCURVE",
"1001 529 QCURVE SMOOTH",
"1000 443 OFFCURVE",
"984 297 OFFCURVE",
"951 191 OFFCURVE",
"902 131 OFFCURVE",
"868 130 QCURVE SMOOTH",
"849 130 OFFCURVE",
"821 154 OFFCURVE",
"804 193 OFFCURVE",
"796 244 OFFCURVE",
"796 271 QCURVE SMOOTH",
"795 1456 LINE",
"226 1456 LINE",
"225 768 LINE SMOOTH",
"225 615 OFFCURVE",
"207 384 OFFCURVE",
"165 229 OFFCURVE",
"95 151 OFFCURVE",
"43 151 QCURVE SMOOTH",
"20 151 LINE",
"20 0 LINE",
"54 0 LINE SMOOTH",
"155 0 OFFCURVE",
"292 102 OFFCURVE",
"375 298 OFFCURVE",
"410 584 OFFCURVE",
"410 768 QCURVE SMOOTH",
"409 1304 LINE",
"611 1304 LINE",
"611 1304 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 31 values pushed */
0 5 0 2 0 5 2 112 0 0 0 3 89 0 3 3 22 75 4 1 2 2 1 91 6 1 1 1 23 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 5 0 2 0 5 2 112 0 0 0 3 89 0 3 3 22 75 0 2 2 1 91 0 1 1 23 75 0 4 4 6 91 0 6 6 30 6 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 10 values pushed */
39 23 37 21 33 37 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0508;
unicode = 0508;
},
{
glyphname = uni0509;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"195 1082 LINE",
"195 622 LINE SMOOTH",
"195 510 OFFCURVE",
"184 340 OFFCURVE",
"157 225 OFFCURVE",
"109 166 OFFCURVE",
"73 166 QCURVE SMOOTH",
"50 165 LINE",
"47 0 LINE",
"85 0 LINE SMOOTH",
"169 0 OFFCURVE",
"283 85 OFFCURVE",
"351 245 OFFCURVE",
"380 476 OFFCURVE",
"380 622 QCURVE SMOOTH",
"380 929 LINE",
"577 929 LINE",
"577 289 LINE",
"582 129 OFFCURVE",
"714 -23 OFFCURVE",
"835 -21 QCURVE SMOOTH",
"902 -21 OFFCURVE",
"1017 44 OFFCURVE",
"1103 172 OFFCURVE",
"1153 360 OFFCURVE",
"1155 484 QCURVE SMOOTH",
"1157 581 OFFCURVE",
"1117 772 OFFCURVE",
"1090 865 QCURVE",
"911 865 LINE",
"940 771 OFFCURVE",
"972 579 OFFCURVE",
"970 484 QCURVE SMOOTH",
"969 406 OFFCURVE",
"952 277 OFFCURVE",
"918 183 OFFCURVE",
"868 131 OFFCURVE",
"835 130 QCURVE SMOOTH",
"816 130 OFFCURVE",
"789 156 OFFCURVE",
"771 200 OFFCURVE",
"762 257 OFFCURVE",
"762 289 QCURVE SMOOTH",
"762 1082 LINE",
"762 1082 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 42 values pushed */
0 1 3 5 3 1 5 112 0 3 3 6 89 7 1 6 6 24 75 0 5 5 2 91 4 1 2 2 30 75 0 0 0 2 91 4 1 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 40 values pushed */
0 1 3 5 3 1 5 112 0 3 3 6 89 7 1 6 6 24 75 0 5 5 4 91 0 4 4 23 75 0 0 0 2 91 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 15 values pushed */
0 0 0 43 0 43 33 37 19 39 23 37 8 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0509;
unicode = 0509;
},
{
glyphname = uni050A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"595 1456 LINE",
"595 796 LINE",
"296 796 LINE",
"296 1456 LINE",
"111 1456 LINE",
"111 0 LINE",
"296 0 LINE",
"296 645 LINE",
"595 645 LINE",
"595 308 LINE",
"600 138 OFFCURVE",
"731 -23 OFFCURVE",
"852 -21 QCURVE SMOOTH",
"919 -21 OFFCURVE",
"1034 51 OFFCURVE",
"1119 191 OFFCURVE",
"1169 396 OFFCURVE",
"1171 529 QCURVE SMOOTH",
"1173 632 OFFCURVE",
"1131 834 OFFCURVE",
"1105 932 QCURVE",
"927 931 LINE",
"955 831 OFFCURVE",
"987 629 OFFCURVE",
"985 529 QCURVE SMOOTH",
"984 443 OFFCURVE",
"967 298 OFFCURVE",
"935 191 OFFCURVE",
"886 131 OFFCURVE",
"852 130 QCURVE SMOOTH",
"833 130 OFFCURVE",
"806 159 OFFCURVE",
"788 208 OFFCURVE",
"780 272 OFFCURVE",
"780 308 QCURVE SMOOTH",
"780 1456 LINE",
"780 1456 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 35 values pushed */
0 1 5 6 5 1 6 112 0 6 0 3 0 6 3 97 8 7 2 5 5 22 75 0 0 0 2 92 4 1 2 2 30 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 39 values pushed */
0 1 5 6 5 1 6 112 0 6 0 3 0 6 3 97 8 7 2 5 5 22 75 0 4 4 23 75 0 0 0 2 92 0 2 2 30 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 16 values pushed */
0 0 0 35 0 35 17 17 17 19 39 23 37 9 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni050A;
unicode = 050A;
},
{
glyphname = uni050B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"571 289 LINE SMOOTH",
"576 129 OFFCURVE",
"717 -23 OFFCURVE",
"846 -21 QCURVE SMOOTH",
"909 -21 OFFCURVE",
"1018 44 OFFCURVE",
"1099 172 OFFCURVE",
"1146 360 OFFCURVE",
"1148 484 QCURVE SMOOTH",
"1150 581 OFFCURVE",
"1120 772 OFFCURVE",
"1100 865 QCURVE",
"922 865 LINE",
"942 771 OFFCURVE",
"964 579 OFFCURVE",
"963 484 QCURVE SMOOTH",
"962 406 OFFCURVE",
"947 277 OFFCURVE",
"919 183 OFFCURVE",
"875 131 OFFCURVE",
"846 130 QCURVE SMOOTH",
"823 130 OFFCURVE",
"789 156 OFFCURVE",
"766 200 OFFCURVE",
"756 257 OFFCURVE",
"756 289 QCURVE SMOOTH",
"756 1082 LINE",
"571 1082 LINE",
"571 612 LINE",
"302 612 LINE",
"302 1082 LINE",
"117 1082 LINE",
"117 0 LINE",
"302 0 LINE",
"302 461 LINE",
"571 461 LINE",
"571 461 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 34 values pushed */
0 6 2 3 2 6 3 112 0 3 0 0 5 3 0 97 4 1 2 2 24 75 0 5 5 1 92 7 1 1 1 23 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 38 values pushed */
0 6 2 3 2 6 3 112 0 3 0 0 5 3 0 97 4 1 2 2 24 75 0 1 1 23 75 0 5 5 7 92 0 7 7 30 7 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 11 values pushed */
39 23 37 17 17 17 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni050B;
unicode = 050B;
},
{
glyphname = uni050C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"756 -21 OFFCURVE",
"929 34 OFFCURVE",
"1060 145 OFFCURVE",
"1138 313 OFFCURVE",
"1140 425 QCURVE SMOOTH",
"1141 470 OFFCURVE",
"1131 561 OFFCURVE",
"1114 652 OFFCURVE",
"1094 742 OFFCURVE",
"1084 786 QCURVE",
"905 786 LINE",
"928 696 OFFCURVE",
"957 515 OFFCURVE",
"955 425 QCURVE SMOOTH",
"952 289 OFFCURVE",
"801 132 OFFCURVE",
"660 130 QCURVE SMOOTH",
"581 130 OFFCURVE",
"457 204 OFFCURVE",
"372 332 OFFCURVE",
"327 502 OFFCURVE",
"327 597 QCURVE SMOOTH",
"327 861 LINE SMOOTH",
"327 955 OFFCURVE",
"372 1124 OFFCURVE",
"457 1251 OFFCURVE",
"581 1325 OFFCURVE",
"660 1325 QCURVE SMOOTH",
"746 1325 OFFCURVE",
"889 1290 OFFCURVE",
"954 1257 QCURVE",
"1013 1389 LINE",
"946 1433 OFFCURVE",
"772 1477 OFFCURVE",
"660 1477 QCURVE SMOOTH",
"543 1477 OFFCURVE",
"352 1382 OFFCURVE",
"216 1215 OFFCURVE",
"142 990 OFFCURVE",
"142 859 QCURVE SMOOTH",
"142 597 LINE SMOOTH",
"142 466 OFFCURVE",
"216 240 OFFCURVE",
"352 74 OFFCURVE",
"543 -21 OFFCURVE",
"660 -21 QCURVE",
"660 -21 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
14 1 2 1 15 1 4 2 2 74 0 4 2 3 2 4 3 112 0 2 2 1 91 0 1 1 29 75 0 3 3 0 91 5 1 0 0 30 0 76 1 0 36 35 30 28 19 17 12 10 0 45 1 45 6 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni050C;
unicode = 050C;
},
{
glyphname = uni050D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"601 130 OFFCURVE",
"470 199 OFFCURVE",
"386 310 OFFCURVE",
"346 449 OFFCURVE",
"346 520 QCURVE SMOOTH",
"346 562 LINE SMOOTH",
"346 632 OFFCURVE",
"383 770 OFFCURVE",
"463 881 OFFCURVE",
"585 950 OFFCURVE",
"671 950 QCURVE SMOOTH",
"752 950 OFFCURVE",
"892 920 OFFCURVE",
"946 892 QCURVE",
"990 1036 LINE",
"937 1068 OFFCURVE",
"778 1102 OFFCURVE",
"671 1102 QCURVE SMOOTH",
"548 1102 OFFCURVE",
"358 1013 OFFCURVE",
"228 865 OFFCURVE",
"160 670 OFFCURVE",
"160 562 QCURVE SMOOTH",
"160 520 LINE SMOOTH",
"160 412 OFFCURVE",
"231 216 OFFCURVE",
"366 68 OFFCURVE",
"564 -21 OFFCURVE",
"692 -21 QCURVE SMOOTH",
"779 -21 OFFCURVE",
"928 20 OFFCURVE",
"1038 104 OFFCURVE",
"1102 232 OFFCURVE",
"1104 319 QCURVE SMOOTH",
"1104 373 OFFCURVE",
"1088 483 OFFCURVE",
"1077 537 QCURVE",
"899 537 LINE",
"913 483 OFFCURVE",
"919 372 OFFCURVE",
"919 319 QCURVE SMOOTH",
"917 229 OFFCURVE",
"813 131 OFFCURVE",
"692 130 QCURVE",
"692 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
29 1 4 3 30 1 1 4 2 74 0 1 4 0 4 1 0 112 0 4 4 3 91 0 3 3 31 75 5 1 0 0 2 91 0 2 2 30 2 76 1 0 34 32 27 25 16 14 7 6 0 43 1 43 6 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni050D;
unicode = 050D;
},
{
glyphname = uni050E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"437 345 LINE",
"441 250 OFFCURVE",
"488 111 OFFCURVE",
"573 21 OFFCURVE",
"694 -22 OFFCURVE",
"771 -21 QCURVE SMOOTH",
"853 -21 OFFCURVE",
"997 50 OFFCURVE",
"1105 189 OFFCURVE",
"1168 394 OFFCURVE",
"1170 529 QCURVE SMOOTH",
"1173 632 OFFCURVE",
"1131 834 OFFCURVE",
"1104 932 QCURVE",
"925 931 LINE",
"954 831 OFFCURVE",
"987 629 OFFCURVE",
"985 529 QCURVE SMOOTH",
"983 441 OFFCURVE",
"956 295 OFFCURVE",
"903 190 OFFCURVE",
"824 131 OFFCURVE",
"771 130 QCURVE SMOOTH",
"735 130 OFFCURVE",
"679 163 OFFCURVE",
"641 221 OFFCURVE",
"622 300 OFFCURVE",
"622 345 QCURVE SMOOTH",
"622 1304 LINE",
"1012 1304 LINE",
"1012 1456 LINE",
"76 1456 LINE",
"76 1304 LINE",
"437 1304 LINE",
"437 1304 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
0 4 0 3 0 4 3 112 2 1 0 0 1 89 0 1 1 22 75 0 3 3 5 91 0 5 5 30 5 76 39 23 37 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni050E;
unicode = 050E;
},
{
glyphname = uni050F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"410 345 LINE",
"418 154 OFFCURVE",
"592 -23 OFFCURVE",
"747 -21 QCURVE SMOOTH",
"825 -21 OFFCURVE",
"962 36 OFFCURVE",
"1066 149 OFFCURVE",
"1127 316 OFFCURVE",
"1129 426 QCURVE SMOOTH",
"1130 467 OFFCURVE",
"1119 549 OFFCURVE",
"1100 631 OFFCURVE",
"1075 712 OFFCURVE",
"1062 751 QCURVE",
"884 751 LINE",
"913 673 OFFCURVE",
"946 505 OFFCURVE",
"944 426 QCURVE SMOOTH",
"942 360 OFFCURVE",
"917 252 OFFCURVE",
"867 174 OFFCURVE",
"795 131 OFFCURVE",
"747 130 QCURVE SMOOTH",
"710 130 OFFCURVE",
"654 163 OFFCURVE",
"615 221 OFFCURVE",
"596 299 OFFCURVE",
"596 345 QCURVE SMOOTH",
"596 932 LINE",
"974 932 LINE",
"974 1082 LINE",
"73 1082 LINE",
"73 932 LINE",
"410 932 LINE",
"410 932 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
0 4 0 3 0 4 3 112 2 1 0 0 1 89 0 1 1 24 75 0 3 3 5 91 0 5 5 30 5 76 41 23 37 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni050F;
unicode = 050F;
},
{
glyphname = uni0510;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"811 666 LINE",
"811 818 LINE",
"629 818 LINE SMOOTH",
"549 818 OFFCURVE",
"431 854 OFFCURVE",
"354 919 OFFCURVE",
"316 1010 OFFCURVE",
"316 1066 QCURVE SMOOTH",
"316 1121 OFFCURVE",
"357 1215 OFFCURVE",
"438 1285 OFFCURVE",
"561 1325 OFFCURVE",
"643 1325 QCURVE SMOOTH",
"703 1325 OFFCURVE",
"807 1287 OFFCURVE",
"884 1221 OFFCURVE",
"929 1129 OFFCURVE",
"930 1075 QCURVE",
"1115 1075 LINE",
"1115 1168 OFFCURVE",
"1039 1317 OFFCURVE",
"910 1421 OFFCURVE",
"738 1477 OFFCURVE",
"643 1477 QCURVE SMOOTH",
"528 1477 OFFCURVE",
"339 1424 OFFCURVE",
"204 1319 OFFCURVE",
"130 1164 OFFCURVE",
"130 1062 QCURVE SMOOTH",
"130 1011 OFFCURVE",
"163 917 OFFCURVE",
"224 836 OFFCURVE",
"312 770 OFFCURVE",
"367 747 QCURVE",
"243 705 OFFCURVE",
"108 534 OFFCURVE",
"109 406 QCURVE SMOOTH",
"109 303 OFFCURVE",
"190 144 OFFCURVE",
"333 36 OFFCURVE",
"528 -20 OFFCURVE",
"643 -20 QCURVE SMOOTH",
"734 -20 OFFCURVE",
"910 29 OFFCURVE",
"1049 133 OFFCURVE",
"1135 293 OFFCURVE",
"1135 404 QCURVE",
"950 404 LINE",
"949 347 OFFCURVE",
"904 247 OFFCURVE",
"823 173 OFFCURVE",
"711 130 OFFCURVE",
"643 130 QCURVE SMOOTH",
"562 130 OFFCURVE",
"433 170 OFFCURVE",
"343 242 OFFCURVE",
"294 342 OFFCURVE",
"294 402 QCURVE SMOOTH",
"294 471 OFFCURVE",
"339 570 OFFCURVE",
"425 635 OFFCURVE",
"550 666 OFFCURVE",
"629 666 QCURVE",
"629 666 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
29 1 0 7 1 74 0 5 6 7 6 5 7 112 0 2 0 1 0 2 1 112 0 7 8 1 0 2 7 0 99 0 6 6 4 91 0 4 4 29 75 0 1 1 3 91 0 3 3 30 3 76 1 0 61 59 51 49 45 44 40 38 22 20 16 15 11 9 0 62 1 62 9 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0510;
unicode = 0510;
},
{
glyphname = uni2000;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2000;
unicode = 2000;
},
{
glyphname = uni2001;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2001;
unicode = 2001;
},
{
glyphname = uni2002;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2002;
unicode = 2002;
},
{
glyphname = uni2003;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2003;
unicode = 2003;
},
{
glyphname = uni2004;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2004;
unicode = 2004;
},
{
glyphname = uni2005;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2005;
unicode = 2005;
},
{
glyphname = uni2006;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2006;
unicode = 2006;
},
{
glyphname = uni2007;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2007;
unicode = 2007;
},
{
glyphname = uni2008;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2008;
unicode = 2008;
},
{
glyphname = uni2009;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2009;
unicode = 2009;
},
{
glyphname = uni200A;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni200A;
unicode = 200A;
},
{
glyphname = uni200B;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni200B;
unicode = 200B;
},
{
glyphname = endash;
layers = (
{
components = (
{
name = minus;
transform = "{1.29999, 0, 0, 1, -146, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = endash;
unicode = 2013;
},
{
glyphname = emdash;
layers = (
{
components = (
{
name = minus;
transform = "{1.29999, 0, 0, 1, -141, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = emdash;
unicode = 2014;
},
{
glyphname = underscoredbl;
layers = (
{
components = (
{
name = underscore;
transform = "{1, 0, 0, 1, 11, -255}";
},
{
name = underscore;
transform = "{1, 0, 0, 1, 11, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = underscoredbl;
unicode = 2017;
},
{
glyphname = quoteleft;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"492 1039 LINE",
"673 1039 LINE",
"673 1188 LINE SMOOTH",
"673 1274 OFFCURVE",
"720 1422 OFFCURVE",
"767 1493 QCURVE",
"666 1565 LINE",
"624 1529 OFFCURVE",
"560 1437 OFFCURVE",
"515 1336 OFFCURVE",
"492 1232 OFFCURVE",
"492 1185 QCURVE",
"492 1185 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
6 5 2 0 72 0 0 0 105 26 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = quoteleft;
unicode = 2018;
},
{
glyphname = quoteright;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"736 1558 LINE",
"555 1558 LINE",
"555 1408 LINE SMOOTH",
"555 1322 OFFCURVE",
"508 1174 OFFCURVE",
"461 1103 QCURVE",
"562 1031 LINE",
"604 1067 OFFCURVE",
"668 1159 OFFCURVE",
"713 1260 OFFCURVE",
"736 1364 OFFCURVE",
"736 1411 QCURVE",
"736 1411 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
6 5 2 0 71 0 0 0 105 26 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = quoteright;
unicode = 2019;
},
{
glyphname = quotesinglbase;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"723 225 LINE",
"538 225 LINE",
"538 74 LINE SMOOTH",
"538 -12 OFFCURVE",
"491 -160 OFFCURVE",
"444 -230 QCURVE",
"549 -303 LINE",
"591 -267 OFFCURVE",
"655 -174 OFFCURVE",
"700 -74 OFFCURVE",
"723 29 OFFCURVE",
"723 76 QCURVE",
"723 76 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
6 5 2 0 71 0 0 0 105 26 1 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = quotesinglbase;
unicode = 201A;
},
{
glyphname = quotereversed;
layers = (
{
components = (
{
name = quoteright;
transform = "{-1, 0, 0, 1, 1199, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = quotereversed;
unicode = 201B;
},
{
glyphname = quotedblleft;
layers = (
{
components = (
{
name = quoteleft;
transform = "{1, 0, 0, 1, -163, 0}";
},
{
name = quoteleft;
transform = "{1, 0, 0, 1, 162, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = quotedblleft;
unicode = 201C;
},
{
glyphname = quotedblright;
layers = (
{
components = (
{
name = quoteright;
transform = "{1, 0, 0, 1, -160, 0}";
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 172, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = quotedblright;
unicode = 201D;
},
{
glyphname = quotedblbase;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"582 223 LINE",
"397 223 LINE",
"397 72 LINE SMOOTH",
"397 -14 OFFCURVE",
"350 -162 OFFCURVE",
"303 -232 QCURVE",
"408 -305 LINE",
"450 -269 OFFCURVE",
"514 -176 OFFCURVE",
"559 -76 OFFCURVE",
"582 28 OFFCURVE",
"582 75 QCURVE",
"582 75 LINE"
);
},
{
closed = 1;
nodes = (
"872 223 LINE",
"687 223 LINE",
"687 72 LINE SMOOTH",
"687 -14 OFFCURVE",
"640 -162 OFFCURVE",
"593 -232 QCURVE",
"698 -305 LINE",
"740 -269 OFFCURVE",
"804 -176 OFFCURVE",
"849 -76 OFFCURVE",
"872 28 OFFCURVE",
"872 75 QCURVE",
"872 75 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 17 values pushed */
18 17 6 5 4 0 71 1 1 0 0 105 27 26 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = quotedblbase;
unicode = 201E;
},
{
glyphname = dagger;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1109 1082 LINE",
"704 1082 LINE",
"704 1456 LINE",
"519 1456 LINE",
"519 1082 LINE",
"119 1082 LINE",
"119 929 LINE",
"519 929 LINE",
"519 0 LINE",
"704 0 LINE",
"704 929 LINE",
"1109 929 LINE",
"1109 929 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 32 values pushed */
0 4 4 60 75 2 1 0 0 3 89 5 1 3 3 63 75 0 1 1 61 1 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dagger;
unicode = 2020;
},
{
glyphname = daggerdbl;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1110 151 LINE",
"703 151 LINE",
"703 929 LINE",
"1110 929 LINE",
"1110 1082 LINE",
"703 1082 LINE",
"703 1456 LINE",
"518 1456 LINE",
"518 1082 LINE",
"121 1082 LINE",
"121 929 LINE",
"518 929 LINE",
"518 151 LINE",
"121 151 LINE",
"121 0 LINE",
"518 0 LINE",
"518 -416 LINE",
"703 -416 LINE",
"703 0 LINE",
"1110 0 LINE",
"1110 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
0 6 6 60 75 8 1 4 4 5 89 7 1 5 5 63 75 9 1 3 3 0 89 2 1 0 0 61 75 0 1 1 65 1 76 19 18 17 17 17 17 17 17 17 17 16 10 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = daggerdbl;
unicode = 2021;
},
{
glyphname = bullet;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"410 732 LINE SMOOTH",
"410 689 OFFCURVE",
"439 617 OFFCURVE",
"492 564 OFFCURVE",
"567 535 OFFCURVE",
"614 535 QCURVE SMOOTH",
"661 535 OFFCURVE",
"736 564 OFFCURVE",
"789 617 OFFCURVE",
"817 689 OFFCURVE",
"817 732 QCURVE SMOOTH",
"817 790 LINE SMOOTH",
"817 833 OFFCURVE",
"789 906 OFFCURVE",
"736 958 OFFCURVE",
"660 988 OFFCURVE",
"613 988 QCURVE SMOOTH",
"566 988 OFFCURVE",
"491 958 OFFCURVE",
"439 906 OFFCURVE",
"410 833 OFFCURVE",
"410 790 QCURVE",
"410 790 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 0 1 1 0 87 0 0 0 1 91 0 1 0 1 79 41 36 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = bullet;
unicode = 2022;
},
{
glyphname = uni2025;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -148, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 294, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2025;
unicode = 2025;
},
{
glyphname = ellipsis;
layers = (
{
components = (
{
name = period;
transform = "{1, 0, 0, 1, -231, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 156, 0}";
},
{
name = period;
transform = "{1, 0, 0, 1, 530, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ellipsis;
unicode = 2026;
},
{
glyphname = perthousand;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"342 259 LINE SMOOTH",
"342 203 OFFCURVE",
"373 101 OFFCURVE",
"435 24 OFFCURVE",
"527 -21 OFFCURVE",
"588 -21 QCURVE SMOOTH",
"645 -21 OFFCURVE",
"732 20 OFFCURVE",
"763 55 QCURVE",
"794 20 OFFCURVE",
"883 -21 OFFCURVE",
"941 -21 QCURVE SMOOTH",
"1001 -21 OFFCURVE",
"1092 24 OFFCURVE",
"1153 101 OFFCURVE",
"1184 203 OFFCURVE",
"1184 259 QCURVE SMOOTH",
"1184 303 LINE SMOOTH",
"1184 359 OFFCURVE",
"1153 460 OFFCURVE",
"1091 537 OFFCURVE",
"1000 583 OFFCURVE",
"939 583 QCURVE SMOOTH",
"881 583 OFFCURVE",
"794 541 OFFCURVE",
"763 506 QCURVE",
"732 541 OFFCURVE",
"644 583 OFFCURVE",
"586 583 QCURVE SMOOTH",
"526 583 OFFCURVE",
"435 537 OFFCURVE",
"373 460 OFFCURVE",
"342 359 OFFCURVE",
"342 303 QCURVE",
"342 303 LINE"
);
},
{
closed = 1;
nodes = (
"54 1152 LINE SMOOTH",
"54 1096 OFFCURVE",
"86 995 OFFCURVE",
"148 919 OFFCURVE",
"240 873 OFFCURVE",
"300 873 QCURVE SMOOTH",
"360 873 OFFCURVE",
"450 919 OFFCURVE",
"511 995 OFFCURVE",
"543 1096 OFFCURVE",
"543 1152 QCURVE SMOOTH",
"543 1196 LINE SMOOTH",
"543 1252 OFFCURVE",
"512 1354 OFFCURVE",
"450 1431 OFFCURVE",
"359 1477 OFFCURVE",
"298 1477 QCURVE SMOOTH",
"238 1477 OFFCURVE",
"147 1431 OFFCURVE",
"85 1354 OFFCURVE",
"54 1252 OFFCURVE",
"54 1196 QCURVE",
"54 1196 LINE"
);
},
{
closed = 1;
nodes = (
"959 1088 LINE",
"891 1172 LINE",
"107 531 LINE",
"175 447 LINE",
"175 447 LINE"
);
},
{
closed = 1;
nodes = (
"833 303 LINE SMOOTH",
"833 333 OFFCURVE",
"844 390 OFFCURVE",
"869 435 OFFCURVE",
"909 463 OFFCURVE",
"939 463 QCURVE SMOOTH",
"968 463 OFFCURVE",
"1009 435 OFFCURVE",
"1034 390 OFFCURVE",
"1045 333 OFFCURVE",
"1045 303 QCURVE SMOOTH",
"1045 259 LINE SMOOTH",
"1045 229 OFFCURVE",
"1034 171 OFFCURVE",
"1010 126 OFFCURVE",
"970 99 OFFCURVE",
"941 99 QCURVE SMOOTH",
"911 99 OFFCURVE",
"870 126 OFFCURVE",
"844 171 OFFCURVE",
"833 229 OFFCURVE",
"833 259 QCURVE",
"833 259 LINE"
);
},
{
closed = 1;
nodes = (
"481 303 LINE SMOOTH",
"481 333 OFFCURVE",
"492 390 OFFCURVE",
"517 435 OFFCURVE",
"557 463 OFFCURVE",
"586 463 QCURVE SMOOTH",
"616 463 OFFCURVE",
"656 435 OFFCURVE",
"681 390 OFFCURVE",
"692 333 OFFCURVE",
"692 303 QCURVE SMOOTH",
"692 259 LINE SMOOTH",
"692 229 OFFCURVE",
"681 171 OFFCURVE",
"657 126 OFFCURVE",
"617 99 OFFCURVE",
"588 99 QCURVE SMOOTH",
"558 99 OFFCURVE",
"517 126 OFFCURVE",
"492 171 OFFCURVE",
"481 229 OFFCURVE",
"481 259 QCURVE",
"481 259 LINE"
);
},
{
closed = 1;
nodes = (
"193 1196 LINE SMOOTH",
"193 1226 OFFCURVE",
"204 1283 OFFCURVE",
"229 1328 OFFCURVE",
"269 1356 OFFCURVE",
"298 1356 QCURVE SMOOTH",
"328 1356 OFFCURVE",
"368 1328 OFFCURVE",
"393 1283 OFFCURVE",
"404 1226 OFFCURVE",
"404 1196 QCURVE SMOOTH",
"404 1152 LINE SMOOTH",
"404 1122 OFFCURVE",
"393 1065 OFFCURVE",
"368 1020 OFFCURVE",
"328 993 OFFCURVE",
"300 993 QCURVE SMOOTH",
"270 993 OFFCURVE",
"230 1020 OFFCURVE",
"204 1065 OFFCURVE",
"193 1122 OFFCURVE",
"193 1152 QCURVE",
"193 1152 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 75 values pushed */
59 58 2 10 11 57 8 2 7 0 25 1 2 6 3 74 0 10 0 5 0 10 5 99 1 1 0 9 1 7 6 0 7 99 0 11 11 4 91 0 4 4 68 75 8 1 6 6 2 91 3 1 2 2 69 2 76 121 119 110 108 99 97 41 41 45 41 41 36 41 36 36 12 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = perthousand;
unicode = 2030;
},
{
glyphname = guilsinglleft;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"832 949 LINE",
"691 949 LINE",
"396 560 LINE",
"396 541 LINE",
"691 153 LINE",
"832 153 LINE",
"574 550 LINE",
"574 550 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
3 1 0 1 1 74 0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 19 17 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = guilsinglleft;
unicode = 2039;
},
{
glyphname = guilsinglright;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"396 949 LINE",
"654 550 LINE",
"396 152 LINE",
"538 152 LINE",
"832 541 LINE",
"832 560 LINE",
"538 949 LINE",
"538 949 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 35 values pushed */
5 1 2 0 1 1 74 2 1 1 0 0 1 85 2 1 1 1 0 89 0 0 1 0 77 0 0 0 6 0 6 19 3 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = guilsinglright;
unicode = 203A;
},
{
glyphname = fraction;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"926 1167 LINE",
"812 1233 LINE",
"299 279 LINE",
"412 213 LINE",
"412 213 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
2 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = fraction;
unicode = 2044;
},
{
glyphname = uni2074;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"897 1475 LINE",
"728 1475 LINE",
"271 847 LINE",
"274 753 LINE",
"734 753 LINE",
"734 568 LINE",
"897 568 LINE",
"897 753 LINE",
"1048 753 LINE",
"1048 879 LINE",
"897 879 LINE",
"897 879 LINE"
);
},
{
closed = 1;
nodes = (
"712 1227 LINE",
"734 1271 LINE",
"734 879 LINE",
"452 879 LINE",
"452 879 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
13 1 0 4 8 1 1 0 2 74 5 1 0 3 1 1 2 0 1 97 0 2 2 4 89 0 4 4 60 2 76 17 18 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni2074;
unicode = 2074;
},
{
glyphname = nsuperior;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"331 1451 LINE",
"331 651 LINE",
"501 651 LINE",
"501 1213 LINE",
"521 1262 OFFCURVE",
"596 1322 OFFCURVE",
"655 1322 QCURVE SMOOTH",
"722 1322 OFFCURVE",
"799 1233 OFFCURVE",
"799 1127 QCURVE SMOOTH",
"799 651 LINE",
"969 651 LINE",
"969 1159 LINE SMOOTH",
"969 1239 OFFCURVE",
"933 1355 OFFCURVE",
"865 1430 OFFCURVE",
"770 1466 OFFCURVE",
"710 1466 QCURVE SMOOTH",
"636 1465 OFFCURVE",
"525 1392 OFFCURVE",
"489 1328 QCURVE",
"460 1451 LINE",
"460 1451 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
35 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 10 values pushed */
1 1 2 0 18 1 1 2 2 74 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 10 values pushed */
1 1 2 4 18 1 1 2 2 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
35 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 26 values pushed */
0 2 2 0 91 5 4 2 0 0 60 75 3 1 1 1 0 91 5 4 2 0 0 60 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 23 values pushed */
0 2 2 0 91 0 0 0 60 75 3 1 1 1 4 89 5 1 4 4 60 1 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 13 values pushed */
0 0 0 21 0 21 19 35 21 35 6 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = nsuperior;
unicode = 207F;
},
{
glyphname = lira;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"802 593 LINE",
"457 593 LINE",
"453 731 LINE",
"802 731 LINE",
"802 854 LINE",
"449 854 LINE",
"443 1039 LINE SMOOTH",
"443 1106 OFFCURVE",
"480 1213 OFFCURVE",
"544 1286 OFFCURVE",
"633 1325 OFFCURVE",
"684 1325 QCURVE SMOOTH",
"732 1325 OFFCURVE",
"819 1298 OFFCURVE",
"886 1241 OFFCURVE",
"926 1152 OFFCURVE",
"926 1089 QCURVE",
"1111 1089 LINE",
"1111 1176 OFFCURVE",
"1055 1318 OFFCURVE",
"950 1420 OFFCURVE",
"798 1476 OFFCURVE",
"702 1476 QCURVE SMOOTH",
"606 1476 OFFCURVE",
"443 1416 OFFCURVE",
"324 1303 OFFCURVE",
"258 1141 OFFCURVE",
"258 1039 QCURVE SMOOTH",
"264 854 LINE",
"105 854 LINE",
"105 731 LINE",
"268 731 LINE",
"273 593 LINE",
"105 593 LINE",
"105 471 LINE",
"277 471 LINE",
"280 400 LINE SMOOTH",
"280 368 OFFCURVE",
"271 287 OFFCURVE",
"249 214 OFFCURVE",
"213 158 OFFCURVE",
"186 151 QCURVE",
"111 151 LINE",
"111 0 LINE",
"1141 0 LINE",
"1142 151 LINE",
"404 151 LINE",
"435 199 OFFCURVE",
"464 331 OFFCURVE",
"464 400 QCURVE SMOOTH",
"461 471 LINE",
"802 471 LINE",
"802 471 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 72 values pushed */
0 9 10 7 10 9 7 112 11 1 7 12 1 6 5 7 6 97 13 1 5 4 1 0 1 5 0 97 0 10 10 8 91 0 8 8 68 75 3 1 1 1 2 89 0 2 2 61 2 76 51 50 49 48 47 46 41 39 35 34 37 17 17 17 22 17 17 20 16 14 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = lira;
unicode = 20A4;
},
{
glyphname = peseta;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1182 1082 LINE",
"1006 1082 LINE",
"1006 1344 LINE",
"821 1344 LINE",
"821 1082 LINE",
"732 1082 LINE",
"724 1164 OFFCURVE",
"670 1301 OFFCURVE",
"582 1400 OFFCURVE",
"459 1456 OFFCURVE",
"381 1456 QCURVE SMOOTH",
"127 1456 LINE",
"127 0 LINE",
"312 0 LINE",
"312 565 LINE",
"381 565 LINE SMOOTH",
"459 565 OFFCURVE",
"582 620 OFFCURVE",
"671 719 OFFCURVE",
"724 857 OFFCURVE",
"732 939 QCURVE",
"821 939 LINE",
"821 296 LINE SMOOTH",
"821 213 OFFCURVE",
"856 93 OFFCURVE",
"919 16 OFFCURVE",
"1005 -20 OFFCURVE",
"1057 -20 QCURVE SMOOTH",
"1099 -20 OFFCURVE",
"1180 2 OFFCURVE",
"1203 19 QCURVE",
"1178 151 LINE",
"1166 147 OFFCURVE",
"1123 137 OFFCURVE",
"1103 137 QCURVE SMOOTH",
"1082 137 OFFCURVE",
"1046 154 OFFCURVE",
"1021 191 OFFCURVE",
"1006 251 OFFCURVE",
"1006 295 QCURVE SMOOTH",
"1006 939 LINE",
"1182 939 LINE",
"1182 939 LINE"
);
},
{
closed = 1;
nodes = (
"312 1304 LINE",
"381 1304 LINE SMOOTH",
"426 1304 OFFCURVE",
"491 1254 OFFCURVE",
"531 1171 OFFCURVE",
"550 1064 OFFCURVE",
"550 1008 QCURVE SMOOTH",
"550 952 OFFCURVE",
"531 848 OFFCURVE",
"490 766 OFFCURVE",
"426 716 OFFCURVE",
"381 716 QCURVE SMOOTH",
"312 716 LINE",
"312 716 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
PUSHB[ ]\011/* 6 values pushed */
11 1 2 1 1 74 
ELSE[ ]\011/* Else */
PUSHB[ ]\011/* 6 values pushed */
11 1 5 1 1 74 
EIF[ ]\011/* EndIf */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 50 values pushed */
0 8 6 11 6 8 11 112 0 10 0 4 1 10 4 99 0 11 11 6 91 0 6 6 60 75 3 1 0 0 7 89 9 1 7 7 63 75 0 1 1 2 91 5 1 2 2 69 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 54 values pushed */
0 8 6 11 6 8 11 112 0 10 0 4 1 10 4 99 0 11 11 6 91 0 6 6 60 75 3 1 0 0 7 89 9 1 7 7 63 75 0 5 5 61 75 0 1 1 2 91 0 2 2 69 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 18 values pushed */
54 52 44 42 41 40 17 20 33 17 36 21 37 37 16 12 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = peseta;
unicode = 20A7;
},
{
glyphname = Euro;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"878 665 LINE",
"492 665 LINE",
"492 803 LINE",
"878 803 LINE",
"878 926 LINE",
"492 926 LINE",
"495 1026 OFFCURVE",
"546 1176 OFFCURVE",
"636 1275 OFFCURVE",
"762 1325 OFFCURVE",
"840 1325 QCURVE SMOOTH",
"900 1325 OFFCURVE",
"1011 1306 OFFCURVE",
"1063 1290 QCURVE",
"1081 1445 LINE",
"1020 1459 OFFCURVE",
"903 1476 OFFCURVE",
"840 1476 QCURVE SMOOTH",
"724 1476 OFFCURVE",
"532 1406 OFFCURVE",
"392 1268 OFFCURVE",
"311 1062 OFFCURVE",
"306 926 QCURVE",
"127 926 LINE",
"127 803 LINE",
"306 803 LINE",
"306 665 LINE",
"127 665 LINE",
"127 543 LINE",
"306 543 LINE",
"309 404 OFFCURVE",
"389 193 OFFCURVE",
"530 51 OFFCURVE",
"725 -21 OFFCURVE",
"842 -21 QCURVE SMOOTH",
"905 -21 OFFCURVE",
"1025 -5 OFFCURVE",
"1081 10 QCURVE",
"1063 164 LINE",
"1011 147 OFFCURVE",
"901 130 OFFCURVE",
"842 130 QCURVE SMOOTH",
"763 130 OFFCURVE",
"635 182 OFFCURVE",
"545 285 OFFCURVE",
"494 440 OFFCURVE",
"492 543 QCURVE",
"878 543 LINE",
"878 543 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 77 values pushed */
33 1 8 7 34 1 6 8 9 1 1 0 10 1 2 1 4 74 9 1 6 10 1 5 4 6 5 97 11 1 4 3 1 0 1 4 0 97 0 8 8 7 91 0 7 7 68 75 0 1 1 2 91 0 2 2 69 2 76 47 46 45 44 43 42 37 36 17 17 17 20 37 36 16 12 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Euro;
unicode = 20AC;
},
{
glyphname = uni2105;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"450 1054 LINE",
"450 1030 OFFCURVE",
"435 982 OFFCURVE",
"406 944 OFFCURVE",
"363 920 OFFCURVE",
"333 920 QCURVE SMOOTH",
"302 920 OFFCURVE",
"257 951 OFFCURVE",
"227 1001 OFFCURVE",
"212 1065 OFFCURVE",
"212 1099 QCURVE SMOOTH",
"212 1176 LINE SMOOTH",
"212 1210 OFFCURVE",
"227 1276 OFFCURVE",
"256 1326 OFFCURVE",
"301 1357 OFFCURVE",
"331 1357 QCURVE SMOOTH",
"361 1357 OFFCURVE",
"405 1335 OFFCURVE",
"435 1297 OFFCURVE",
"450 1247 OFFCURVE",
"450 1220 QCURVE",
"588 1220 LINE",
"588 1273 OFFCURVE",
"552 1366 OFFCURVE",
"486 1436 OFFCURVE",
"391 1477 OFFCURVE",
"331 1477 QCURVE SMOOTH",
"270 1477 OFFCURVE",
"174 1429 OFFCURVE",
"108 1346 OFFCURVE",
"73 1237 OFFCURVE",
"73 1176 QCURVE SMOOTH",
"73 1099 LINE SMOOTH",
"73 1039 OFFCURVE",
"108 930 OFFCURVE",
"175 848 OFFCURVE",
"272 800 OFFCURVE",
"333 800 QCURVE SMOOTH",
"392 800 OFFCURVE",
"487 840 OFFCURVE",
"553 909 OFFCURVE",
"588 1002 OFFCURVE",
"588 1054 QCURVE",
"588 1054 LINE"
);
},
{
closed = 1;
nodes = (
"654 279 LINE SMOOTH",
"654 218 OFFCURVE",
"689 109 OFFCURVE",
"756 27 OFFCURVE",
"853 -21 OFFCURVE",
"914 -21 QCURVE SMOOTH",
"975 -21 OFFCURVE",
"1071 27 OFFCURVE",
"1137 109 OFFCURVE",
"1172 218 OFFCURVE",
"1172 279 QCURVE SMOOTH",
"1172 357 LINE SMOOTH",
"1172 418 OFFCURVE",
"1137 527 OFFCURVE",
"1070 609 OFFCURVE",
"974 657 OFFCURVE",
"913 657 QCURVE SMOOTH",
"852 657 OFFCURVE",
"756 609 OFFCURVE",
"689 527 OFFCURVE",
"654 418 OFFCURVE",
"654 357 QCURVE",
"654 357 LINE"
);
},
{
closed = 1;
nodes = (
"793 357 LINE SMOOTH",
"793 391 OFFCURVE",
"807 456 OFFCURVE",
"837 507 OFFCURVE",
"882 537 OFFCURVE",
"913 537 QCURVE SMOOTH",
"944 537 OFFCURVE",
"989 507 OFFCURVE",
"1019 456 OFFCURVE",
"1033 391 OFFCURVE",
"1033 357 QCURVE SMOOTH",
"1033 279 LINE SMOOTH",
"1033 244 OFFCURVE",
"1019 180 OFFCURVE",
"989 129 OFFCURVE",
"944 99 OFFCURVE",
"914 99 QCURVE SMOOTH",
"883 99 OFFCURVE",
"837 129 OFFCURVE",
"807 180 OFFCURVE",
"793 244 OFFCURVE",
"793 279 QCURVE",
"793 279 LINE"
);
},
{
closed = 1;
nodes = (
"951 1167 LINE",
"837 1233 LINE",
"324 279 LINE",
"437 213 LINE",
"437 213 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
90 88 81 70 59 48 15 4 4 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni2105;
unicode = 2105;
},
{
glyphname = uni2113;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"852 136 LINE",
"784 136 OFFCURVE",
"694 177 OFFCURVE",
"638 254 OFFCURVE",
"615 363 OFFCURVE",
"615 431 QCURVE SMOOTH",
"615 518 LINE",
"711 570 OFFCURVE",
"858 715 OFFCURVE",
"959 878 OFFCURVE",
"1011 1047 OFFCURVE",
"1011 1124 QCURVE SMOOTH",
"1011 1165 LINE SMOOTH",
"1011 1237 OFFCURVE",
"972 1353 OFFCURVE",
"900 1436 OFFCURVE",
"800 1481 OFFCURVE",
"740 1481 QCURVE SMOOTH",
"666 1481 OFFCURVE",
"551 1427 OFFCURVE",
"471 1328 OFFCURVE",
"430 1188 OFFCURVE",
"430 1102 QCURVE SMOOTH",
"430 623 LINE",
"383 610 OFFCURVE",
"279 596 OFFCURVE",
"221 596 QCURVE",
"221 420 LINE",
"277 420 OFFCURVE",
"381 433 OFFCURVE",
"430 445 QCURVE",
"430 431 LINE SMOOTH",
"430 330 OFFCURVE",
"481 164 OFFCURVE",
"586 45 OFFCURVE",
"744 -21 OFFCURVE",
"852 -21 QCURVE",
"852 -21 LINE"
);
},
{
closed = 1;
nodes = (
"615 1102 LINE SMOOTH",
"615 1208 OFFCURVE",
"674 1323 OFFCURVE",
"740 1323 QCURVE SMOOTH",
"781 1323 OFFCURVE",
"826 1243 OFFCURVE",
"826 1165 QCURVE SMOOTH",
"826 1122 LINE SMOOTH",
"826 1066 OFFCURVE",
"800 953 OFFCURVE",
"748 846 OFFCURVE",
"669 750 OFFCURVE",
"615 711 QCURVE",
"615 711 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
45 37 18 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni2113;
unicode = 2113;
},
{
glyphname = uni2116;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"739 1456 LINE",
"563 1456 LINE",
"564 545 LINE",
"296 1456 LINE",
"121 1456 LINE",
"121 0 LINE",
"297 0 LINE",
"296 915 LINE",
"563 0 LINE",
"739 0 LINE",
"739 0 LINE"
);
},
{
closed = 1;
nodes = (
"822 1069 LINE SMOOTH",
"822 1029 OFFCURVE",
"843 958 OFFCURVE",
"884 905 OFFCURVE",
"943 874 OFFCURVE",
"982 874 QCURVE SMOOTH",
"1021 874 OFFCURVE",
"1081 905 OFFCURVE",
"1121 958 OFFCURVE",
"1142 1029 OFFCURVE",
"1142 1069 QCURVE SMOOTH",
"1142 1275 LINE SMOOTH",
"1142 1315 OFFCURVE",
"1121 1387 OFFCURVE",
"1081 1441 OFFCURVE",
"1020 1472 OFFCURVE",
"981 1472 QCURVE SMOOTH",
"943 1472 OFFCURVE",
"883 1441 OFFCURVE",
"843 1387 OFFCURVE",
"822 1315 OFFCURVE",
"822 1275 QCURVE",
"822 1275 LINE"
);
},
{
closed = 1;
nodes = (
"923 1266 LINE SMOOTH",
"923 1288 OFFCURVE",
"928 1328 OFFCURVE",
"940 1357 OFFCURVE",
"963 1374 OFFCURVE",
"981 1374 QCURVE SMOOTH",
"1000 1374 OFFCURVE",
"1023 1357 OFFCURVE",
"1036 1328 OFFCURVE",
"1041 1288 OFFCURVE",
"1041 1266 QCURVE SMOOTH",
"1041 1078 LINE SMOOTH",
"1041 1055 OFFCURVE",
"1037 1016 OFFCURVE",
"1024 987 OFFCURVE",
"1001 970 OFFCURVE",
"982 970 QCURVE SMOOTH",
"963 970 OFFCURVE",
"940 987 OFFCURVE",
"927 1016 OFFCURVE",
"923 1055 OFFCURVE",
"923 1078 QCURVE",
"923 1078 LINE"
);
},
{
closed = 1;
nodes = (
"1140 806 LINE",
"833 806 LINE",
"833 711 LINE",
"1140 711 LINE",
"1140 711 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
56 54 47 36 25 14 5 0 4 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni2116;
unicode = 2116;
},
{
glyphname = trademark;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"989 919 LINE",
"1079 919 LINE",
"1079 1456 LINE",
"967 1456 LINE",
"823 1057 LINE",
"680 1456 LINE",
"568 1456 LINE",
"568 919 LINE",
"658 919 LINE",
"658 1312 LINE",
"797 919 LINE",
"849 919 LINE",
"989 1313 LINE",
"989 1313 LINE"
);
},
{
closed = 1;
nodes = (
"489 1456 LINE",
"103 1456 LINE",
"103 1375 LINE",
"250 1375 LINE",
"250 919 LINE",
"341 919 LINE",
"341 1375 LINE",
"489 1375 LINE",
"489 1375 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
19 15 6 1 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = trademark;
unicode = 2122;
},
{
glyphname = estimated;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1045 198 LINE",
"956 135 OFFCURVE",
"771 75 OFFCURVE",
"677 76 QCURVE SMOOTH",
"599 76 OFFCURVE",
"459 135 OFFCURVE",
"404 186 QCURVE",
"404 514 LINE",
"1172 514 LINE",
"1172 561 LINE SMOOTH",
"1172 676 OFFCURVE",
"1094 874 OFFCURVE",
"961 1020 OFFCURVE",
"780 1102 OFFCURVE",
"677 1102 QCURVE SMOOTH",
"611 1102 OFFCURVE",
"482 1061 OFFCURVE",
"365 987 OFFCURVE",
"266 884 OFFCURVE",
"194 760 OFFCURVE",
"153 617 OFFCURVE",
"153 541 QCURVE SMOOTH",
"153 426 OFFCURVE",
"235 222 OFFCURVE",
"376 69 OFFCURVE",
"567 -20 OFFCURVE",
"677 -20 QCURVE SMOOTH",
"776 -20 OFFCURVE",
"962 41 OFFCURVE",
"1047 94 QCURVE",
"1047 94 LINE"
);
},
{
closed = 1;
nodes = (
"754 1008 OFFCURVE",
"890 946 OFFCURVE",
"944 895 QCURVE",
"944 609 LINE",
"404 609 LINE",
"404 886 LINE",
"461 942 OFFCURVE",
"601 1008 OFFCURVE",
"677 1008 QCURVE",
"677 1008 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
34 30 14 2 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = estimated;
unicode = 212E;
},
{
glyphname = oneeighth;
layers = (
{
components = (
{
name = one.sup;
transform = "{0, 0, 0, 0, -232, 744}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, -8, 0}";
},
{
name = eight.sup;
transform = "{0, 0, 0, 0, 390, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = oneeighth;
unicode = 215B;
},
{
glyphname = threeeighths;
layers = (
{
components = (
{
name = three.sup;
transform = "{0, 0, 0, 0, -230, 746}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 31, -9}";
},
{
name = eight.sup;
transform = "{0, 0, 0, 0, 398, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = threeeighths;
unicode = 215C;
},
{
glyphname = fiveeighths;
layers = (
{
components = (
{
name = five.sup;
transform = "{0, 0, 0, 0, -252, 747}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, 8, 0}";
},
{
name = eight.sup;
transform = "{0, 0, 0, 0, 378, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = fiveeighths;
unicode = 215D;
},
{
glyphname = seveneighths;
layers = (
{
components = (
{
name = seven.sup;
transform = "{0, 0, 0, 0, -209, 747}";
},
{
name = fraction;
transform = "{1, 0, 0, 1, -45, 0}";
},
{
name = eight.sup;
transform = "{0, 0, 0, 0, 372, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = seveneighths;
unicode = 215E;
},
{
glyphname = partialdiff;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"482 1022 OFFCURVE",
"309 947 OFFCURVE",
"189 815 OFFCURVE",
"126 635 OFFCURVE",
"126 530 QCURVE SMOOTH",
"126 507 LINE SMOOTH",
"126 394 OFFCURVE",
"191 201 OFFCURVE",
"315 60 OFFCURVE",
"494 -21 OFFCURVE",
"608 -21 QCURVE SMOOTH",
"724 -21 OFFCURVE",
"905 80 OFFCURVE",
"1029 256 OFFCURVE",
"1094 494 OFFCURVE",
"1094 630 QCURVE SMOOTH",
"1094 689 LINE SMOOTH",
"1094 869 OFFCURVE",
"1029 1172 OFFCURVE",
"894 1392 OFFCURVE",
"687 1516 OFFCURVE",
"544 1516 QCURVE SMOOTH",
"486 1516 OFFCURVE",
"395 1505 OFFCURVE",
"320 1485 OFFCURVE",
"257 1460 OFFCURVE",
"228 1447 QCURVE",
"244 1296 LINE",
"315 1323 OFFCURVE",
"450 1355 OFFCURVE",
"528 1355 QCURVE SMOOTH",
"602 1355 OFFCURVE",
"732 1284 OFFCURVE",
"832 1158 OFFCURVE",
"898 982 OFFCURVE",
"909 877 QCURVE",
"849 946 OFFCURVE",
"683 1022 OFFCURVE",
"592 1022 QCURVE",
"592 1022 LINE"
);
},
{
closed = 1;
nodes = (
"684 870 OFFCURVE",
"791 825 OFFCURVE",
"863 760 OFFCURVE",
"903 687 OFFCURVE",
"909 659 QCURVE",
"909 593 LINE SMOOTH",
"909 497 OFFCURVE",
"874 329 OFFCURVE",
"800 203 OFFCURVE",
"687 130 OFFCURVE",
"608 130 QCURVE SMOOTH",
"532 130 OFFCURVE",
"420 191 OFFCURVE",
"347 294 OFFCURVE",
"311 431 OFFCURVE",
"311 507 QCURVE SMOOTH",
"311 530 LINE SMOOTH",
"311 598 OFFCURVE",
"347 721 OFFCURVE",
"421 815 OFFCURVE",
"533 870 OFFCURVE",
"610 870 QCURVE",
"610 870 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
49 39 27 16 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = partialdiff;
unicode = 2202;
},
{
glyphname = product;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1061 1456 LINE",
"167 1456 LINE",
"167 -213 LINE",
"352 -213 LINE",
"352 1304 LINE",
"876 1304 LINE",
"876 -213 LINE",
"1061 -213 LINE",
"1061 -213 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
6 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = product;
unicode = 220F;
},
{
glyphname = summation;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"856 602 LINE",
"275 1304 LINE",
"1100 1304 LINE",
"1100 1456 LINE",
"51 1456 LINE",
"51 1312 LINE",
"659 590 LINE",
"51 -126 LINE",
"51 -269 LINE",
"1176 -269 LINE",
"1176 -117 LINE",
"276 -117 LINE",
"856 577 LINE",
"856 577 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
8 3 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = summation;
unicode = 2211;
},
{
glyphname = minus;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1004 802 LINE",
"169 802 LINE",
"169 651 LINE",
"1004 651 LINE",
"1004 651 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 17 16 2 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = minus;
unicode = 2212;
},
{
glyphname = radical;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"372 782 LINE",
"57 782 LINE",
"57 628 LINE",
"242 628 LINE",
"487 0 LINE",
"628 0 LINE",
"1170 1456 LINE",
"981 1456 LINE",
"583 337 LINE",
"558 232 LINE",
"536 337 LINE",
"536 337 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
5 3 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = radical;
unicode = 221A;
},
{
glyphname = infinity;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1178 628 LINE SMOOTH",
"1178 698 OFFCURVE",
"1142 829 OFFCURVE",
"1071 929 OFFCURVE",
"965 989 OFFCURVE",
"895 989 QCURVE SMOOTH",
"842 989 OFFCURVE",
"756 945 OFFCURVE",
"687 875 OFFCURVE",
"634 789 OFFCURVE",
"615 747 QCURVE",
"596 789 OFFCURVE",
"544 875 OFFCURVE",
"475 945 OFFCURVE",
"388 989 OFFCURVE",
"336 989 QCURVE SMOOTH",
"265 989 OFFCURVE",
"159 929 OFFCURVE",
"89 829 OFFCURVE",
"53 698 OFFCURVE",
"53 628 QCURVE SMOOTH",
"53 586 LINE SMOOTH",
"53 515 OFFCURVE",
"89 384 OFFCURVE",
"160 284 OFFCURVE",
"266 224 OFFCURVE",
"337 224 QCURVE SMOOTH",
"389 224 OFFCURVE",
"475 268 OFFCURVE",
"544 338 OFFCURVE",
"596 424 OFFCURVE",
"615 466 QCURVE",
"634 424 OFFCURVE",
"687 338 OFFCURVE",
"756 268 OFFCURVE",
"842 224 OFFCURVE",
"894 224 QCURVE SMOOTH",
"964 224 OFFCURVE",
"1071 284 OFFCURVE",
"1142 384 OFFCURVE",
"1178 515 OFFCURVE",
"1178 586 QCURVE",
"1178 586 LINE"
);
},
{
closed = 1;
nodes = (
"1054 586 LINE SMOOTH",
"1054 537 OFFCURVE",
"1038 449 OFFCURVE",
"1001 382 OFFCURVE",
"940 343 OFFCURVE",
"894 343 QCURVE SMOOTH",
"864 343 OFFCURVE",
"811 372 OFFCURVE",
"765 417 OFFCURVE",
"729 473 OFFCURVE",
"701 528 OFFCURVE",
"684 577 OFFCURVE",
"681 592 QCURVE",
"681 621 LINE",
"684 636 OFFCURVE",
"701 685 OFFCURVE",
"729 740 OFFCURVE",
"766 796 OFFCURVE",
"811 842 OFFCURVE",
"865 870 OFFCURVE",
"895 870 QCURVE SMOOTH",
"940 870 OFFCURVE",
"1001 830 OFFCURVE",
"1038 763 OFFCURVE",
"1054 676 OFFCURVE",
"1054 628 QCURVE",
"1054 628 LINE"
);
},
{
closed = 1;
nodes = (
"177 628 LINE SMOOTH",
"177 676 OFFCURVE",
"193 763 OFFCURVE",
"230 830 OFFCURVE",
"291 870 OFFCURVE",
"336 870 QCURVE SMOOTH",
"366 870 OFFCURVE",
"420 842 OFFCURVE",
"465 796 OFFCURVE",
"502 740 OFFCURVE",
"529 685 OFFCURVE",
"546 636 OFFCURVE",
"549 621 QCURVE",
"549 592 LINE",
"546 576 OFFCURVE",
"529 528 OFFCURVE",
"502 473 OFFCURVE",
"465 417 OFFCURVE",
"420 372 OFFCURVE",
"367 343 OFFCURVE",
"337 343 QCURVE SMOOTH",
"291 343 OFFCURVE",
"230 382 OFFCURVE",
"193 449 OFFCURVE",
"177 537 OFFCURVE",
"177 586 QCURVE",
"177 586 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
87 72 61 46 25 4 3 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = infinity;
unicode = 221E;
},
{
glyphname = integral;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"682 -89 LINE",
"682 1218 LINE SMOOTH",
"682 1314 OFFCURVE",
"774 1427 OFFCURVE",
"864 1427 QCURVE SMOOTH",
"893 1427 OFFCURVE",
"938 1421 OFFCURVE",
"955 1416 QCURVE",
"979 1558 LINE",
"942 1567 OFFCURVE",
"872 1579 OFFCURVE",
"835 1579 QCURVE SMOOTH",
"756 1579 OFFCURVE",
"630 1530 OFFCURVE",
"543 1438 OFFCURVE",
"497 1304 OFFCURVE",
"497 1218 QCURVE SMOOTH",
"497 -89 LINE SMOOTH",
"497 -179 OFFCURVE",
"426 -285 OFFCURVE",
"360 -285 QCURVE SMOOTH",
"353 -285 OFFCURVE",
"327 -283 OFFCURVE",
"298 -280 OFFCURVE",
"270 -275 OFFCURVE",
"262 -272 QCURVE",
"248 -419 LINE",
"277 -429 OFFCURVE",
"330 -437 OFFCURVE",
"360 -437 QCURVE SMOOTH",
"514 -437 OFFCURVE",
"682 -256 OFFCURVE",
"682 -89 QCURVE",
"682 -89 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
20 2 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = integral;
unicode = 222B;
},
{
glyphname = approxequal;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"161 702 LINE",
"208 770 OFFCURVE",
"330 848 OFFCURVE",
"397 849 QCURVE SMOOTH",
"436 850 OFFCURVE",
"496 839 OFFCURVE",
"548 819 OFFCURVE",
"600 791 OFFCURVE",
"631 775 QCURVE SMOOTH",
"661 760 OFFCURVE",
"709 735 OFFCURVE",
"758 717 OFFCURVE",
"813 706 OFFCURVE",
"850 706 QCURVE SMOOTH",
"916 706 OFFCURVE",
"1038 785 OFFCURVE",
"1086 852 QCURVE",
"1076 1023 LINE",
"1029 955 OFFCURVE",
"907 877 OFFCURVE",
"840 877 QCURVE SMOOTH",
"804 877 OFFCURVE",
"748 888 OFFCURVE",
"699 906 OFFCURVE",
"651 931 OFFCURVE",
"622 946 QCURVE SMOOTH",
"590 962 OFFCURVE",
"539 989 OFFCURVE",
"486 1009 OFFCURVE",
"427 1020 OFFCURVE",
"388 1019 QCURVE SMOOTH",
"321 1019 OFFCURVE",
"199 941 OFFCURVE",
"151 873 QCURVE",
"151 873 LINE"
);
},
{
closed = 1;
nodes = (
"151 276 LINE",
"198 344 OFFCURVE",
"320 422 OFFCURVE",
"387 422 QCURVE SMOOTH",
"426 423 OFFCURVE",
"486 412 OFFCURVE",
"538 392 OFFCURVE",
"590 365 OFFCURVE",
"621 349 QCURVE SMOOTH",
"651 334 OFFCURVE",
"699 309 OFFCURVE",
"748 290 OFFCURVE",
"803 280 OFFCURVE",
"840 280 QCURVE SMOOTH",
"906 280 OFFCURVE",
"1028 358 OFFCURVE",
"1076 426 QCURVE",
"1066 597 LINE",
"1019 529 OFFCURVE",
"897 450 OFFCURVE",
"830 450 QCURVE SMOOTH",
"794 450 OFFCURVE",
"738 461 OFFCURVE",
"689 479 OFFCURVE",
"641 505 OFFCURVE",
"612 520 QCURVE SMOOTH",
"580 535 OFFCURVE",
"529 563 OFFCURVE",
"476 583 OFFCURVE",
"417 594 OFFCURVE",
"378 593 QCURVE SMOOTH",
"311 592 OFFCURVE",
"189 514 OFFCURVE",
"141 447 QCURVE",
"141 447 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
67 50 33 16 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = approxequal;
unicode = 2248;
},
{
glyphname = notequal;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1062 525 LINE",
"626 525 LINE",
"754 780 LINE",
"1062 780 LINE",
"1062 941 LINE",
"834 941 LINE",
"883 1038 LINE",
"806 1089 LINE",
"732 941 LINE",
"169 941 LINE",
"169 780 LINE",
"651 780 LINE",
"523 525 LINE",
"169 525 LINE",
"169 365 LINE",
"442 365 LINE",
"376 232 LINE",
"454 181 LINE",
"546 365 LINE",
"1062 365 LINE",
"1062 365 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
12 2 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = notequal;
unicode = 2260;
},
{
glyphname = lessequal;
layers = (
{
components = (
{
name = less;
transform = "{1, 0, 0, 0.90002, 19, 188}";
},
{
name = minus;
transform = "{1, 0, 0, 1, 18, -642}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = lessequal;
unicode = 2264;
},
{
glyphname = greaterequal;
layers = (
{
components = (
{
name = greater;
transform = "{1, 0, 0, 0.90002, 16, 207}";
},
{
name = minus;
transform = "{1, 0, 0, 1, 26, -644}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = greaterequal;
unicode = 2265;
},
{
glyphname = lozenge;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"142 727 LINE",
"545 0 LINE",
"686 0 LINE",
"1087 727 LINE",
"683 1456 LINE",
"542 1456 LINE",
"542 1456 LINE"
);
},
{
closed = 1;
nodes = (
"634 206 LINE",
"616 155 LINE",
"600 206 LINE",
"332 727 LINE",
"594 1249 LINE",
"611 1300 LINE",
"628 1249 LINE",
"896 727 LINE",
"896 727 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
12 8 3 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = lozenge;
unicode = 25CA;
},
{
glyphname = commaaccent;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"552 239 LINE",
"376 239 LINE",
"376 166 LINE SMOOTH",
"376 91 OFFCURVE",
"339 -36 OFFCURVE",
"302 -98 QCURVE",
"407 -170 LINE",
"444 -138 OFFCURVE",
"499 -55 OFFCURVE",
"535 35 OFFCURVE",
"552 127 OFFCURVE",
"552 169 QCURVE",
"552 169 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
10 5 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = commaaccent;
unicode = F6C3;
},
{
glyphname = uniFEFF;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uniFEFF;
unicode = FEFF;
},
{
glyphname = uniFFFC;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"496 487 LINE SMOOTH",
"496 433 OFFCURVE",
"427 367 OFFCURVE",
"370 367 QCURVE SMOOTH",
"313 367 OFFCURVE",
"242 433 OFFCURVE",
"242 487 QCURVE SMOOTH",
"242 549 LINE SMOOTH",
"242 603 OFFCURVE",
"312 669 OFFCURVE",
"369 669 QCURVE SMOOTH",
"426 669 OFFCURVE",
"496 603 OFFCURVE",
"496 549 QCURVE",
"496 549 LINE"
);
},
{
closed = 1;
nodes = (
"533 368 LINE",
"533 671 LINE",
"636 671 LINE SMOOTH",
"691 671 OFFCURVE",
"753 631 OFFCURVE",
"753 588 QCURVE SMOOTH",
"753 567 OFFCURVE",
"730 533 OFFCURVE",
"707 524 QCURVE",
"735 516 OFFCURVE",
"763 477 OFFCURVE",
"763 454 QCURVE SMOOTH",
"763 411 OFFCURVE",
"706 368 OFFCURVE",
"655 368 QCURVE",
"655 368 LINE"
);
},
{
closed = 1;
nodes = (
"445 549 LINE SMOOTH",
"445 587 OFFCURVE",
"404 630 OFFCURVE",
"369 630 QCURVE SMOOTH",
"334 630 OFFCURVE",
"293 587 OFFCURVE",
"293 549 QCURVE SMOOTH",
"293 487 LINE SMOOTH",
"293 449 OFFCURVE",
"334 406 OFFCURVE",
"370 406 QCURVE SMOOTH",
"405 406 OFFCURVE",
"445 449 OFFCURVE",
"445 487 QCURVE",
"445 487 LINE"
);
},
{
closed = 1;
nodes = (
"971 672 LINE",
"1021 672 LINE",
"1021 464 LINE SMOOTH",
"1021 419 OFFCURVE",
"963 369 OFFCURVE",
"918 369 QCURVE SMOOTH",
"870 369 OFFCURVE",
"810 414 OFFCURVE",
"810 460 QCURVE",
"861 460 LINE",
"861 434 OFFCURVE",
"892 410 OFFCURVE",
"918 410 QCURVE SMOOTH",
"941 410 OFFCURVE",
"971 440 OFFCURVE",
"971 464 QCURVE",
"971 464 LINE"
);
},
{
closed = 1;
nodes = (
"262 10 LINE",
"262 73 LINE",
"154 73 LINE",
"154 184 LINE",
"92 184 LINE",
"92 10 LINE",
"92 10 LINE"
);
},
{
closed = 1;
nodes = (
"1159 10 LINE",
"1159 184 LINE",
"1098 184 LINE",
"1098 73 LINE",
"989 73 LINE",
"989 10 LINE",
"989 10 LINE"
);
},
{
closed = 1;
nodes = (
"154 873 LINE",
"154 966 LINE",
"262 966 LINE",
"262 1030 LINE",
"92 1030 LINE",
"92 873 LINE",
"92 873 LINE"
);
},
{
closed = 1;
nodes = (
"1098 966 LINE",
"1098 873 LINE",
"1159 873 LINE",
"1159 1030 LINE",
"989 1030 LINE",
"989 966 LINE",
"989 966 LINE"
);
},
{
closed = 1;
nodes = (
"585 503 LINE",
"585 410 LINE",
"655 410 LINE SMOOTH",
"684 410 OFFCURVE",
"711 434 OFFCURVE",
"711 455 QCURVE SMOOTH",
"711 477 OFFCURVE",
"684 503 OFFCURVE",
"655 503 QCURVE",
"655 503 LINE"
);
},
{
closed = 1;
nodes = (
"702 966 LINE",
"702 1030 LINE",
"549 1030 LINE",
"549 966 LINE",
"549 966 LINE"
);
},
{
closed = 1;
nodes = (
"922 966 LINE",
"922 1030 LINE",
"769 1030 LINE",
"769 966 LINE",
"769 966 LINE"
);
},
{
closed = 1;
nodes = (
"482 966 LINE",
"482 1030 LINE",
"330 1030 LINE",
"330 966 LINE",
"330 966 LINE"
);
},
{
closed = 1;
nodes = (
"702 10 LINE",
"702 73 LINE",
"549 73 LINE",
"549 10 LINE",
"549 10 LINE"
);
},
{
closed = 1;
nodes = (
"922 10 LINE",
"922 73 LINE",
"769 73 LINE",
"769 10 LINE",
"769 10 LINE"
);
},
{
closed = 1;
nodes = (
"482 10 LINE",
"482 73 LINE",
"330 73 LINE",
"330 10 LINE",
"330 10 LINE"
);
},
{
closed = 1;
nodes = (
"585 541 LINE",
"636 541 LINE SMOOTH",
"701 541 OFFCURVE",
"701 585 QCURVE SMOOTH",
"701 608 OFFCURVE",
"669 624 OFFCURVE",
"636 624 QCURVE SMOOTH",
"585 624 LINE",
"585 624 LINE"
);
},
{
closed = 1;
nodes = (
"154 597 LINE",
"92 597 LINE",
"92 459 LINE",
"154 459 LINE",
"154 459 LINE"
);
},
{
closed = 1;
nodes = (
"154 389 LINE",
"92 389 LINE",
"92 252 LINE",
"154 252 LINE",
"154 252 LINE"
);
},
{
closed = 1;
nodes = (
"154 804 LINE",
"92 804 LINE",
"92 667 LINE",
"154 667 LINE",
"154 667 LINE"
);
},
{
closed = 1;
nodes = (
"1159 597 LINE",
"1098 597 LINE",
"1098 459 LINE",
"1159 459 LINE",
"1159 459 LINE"
);
},
{
closed = 1;
nodes = (
"1159 389 LINE",
"1098 389 LINE",
"1098 252 LINE",
"1159 252 LINE",
"1159 252 LINE"
);
},
{
closed = 1;
nodes = (
"1159 804 LINE",
"1098 804 LINE",
"1098 667 LINE",
"1159 667 LINE",
"1159 667 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 46 values pushed */
146 144 142 140 138 136 134 132 130 128 126 124 121 116 113 112 109 108 105 104 101 100 97 96 93 92 88 83 80 78 72 71 68 65 60 59 57 52 38 31 25 14 9 2 22 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uniFFFC;
unicode = FFFC;
},
{
glyphname = uniFFFD;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"15 643 LINE",
"610 -332 LINE",
"1199 643 LINE",
"610 1618 LINE",
"610 1618 LINE"
);
},
{
closed = 1;
nodes = (
"511 392 LINE",
"511 440 OFFCURVE",
"519 490 OFFCURVE",
"540 528 OFFCURVE",
"575 568 OFFCURVE",
"604 604 QCURVE SMOOTH",
"614 617 OFFCURVE",
"641 656 OFFCURVE",
"665 703 OFFCURVE",
"682 754 OFFCURVE",
"682 780 QCURVE SMOOTH",
"682 832 OFFCURVE",
"650 896 OFFCURVE",
"613 896 QCURVE SMOOTH",
"589 896 OFFCURVE",
"548 848 OFFCURVE",
"546 793 QCURVE",
"343 793 LINE",
"344 863 OFFCURVE",
"387 964 OFFCURVE",
"460 1029 OFFCURVE",
"557 1059 OFFCURVE",
"613 1059 QCURVE SMOOTH",
"677 1059 OFFCURVE",
"779 1020 OFFCURVE",
"848 947 OFFCURVE",
"885 844 OFFCURVE",
"885 780 QCURVE SMOOTH",
"885 739 OFFCURVE",
"862 675 OFFCURVE",
"826 618 OFFCURVE",
"781 563 OFFCURVE",
"759 532 QCURVE SMOOTH",
"748 516 OFFCURVE",
"731 487 OFFCURVE",
"719 456 OFFCURVE",
"713 417 OFFCURVE",
"713 392 QCURVE",
"713 392 LINE"
);
},
{
closed = 1;
nodes = (
"713 131 LINE",
"511 131 LINE",
"511 301 LINE",
"713 301 LINE",
"713 301 LINE"
);
},
{
closed = 1;
nodes = (
"605 -555 LINE",
"609 -555 LINE",
"609 -551 LINE",
"605 -551 LINE",
"605 -551 LINE"
);
},
{
closed = 1;
nodes = (
"603 2159 LINE",
"607 2159 LINE",
"607 2163 LINE",
"603 2163 LINE",
"603 2163 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 12 values pushed */
52 50 48 46 44 42 18 4 2 0 5 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uniFFFD;
unicode = FFFD;
},
{
glyphname = two.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"932 128 LINE",
"533 128 LINE",
"708 273 LINE",
"751 312 OFFCURVE",
"822 383 OFFCURVE",
"873 452 OFFCURVE",
"900 523 OFFCURVE",
"900 563 QCURVE SMOOTH",
"900 618 OFFCURVE",
"860 705 OFFCURVE",
"786 767 OFFCURVE",
"680 800 OFFCURVE",
"614 800 QCURVE SMOOTH",
"545 800 OFFCURVE",
"434 759 OFFCURVE",
"356 688 OFFCURVE",
"314 592 OFFCURVE",
"314 538 QCURVE",
"472 538 LINE",
"473 596 OFFCURVE",
"544 671 OFFCURVE",
"618 671 QCURVE SMOOTH",
"676 671 OFFCURVE",
"742 610 OFFCURVE",
"742 561 QCURVE SMOOTH",
"742 526 OFFCURVE",
"686 439 OFFCURVE",
"621 379 QCURVE SMOOTH",
"333 108 LINE",
"333 0 LINE",
"932 0 LINE",
"932 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 41 values pushed */
2 1 0 4 1 74 0 2 1 4 1 2 4 112 0 3 0 1 2 3 1 99 0 4 4 0 89 0 0 0 61 0 76 26 36 18 39 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = two.sup;
},
{
glyphname = circumflextildecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"714 1514 LINE",
"565 1514 LINE",
"273 1252 LINE",
"443 1252 LINE",
"639 1428 LINE",
"836 1252 LINE",
"1007 1252 LINE",
"1007 1252 LINE"
);
},
{
closed = 1;
nodes = (
"823 1785 LINE",
"823 1768 OFFCURVE",
"809 1735 OFFCURVE",
"786 1709 OFFCURVE",
"756 1693 OFFCURVE",
"740 1693 QCURVE SMOOTH",
"711 1693 OFFCURVE",
"663 1715 OFFCURVE",
"617 1741 OFFCURVE",
"567 1763 OFFCURVE",
"536 1763 QCURVE SMOOTH",
"502 1763 OFFCURVE",
"444 1732 OFFCURVE",
"401 1682 OFFCURVE",
"376 1617 OFFCURVE",
"376 1584 QCURVE",
"453 1565 LINE",
"453 1582 OFFCURVE",
"468 1615 OFFCURVE",
"491 1642 OFFCURVE",
"520 1659 OFFCURVE",
"536 1659 QCURVE SMOOTH",
"566 1659 OFFCURVE",
"610 1636 OFFCURVE",
"653 1609 OFFCURVE",
"703 1587 OFFCURVE",
"740 1587 QCURVE SMOOTH",
"774 1587 OFFCURVE",
"832 1617 OFFCURVE",
"875 1666 OFFCURVE",
"900 1729 OFFCURVE",
"900 1762 QCURVE",
"900 1762 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
38 22 5 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = circumflextildecomb;
},
{
glyphname = circumflexhookcomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"714 1514 LINE",
"526 1514 LINE",
"252 1252 LINE",
"422 1252 LINE",
"620 1438 LINE",
"818 1252 LINE",
"989 1252 LINE",
"989 1252 LINE"
);
},
{
closed = 1;
nodes = (
"1074 1390 LINE",
"1075 1450 LINE",
"1100 1453 OFFCURVE",
"1149 1471 OFFCURVE",
"1187 1502 OFFCURVE",
"1210 1549 OFFCURVE",
"1210 1582 QCURVE SMOOTH",
"1210 1657 OFFCURVE",
"1070 1743 OFFCURVE",
"947 1743 QCURVE",
"941 1651 LINE",
"969 1651 OFFCURVE",
"1021 1644 OFFCURVE",
"1060 1628 OFFCURVE",
"1084 1603 OFFCURVE",
"1084 1584 QCURVE SMOOTH",
"1084 1549 OFFCURVE",
"1020 1526 OFFCURVE",
"959 1521 QCURVE",
"960 1390 LINE",
"960 1390 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
17 7 5 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = circumflexhookcomb;
},
{
glyphname = circumflexgravecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"726 1514 LINE",
"574 1514 LINE",
"284 1252 LINE",
"480 1252 LINE",
"650 1410 LINE",
"820 1252 LINE",
"1017 1252 LINE",
"1017 1252 LINE"
);
},
{
closed = 1;
nodes = (
"216 1685 LINE",
"16 1685 LINE",
"217 1426 LINE",
"357 1426 LINE",
"357 1426 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
9 7 5 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = circumflexgravecomb;
},
{
glyphname = circumflexacutecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"267 1252 LINE",
"465 1252 LINE",
"635 1410 LINE",
"804 1252 LINE",
"1001 1252 LINE",
"710 1514 LINE",
"559 1514 LINE",
"559 1514 LINE"
);
},
{
closed = 1;
nodes = (
"927 1426 LINE",
"1068 1426 LINE",
"1268 1685 LINE",
"1069 1685 LINE",
"1069 1685 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
9 7 2 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = circumflexacutecomb;
},
{
glyphname = brevegravecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"789 1456 LINE",
"789 1426 OFFCURVE",
"769 1372 OFFCURVE",
"728 1331 OFFCURVE",
"665 1308 OFFCURVE",
"622 1308 QCURVE SMOOTH",
"578 1308 OFFCURVE",
"514 1331 OFFCURVE",
"473 1372 OFFCURVE",
"453 1426 OFFCURVE",
"453 1456 QCURVE",
"304 1456 LINE",
"304 1397 OFFCURVE",
"349 1299 OFFCURVE",
"432 1229 OFFCURVE",
"549 1190 OFFCURVE",
"622 1190 QCURVE SMOOTH",
"694 1190 OFFCURVE",
"811 1229 OFFCURVE",
"894 1299 OFFCURVE",
"940 1397 OFFCURVE",
"940 1456 QCURVE",
"940 1456 LINE"
);
},
{
closed = 1;
nodes = (
"561 1703 LINE",
"345 1703 LINE",
"555 1497 LINE",
"706 1497 LINE",
"706 1497 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
24 22 4 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = brevegravecomb;
},
{
glyphname = commaaccentrotate;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"505 1166 LINE",
"690 1166 LINE",
"690 1286 LINE SMOOTH",
"690 1347 OFFCURVE",
"717 1453 OFFCURVE",
"752 1512 QCURVE",
"645 1595 LINE",
"621 1574 OFFCURVE",
"572 1508 OFFCURVE",
"531 1428 OFFCURVE",
"505 1339 OFFCURVE",
"505 1295 QCURVE",
"505 1295 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
10 5 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = commaaccentrotate;
},
{
glyphname = A.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"979 0 LINE",
"1166 0 LINE",
"696 1165 LINE",
"531 1165 LINE",
"54 0 LINE",
"242 0 LINE",
"352 279 LINE",
"870 279 LINE",
"870 279 LINE"
);
},
{
closed = 1;
nodes = (
"612 937 LINE",
"811 430 LINE",
"412 430 LINE",
"412 430 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 34 values pushed */
10 1 4 2 1 74 0 2 4 2 114 0 4 0 0 1 4 0 98 3 1 1 1 61 1 76 17 17 17 17 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = A.smcp;
},
{
glyphname = B.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"663 0 LINE SMOOTH",
"716 0 OFFCURVE",
"821 16 OFFCURVE",
"917 50 OFFCURVE",
"1000 102 OFFCURVE",
"1060 176 OFFCURVE",
"1094 272 OFFCURVE",
"1094 333 QCURVE SMOOTH",
"1094 388 OFFCURVE",
"1058 479 OFFCURVE",
"997 548 OFFCURVE",
"913 594 OFFCURVE",
"864 606 QCURVE",
"904 620 OFFCURVE",
"975 663 OFFCURVE",
"1028 722 OFFCURVE",
"1060 799 OFFCURVE",
"1060 847 QCURVE SMOOTH",
"1060 908 OFFCURVE",
"1024 1002 OFFCURVE",
"961 1073 OFFCURVE",
"875 1121 OFFCURVE",
"777 1151 OFFCURVE",
"672 1165 OFFCURVE",
"621 1165 QCURVE SMOOTH",
"208 1165 LINE",
"208 0 LINE",
"208 0 LINE"
);
},
{
closed = 1;
nodes = (
"672 530 LINE SMOOTH",
"719 529 OFFCURVE",
"805 506 OFFCURVE",
"870 459 OFFCURVE",
"908 386 OFFCURVE",
"908 334 QCURVE SMOOTH",
"908 283 OFFCURVE",
"865 214 OFFCURVE",
"795 171 OFFCURVE",
"707 152 OFFCURVE",
"663 151 QCURVE SMOOTH",
"395 151 LINE",
"395 530 LINE",
"395 530 LINE"
);
},
{
closed = 1;
nodes = (
"395 1012 LINE",
"622 1012 LINE SMOOTH",
"665 1011 OFFCURVE",
"755 996 OFFCURVE",
"829 958 OFFCURVE",
"875 891 OFFCURVE",
"875 839 QCURVE SMOOTH",
"875 792 OFFCURVE",
"832 728 OFFCURVE",
"766 689 OFFCURVE",
"684 672 OFFCURVE",
"644 671 QCURVE SMOOTH",
"395 671 LINE",
"395 671 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 57 values pushed */
14 1 3 4 1 74 0 0 0 5 4 0 5 99 0 4 7 1 3 2 4 3 99 0 2 2 1 91 6 1 1 1 61 1 76 27 27 0 0 52 50 42 40 27 39 27 38 30 28 0 26 0 25 33 8 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = B.smcp;
},
{
glyphname = C.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"893 377 LINE",
"870 255 OFFCURVE",
"729 134 OFFCURVE",
"601 135 QCURVE SMOOTH",
"517 135 OFFCURVE",
"400 204 OFFCURVE",
"328 316 OFFCURVE",
"296 458 OFFCURVE",
"295 531 QCURVE SMOOTH",
"295 633 LINE SMOOTH",
"296 708 OFFCURVE",
"331 851 OFFCURVE",
"407 962 OFFCURVE",
"527 1029 OFFCURVE",
"612 1029 QCURVE SMOOTH",
"737 1029 OFFCURVE",
"872 901 OFFCURVE",
"893 783 QCURVE",
"1078 783 LINE",
"1066 877 OFFCURVE",
"988 1025 OFFCURVE",
"867 1127 OFFCURVE",
"706 1181 OFFCURVE",
"612 1181 QCURVE SMOOTH",
"493 1181 OFFCURVE",
"308 1094 OFFCURVE",
"179 944 OFFCURVE",
"111 745 OFFCURVE",
"110 632 QCURVE SMOOTH",
"110 531 LINE SMOOTH",
"111 420 OFFCURVE",
"177 222 OFFCURVE",
"302 72 OFFCURVE",
"484 -16 OFFCURVE",
"601 -16 QCURVE SMOOTH",
"695 -16 OFFCURVE",
"858 35 OFFCURVE",
"984 135 OFFCURVE",
"1066 281 OFFCURVE",
"1078 377 QCURVE",
"1078 377 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
0 2 3 5 3 2 5 112 6 1 5 4 3 5 4 110 0 1 0 3 2 1 3 99 0 4 4 0 91 0 0 0 69 0 76 0 0 0 39 0 39 41 34 20 41 36 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = C.smcp;
},
{
glyphname = D.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"534 0 LINE SMOOTH",
"657 1 OFFCURVE",
"865 79 OFFCURVE",
"1018 222 OFFCURVE",
"1106 424 OFFCURVE",
"1107 550 QCURVE SMOOTH",
"1107 613 LINE SMOOTH",
"1106 736 OFFCURVE",
"1021 938 OFFCURVE",
"872 1083 OFFCURVE",
"667 1163 OFFCURVE",
"546 1165 QCURVE SMOOTH",
"183 1165 LINE",
"183 0 LINE",
"183 0 LINE"
);
},
{
closed = 1;
nodes = (
"546 1012 LINE SMOOTH",
"637 1011 OFFCURVE",
"777 953 OFFCURVE",
"872 848 OFFCURVE",
"921 703 OFFCURVE",
"922 615 QCURVE SMOOTH",
"922 550 LINE SMOOTH",
"921 460 OFFCURVE",
"868 313 OFFCURVE",
"769 209 OFFCURVE",
"626 152 OFFCURVE",
"534 151 QCURVE SMOOTH",
"369 151 LINE",
"369 1012 LINE",
"369 1012 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 39 values pushed */
0 0 5 1 3 2 0 3 99 0 2 2 1 91 4 1 1 1 61 1 76 14 14 0 0 14 27 14 26 17 15 0 13 0 12 33 6 8 21 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = D.smcp;
},
{
glyphname = E.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"965 678 LINE",
"389 678 LINE",
"389 1012 LINE",
"1053 1012 LINE",
"1053 1165 LINE",
"200 1165 LINE",
"200 0 LINE",
"1059 0 LINE",
"1059 151 LINE",
"389 151 LINE",
"389 526 LINE",
"965 526 LINE",
"965 526 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
0 3 0 4 5 3 4 97 0 5 0 0 1 5 0 97 0 1 1 2 89 0 2 2 61 2 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = E.smcp;
},
{
glyphname = F.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"996 652 LINE",
"423 652 LINE",
"423 1012 LINE",
"1085 1012 LINE",
"1085 1165 LINE",
"231 1165 LINE",
"231 0 LINE",
"423 0 LINE",
"423 499 LINE",
"996 499 LINE",
"996 499 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 2 0 3 4 2 3 97 0 4 0 0 1 4 0 97 0 1 1 61 1 76 17 17 17 17 16 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = F.smcp;
},
{
glyphname = G.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1089 591 LINE",
"629 591 LINE",
"629 447 LINE",
"906 447 LINE",
"905 209 LINE",
"880 185 OFFCURVE",
"818 156 OFFCURVE",
"751 140 OFFCURVE",
"681 135 OFFCURVE",
"648 135 QCURVE SMOOTH",
"561 135 OFFCURVE",
"435 204 OFFCURVE",
"352 316 OFFCURVE",
"312 462 OFFCURVE",
"311 540 QCURVE SMOOTH",
"311 626 LINE SMOOTH",
"312 702 OFFCURVE",
"345 847 OFFCURVE",
"420 961 OFFCURVE",
"541 1029 OFFCURVE",
"628 1029 QCURVE SMOOTH",
"740 1029 OFFCURVE",
"881 919 OFFCURVE",
"906 812 QCURVE",
"1089 812 LINE",
"1075 903 OFFCURVE",
"994 1042 OFFCURVE",
"872 1134 OFFCURVE",
"715 1181 OFFCURVE",
"626 1181 QCURVE SMOOTH",
"504 1181 OFFCURVE",
"317 1094 OFFCURVE",
"191 943 OFFCURVE",
"125 740 OFFCURVE",
"124 624 QCURVE SMOOTH",
"124 540 LINE SMOOTH",
"125 424 OFFCURVE",
"198 222 OFFCURVE",
"332 71 OFFCURVE",
"524 -16 OFFCURVE",
"645 -16 QCURVE SMOOTH",
"705 -16 OFFCURVE",
"829 -1 OFFCURVE",
"945 37 OFFCURVE",
"1048 101 OFFCURVE",
"1089 150 QCURVE",
"1089 150 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
41 0 2 4 5 1 74 0 2 3 6 3 2 6 112 0 1 0 3 2 1 3 99 0 6 0 5 4 6 5 97 0 4 4 0 91 0 0 0 69 0 76 17 21 41 34 20 41 36 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = G.smcp;
},
{
glyphname = H.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1017 1165 LINE",
"839 1165 LINE",
"839 650 LINE",
"333 650 LINE",
"333 1165 LINE",
"155 1165 LINE",
"155 0 LINE",
"333 0 LINE",
"333 498 LINE",
"839 498 LINE",
"839 0 LINE",
"1017 0 LINE",
"1017 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 4 0 1 0 4 1 97 5 1 3 3 0 89 2 1 0 0 61 0 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = H.smcp;
},
{
glyphname = I.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"217 1003 LINE",
"532 1003 LINE",
"532 160 LINE",
"217 160 LINE",
"217 0 LINE",
"1040 0 LINE",
"1040 160 LINE",
"717 160 LINE",
"717 1003 LINE",
"1040 1003 LINE",
"1040 1164 LINE",
"217 1164 LINE",
"217 1164 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
0 0 5 1 1 2 0 1 97 4 1 2 2 3 89 0 3 3 61 3 76 17 17 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = I.smcp;
},
{
glyphname = J.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"809 375 LINE",
"807 318 OFFCURVE",
"772 229 OFFCURVE",
"712 168 OFFCURVE",
"632 135 OFFCURVE",
"585 135 QCURVE SMOOTH",
"536 135 OFFCURVE",
"448 160 OFFCURVE",
"380 216 OFFCURVE",
"340 305 OFFCURVE",
"340 367 QCURVE",
"150 367 LINE",
"158 266 OFFCURVE",
"231 121 OFFCURVE",
"346 28 OFFCURVE",
"498 -16 OFFCURVE",
"585 -16 QCURVE SMOOTH",
"665 -16 OFFCURVE",
"813 35 OFFCURVE",
"926 134 OFFCURVE",
"994 280 OFFCURVE",
"996 375 QCURVE SMOOTH",
"998 1165 LINE",
"808 1165 LINE",
"808 1165 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
0 0 2 0 114 0 2 3 2 114 0 3 3 1 91 0 1 1 69 1 76 36 20 37 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = J.smcp;
},
{
glyphname = K.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"927 0 LINE",
"1152 0 LINE",
"640 646 LINE",
"1118 1165 LINE",
"891 1165 LINE",
"495 754 LINE",
"365 611 LINE",
"365 1165 LINE",
"180 1165 LINE",
"180 0 LINE",
"365 0 LINE",
"365 377 LINE",
"512 519 LINE",
"512 519 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
10 6 1 3 0 1 1 74 2 1 1 1 0 89 3 1 0 0 61 0 76 18 19 17 18 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = K.smcp;
},
{
glyphname = L.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"405 1165 LINE",
"209 1165 LINE",
"209 0 LINE",
"1106 0 LINE",
"1106 151 LINE",
"405 151 LINE",
"405 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 2 0 2 114 0 0 0 1 90 0 1 1 61 1 76 17 17 16 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = L.smcp;
},
{
glyphname = M.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"403 1165 LINE",
"155 1165 LINE",
"155 0 LINE",
"331 0 LINE",
"331 945 LINE",
"557 318 LINE",
"688 318 LINE",
"906 959 LINE",
"906 0 LINE",
"1082 0 LINE",
"1082 1165 LINE",
"841 1165 LINE",
"621 600 LINE",
"621 600 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
8 5 2 2 0 1 74 0 2 0 1 0 2 1 112 4 1 0 0 1 89 3 1 1 1 61 1 76 17 18 18 17 17 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = M.smcp;
},
{
glyphname = N.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1039 1165 LINE",
"863 1165 LINE",
"869 288 LINE",
"368 1165 LINE",
"194 1165 LINE",
"194 0 LINE",
"371 0 LINE",
"366 876 LINE",
"867 0 LINE",
"1039 0 LINE",
"1039 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 27 values pushed */
7 2 2 0 2 1 74 3 1 2 2 0 89 1 1 0 0 61 0 76 18 17 18 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = N.smcp;
},
{
glyphname = O.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1098 615 LINE SMOOTH",
"1097 725 OFFCURVE",
"1036 930 OFFCURVE",
"915 1087 OFFCURVE",
"734 1181 OFFCURVE",
"614 1181 QCURVE SMOOTH",
"495 1181 OFFCURVE",
"315 1086 OFFCURVE",
"193 928 OFFCURVE",
"131 724 OFFCURVE",
"130 615 QCURVE SMOOTH",
"130 548 LINE SMOOTH",
"131 439 OFFCURVE",
"194 235 OFFCURVE",
"316 78 OFFCURVE",
"496 -16 OFFCURVE",
"615 -16 QCURVE SMOOTH",
"735 -16 OFFCURVE",
"915 78 OFFCURVE",
"1036 234 OFFCURVE",
"1097 438 OFFCURVE",
"1098 548 QCURVE",
"1098 548 LINE"
);
},
{
closed = 1;
nodes = (
"915 548 LINE SMOOTH",
"914 477 OFFCURVE",
"884 331 OFFCURVE",
"815 213 OFFCURVE",
"700 138 OFFCURVE",
"615 138 QCURVE SMOOTH",
"531 138 OFFCURVE",
"417 213 OFFCURVE",
"346 332 OFFCURVE",
"314 477 OFFCURVE",
"313 548 QCURVE SMOOTH",
"313 617 LINE SMOOTH",
"314 687 OFFCURVE",
"345 832 OFFCURVE",
"416 950 OFFCURVE",
"530 1025 OFFCURVE",
"614 1025 QCURVE SMOOTH",
"698 1025 OFFCURVE",
"813 951 OFFCURVE",
"883 834 OFFCURVE",
"914 688 OFFCURVE",
"915 617 QCURVE",
"915 617 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 26 values pushed */
0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 69 0 76 41 41 41 36 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = O.smcp;
},
{
glyphname = Q.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1125 615 LINE SMOOTH",
"1124 731 OFFCURVE",
"1054 937 OFFCURVE",
"922 1091 OFFCURVE",
"731 1181 OFFCURVE",
"609 1181 QCURVE SMOOTH",
"487 1181 OFFCURVE",
"297 1090 OFFCURVE",
"165 935 OFFCURVE",
"95 730 OFFCURVE",
"94 615 QCURVE SMOOTH",
"94 548 LINE SMOOTH",
"95 433 OFFCURVE",
"166 228 OFFCURVE",
"298 74 OFFCURVE",
"489 -16 OFFCURVE",
"611 -16 QCURVE SMOOTH",
"675 -16 OFFCURVE",
"736 -2 QCURVE",
"1002 -202 LINE",
"1127 -91 LINE",
"904 72 LINE",
"957 110 OFFCURVE",
"1039 212 OFFCURVE",
"1095 335 OFFCURVE",
"1124 474 OFFCURVE",
"1125 548 QCURVE",
"1125 548 LINE"
);
},
{
closed = 1;
nodes = (
"941 548 LINE SMOOTH",
"940 470 OFFCURVE",
"903 322 OFFCURVE",
"823 208 OFFCURVE",
"699 138 OFFCURVE",
"611 138 QCURVE SMOOTH",
"524 138 OFFCURVE",
"399 208 OFFCURVE",
"318 324 OFFCURVE",
"279 471 OFFCURVE",
"278 548 QCURVE SMOOTH",
"278 617 LINE SMOOTH",
"279 693 OFFCURVE",
"318 840 OFFCURVE",
"398 955 OFFCURVE",
"522 1025 OFFCURVE",
"609 1025 QCURVE SMOOTH",
"697 1025 OFFCURVE",
"822 956 OFFCURVE",
"902 842 OFFCURVE",
"940 695 OFFCURVE",
"941 617 QCURVE",
"941 617 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 37 values pushed */
5 1 0 3 1 74 7 6 2 0 71 0 1 0 2 3 1 2 99 0 3 3 0 91 0 0 0 69 0 76 41 41 41 41 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Q.smcp;
},
{
glyphname = R.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"869 0 LINE",
"1068 0 LINE",
"1068 10 LINE",
"778 496 LINE",
"828 518 OFFCURVE",
"915 575 OFFCURVE",
"979 650 OFFCURVE",
"1015 746 OFFCURVE",
"1015 809 QCURVE SMOOTH",
"1015 904 OFFCURVE",
"940 1038 OFFCURVE",
"815 1124 OFFCURVE",
"654 1164 OFFCURVE",
"570 1165 QCURVE SMOOTH",
"144 1165 LINE",
"144 0 LINE",
"329 0 LINE",
"329 449 LINE",
"609 449 LINE",
"609 449 LINE"
);
},
{
closed = 1;
nodes = (
"329 1012 LINE",
"570 1012 LINE SMOOTH",
"620 1011 OFFCURVE",
"714 987 OFFCURVE",
"786 937 OFFCURVE",
"829 858 OFFCURVE",
"829 802 QCURVE SMOOTH",
"829 749 OFFCURVE",
"784 674 OFFCURVE",
"713 625 OFFCURVE",
"622 601 OFFCURVE",
"575 600 QCURVE SMOOTH",
"329 600 LINE",
"329 600 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
15 1 0 4 1 74 0 2 0 5 4 2 5 99 0 4 0 0 1 4 0 97 3 1 1 1 61 1 76 40 33 42 33 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = R.smcp;
},
{
glyphname = S.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"894 248 OFFCURVE",
"841 184 OFFCURVE",
"762 147 OFFCURVE",
"669 133 OFFCURVE",
"629 133 QCURVE SMOOTH",
"575 133 OFFCURVE",
"469 154 OFFCURVE",
"383 205 OFFCURVE",
"328 288 OFFCURVE",
"326 349 QCURVE",
"138 349 LINE",
"144 253 OFFCURVE",
"234 115 OFFCURVE",
"372 26 OFFCURVE",
"543 -16 OFFCURVE",
"629 -16 QCURVE SMOOTH",
"678 -16 OFFCURVE",
"783 -2 OFFCURVE",
"883 29 OFFCURVE",
"973 78 OFFCURVE",
"1041 148 OFFCURVE",
"1081 241 OFFCURVE",
"1081 300 QCURVE SMOOTH",
"1081 385 OFFCURVE",
"1005 506 OFFCURVE",
"885 591 OFFCURVE",
"739 646 OFFCURVE",
"669 664 QCURVE SMOOTH",
"644 670 OFFCURVE",
"580 685 OFFCURVE",
"513 706 OFFCURVE",
"448 735 OFFCURVE",
"396 775 OFFCURVE",
"365 827 OFFCURVE",
"365 861 QCURVE SMOOTH",
"365 910 OFFCURVE",
"415 975 OFFCURVE",
"491 1014 OFFCURVE",
"581 1030 OFFCURVE",
"621 1030 QCURVE SMOOTH",
"671 1030 OFFCURVE",
"767 1008 OFFCURVE",
"843 958 OFFCURVE",
"890 880 OFFCURVE",
"892 825 QCURVE",
"1079 825 LINE",
"1073 915 OFFCURVE",
"992 1049 OFFCURVE",
"866 1138 OFFCURVE",
"707 1181 OFFCURVE",
"623 1181 QCURVE SMOOTH",
"575 1181 OFFCURVE",
"472 1165 OFFCURVE",
"373 1132 OFFCURVE",
"285 1081 OFFCURVE",
"219 1010 OFFCURVE",
"180 917 OFFCURVE",
"180 860 QCURVE SMOOTH",
"180 774 OFFCURVE",
"263 654 OFFCURVE",
"392 572 OFFCURVE",
"545 521 OFFCURVE",
"614 504 QCURVE SMOOTH",
"641 497 OFFCURVE",
"704 481 OFFCURVE",
"767 459 OFFCURVE",
"825 430 OFFCURVE",
"870 388 OFFCURVE",
"896 334 OFFCURVE",
"895 298 QCURVE",
"895 298 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 49 values pushed */
0 1 2 4 2 1 4 112 0 4 5 2 4 5 110 0 0 0 2 1 0 2 99 0 5 5 3 91 0 3 3 69 3 76 66 64 60 59 55 53 31 29 25 24 20 18 6 8 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = S.smcp;
},
{
glyphname = T.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1129 1165 LINE",
"93 1165 LINE",
"93 1012 LINE",
"516 1012 LINE",
"516 0 LINE",
"704 0 LINE",
"704 1012 LINE",
"1129 1012 LINE",
"1129 1012 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 22 values pushed */
0 3 2 1 0 1 3 0 97 0 1 1 61 1 76 17 17 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = T.smcp;
},
{
glyphname = U.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"883 1165 LINE",
"882 385 LINE SMOOTH",
"881 326 OFFCURVE",
"844 233 OFFCURVE",
"777 169 OFFCURVE",
"682 135 OFFCURVE",
"623 135 QCURVE SMOOTH",
"564 135 OFFCURVE",
"469 169 OFFCURVE",
"402 233 OFFCURVE",
"365 326 OFFCURVE",
"364 385 QCURVE SMOOTH",
"363 1165 LINE",
"182 1165 LINE",
"181 385 LINE SMOOTH",
"182 289 OFFCURVE",
"252 140 OFFCURVE",
"371 38 OFFCURVE",
"531 -16 OFFCURVE",
"623 -16 QCURVE SMOOTH",
"714 -16 OFFCURVE",
"874 38 OFFCURVE",
"994 142 OFFCURVE",
"1065 290 OFFCURVE",
"1067 385 QCURVE SMOOTH",
"1066 1165 LINE",
"1066 1165 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 30 values pushed */
4 3 2 1 2 1 114 0 2 2 0 91 0 0 0 69 0 76 0 0 0 25 0 25 37 21 37 5 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = U.smcp;
},
{
glyphname = V.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"286 1165 LINE",
"86 1165 LINE",
"533 0 LINE",
"707 0 LINE",
"1155 1165 LINE",
"954 1165 LINE",
"649 309 LINE",
"620 203 LINE",
"592 310 LINE",
"592 310 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 24 values pushed */
1 1 1 0 1 74 2 1 0 1 0 114 0 1 1 61 1 76 17 17 19 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = V.smcp;
},
{
glyphname = W.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"708 1165 LINE",
"554 1165 LINE",
"370 339 LINE",
"218 1165 LINE",
"47 1165 LINE",
"279 0 LINE",
"438 0 LINE",
"631 830 LINE",
"819 0 LINE",
"978 0 LINE",
"1211 1165 LINE",
"1039 1165 LINE",
"888 339 LINE",
"888 339 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 29 values pushed */
10 5 2 1 0 1 74 4 3 2 0 1 0 114 2 1 1 1 61 1 76 18 17 18 17 17 5 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = W.smcp;
},
{
glyphname = X.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"324 1165 LINE",
"105 1165 LINE",
"500 587 LINE",
"96 0 LINE",
"316 0 LINE",
"610 443 LINE",
"906 0 LINE",
"1126 0 LINE",
"719 587 LINE",
"1111 1165 LINE",
"892 1165 LINE",
"607 730 LINE",
"607 730 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 28 values pushed */
9 6 3 3 1 0 1 74 3 1 0 0 1 89 2 1 1 1 61 1 76 18 18 18 17 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = X.smcp;
},
{
glyphname = Y.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"289 1165 LINE",
"77 1165 LINE",
"518 417 LINE",
"518 0 LINE",
"705 0 LINE",
"705 405 LINE",
"1153 1165 LINE",
"941 1165 LINE",
"614 580 LINE",
"614 580 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 25 values pushed */
6 3 2 1 0 1 74 2 1 0 1 0 114 0 1 1 61 1 76 18 18 17 3 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Y.smcp;
},
{
glyphname = Z.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1066 1044 LINE",
"1065 1165 LINE",
"194 1165 LINE",
"194 1012 LINE",
"836 1012 LINE",
"185 124 LINE",
"185 0 LINE",
"1090 0 LINE",
"1090 151 LINE",
"415 151 LINE",
"415 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
9 1 2 3 4 1 1 0 2 74 0 3 0 2 0 3 2 97 0 0 0 1 89 0 1 1 61 1 76 17 18 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Z.smcp;
},
{
glyphname = brevehookcomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"776 1456 LINE",
"775 1408 OFFCURVE",
"705 1341 OFFCURVE",
"631 1341 QCURVE SMOOTH",
"555 1341 OFFCURVE",
"484 1408 OFFCURVE",
"483 1456 QCURVE",
"338 1456 LINE",
"338 1409 OFFCURVE",
"380 1333 OFFCURVE",
"457 1278 OFFCURVE",
"565 1248 OFFCURVE",
"631 1248 QCURVE SMOOTH",
"697 1248 OFFCURVE",
"805 1278 OFFCURVE",
"880 1333 OFFCURVE",
"922 1409 OFFCURVE",
"922 1456 QCURVE",
"922 1456 LINE"
);
},
{
closed = 1;
nodes = (
"693 1473 LINE",
"690 1535 LINE",
"717 1538 OFFCURVE",
"771 1554 OFFCURVE",
"813 1581 OFFCURVE",
"839 1622 OFFCURVE",
"839 1651 QCURVE SMOOTH",
"839 1719 OFFCURVE",
"686 1795 OFFCURVE",
"546 1795 QCURVE",
"539 1713 LINE",
"571 1713 OFFCURVE",
"629 1707 OFFCURVE",
"673 1694 OFFCURVE",
"700 1671 OFFCURVE",
"700 1654 QCURVE SMOOTH",
"700 1623 OFFCURVE",
"629 1601 OFFCURVE",
"560 1597 QCURVE",
"566 1473 LINE",
"566 1473 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
28 18 4 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = brevehookcomb;
},
{
glyphname = one.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"719 789 LINE",
"701 789 LINE",
"347 672 LINE",
"347 544 LINE",
"562 601 LINE",
"562 0 LINE",
"719 0 LINE",
"719 0 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
5 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = one.sup;
},
{
glyphname = breveacutecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"775 1456 LINE",
"774 1408 OFFCURVE",
"703 1340 OFFCURVE",
"626 1340 QCURVE SMOOTH",
"586 1340 OFFCURVE",
"529 1358 OFFCURVE",
"492 1389 OFFCURVE",
"474 1432 OFFCURVE",
"474 1456 QCURVE",
"322 1456 LINE",
"322 1409 OFFCURVE",
"366 1332 OFFCURVE",
"445 1277 OFFCURVE",
"557 1247 OFFCURVE",
"626 1247 QCURVE SMOOTH",
"694 1247 OFFCURVE",
"805 1277 OFFCURVE",
"884 1332 OFFCURVE",
"928 1409 OFFCURVE",
"928 1456 QCURVE",
"928 1456 LINE"
);
},
{
closed = 1;
nodes = (
"567 1476 LINE",
"669 1476 LINE",
"833 1674 LINE",
"680 1674 LINE",
"680 1674 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
22 20 4 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = breveacutecomb;
},
{
glyphname = three.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"515 343 LINE",
"599 343 LINE SMOOTH",
"671 343 OFFCURVE",
"758 291 OFFCURVE",
"758 228 QCURVE SMOOTH",
"759 177 OFFCURVE",
"683 117 OFFCURVE",
"615 117 QCURVE SMOOTH",
"550 117 OFFCURVE",
"471 176 OFFCURVE",
"470 222 QCURVE",
"312 222 LINE",
"312 161 OFFCURVE",
"363 73 OFFCURVE",
"446 16 OFFCURVE",
"553 -11 OFFCURVE",
"610 -11 QCURVE SMOOTH",
"674 -11 OFFCURVE",
"786 20 OFFCURVE",
"869 78 OFFCURVE",
"916 164 OFFCURVE",
"916 220 QCURVE SMOOTH",
"916 362 OFFCURVE",
"766 404 QCURVE",
"831 429 OFFCURVE",
"902 519 OFFCURVE",
"902 575 QCURVE SMOOTH",
"902 630 OFFCURVE",
"859 714 OFFCURVE",
"781 771 OFFCURVE",
"673 800 OFFCURVE",
"609 800 QCURVE SMOOTH",
"549 800 OFFCURVE",
"445 769 OFFCURVE",
"368 712 OFFCURVE",
"323 630 OFFCURVE",
"323 579 QCURVE",
"480 579 LINE",
"481 623 OFFCURVE",
"555 671 OFFCURVE",
"612 671 QCURVE SMOOTH",
"679 671 OFFCURVE",
"745 613 OFFCURVE",
"745 568 QCURVE SMOOTH",
"745 517 OFFCURVE",
"669 459 OFFCURVE",
"599 459 QCURVE SMOOTH",
"515 459 LINE",
"515 459 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
30 15 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = three.sup;
},
{
glyphname = four.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"829 789 LINE",
"668 789 LINE",
"291 271 LINE",
"297 169 LINE",
"672 169 LINE",
"672 0 LINE",
"829 0 LINE",
"829 169 LINE",
"936 169 LINE",
"936 299 LINE",
"829 299 LINE",
"829 299 LINE"
);
},
{
closed = 1;
nodes = (
"655 560 LINE",
"672 588 LINE",
"672 299 LINE",
"449 299 LINE",
"449 299 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
13 1 0 4 8 1 1 0 2 74 5 1 0 3 1 1 2 0 1 97 0 4 4 2 89 0 2 2 61 2 76 17 18 17 17 17 16 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = four.sup;
},
{
glyphname = five.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"466 356 LINE",
"478 364 OFFCURVE",
"502 379 OFFCURVE",
"533 391 OFFCURVE",
"573 399 OFFCURVE",
"599 399 QCURVE SMOOTH",
"671 399 OFFCURVE",
"751 323 OFFCURVE",
"751 260 QCURVE SMOOTH",
"751 229 OFFCURVE",
"735 177 OFFCURVE",
"701 138 OFFCURVE",
"650 117 OFFCURVE",
"614 117 QCURVE SMOOTH",
"555 117 OFFCURVE",
"481 165 OFFCURVE",
"475 216 QCURVE",
"320 216 LINE",
"323 162 OFFCURVE",
"373 78 OFFCURVE",
"454 19 OFFCURVE",
"558 -11 OFFCURVE",
"614 -11 QCURVE SMOOTH",
"688 -11 OFFCURVE",
"799 32 OFFCURVE",
"872 106 OFFCURVE",
"908 204 OFFCURVE",
"908 258 QCURVE SMOOTH",
"908 318 OFFCURVE",
"871 414 OFFCURVE",
"801 481 OFFCURVE",
"700 516 OFFCURVE",
"637 516 QCURVE SMOOTH",
"592 516 OFFCURVE",
"518 495 OFFCURVE",
"498 487 QCURVE",
"520 657 LINE",
"869 657 LINE",
"869 789 LINE",
"391 789 LINE",
"341 387 LINE",
"341 387 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
17 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = five.sup;
},
{
glyphname = seven.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"923 789 LINE",
"304 789 LINE",
"304 659 LINE",
"757 659 LINE",
"407 0 LINE",
"573 0 LINE",
"923 699 LINE",
"923 699 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
5 1 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = seven.sup;
},
{
glyphname = eight.sup;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"891 633 OFFCURVE",
"849 715 OFFCURVE",
"775 771 OFFCURVE",
"673 800 OFFCURVE",
"614 800 QCURVE SMOOTH",
"554 800 OFFCURVE",
"453 771 OFFCURVE",
"379 715 OFFCURVE",
"338 633 OFFCURVE",
"338 579 QCURVE SMOOTH",
"338 520 OFFCURVE",
"402 432 OFFCURVE",
"457 406 QCURVE",
"393 380 OFFCURVE",
"318 283 OFFCURVE",
"318 216 QCURVE SMOOTH",
"318 159 OFFCURVE",
"364 74 OFFCURVE",
"444 17 OFFCURVE",
"553 -11 OFFCURVE",
"615 -11 QCURVE SMOOTH",
"677 -11 OFFCURVE",
"785 17 OFFCURVE",
"864 74 OFFCURVE",
"910 159 OFFCURVE",
"910 216 QCURVE SMOOTH",
"910 283 OFFCURVE",
"834 380 OFFCURVE",
"771 406 QCURVE",
"826 432 OFFCURVE",
"890 520 OFFCURVE",
"891 579 QCURVE",
"891 579 LINE"
);
},
{
closed = 1;
nodes = (
"754 201 OFFCURVE",
"733 160 OFFCURVE",
"695 132 OFFCURVE",
"645 117 OFFCURVE",
"615 117 QCURVE SMOOTH",
"553 117 OFFCURVE",
"475 174 OFFCURVE",
"475 228 QCURVE SMOOTH",
"475 281 OFFCURVE",
"553 338 OFFCURVE",
"614 338 QCURVE SMOOTH",
"644 338 OFFCURVE",
"695 323 OFFCURVE",
"732 295 OFFCURVE",
"754 254 OFFCURVE",
"754 228 QCURVE",
"754 228 LINE"
);
},
{
closed = 1;
nodes = (
"733 523 OFFCURVE",
"669 468 OFFCURVE",
"615 468 QCURVE SMOOTH",
"561 468 OFFCURVE",
"495 523 OFFCURVE",
"495 570 QCURVE SMOOTH",
"495 618 OFFCURVE",
"560 671 OFFCURVE",
"614 671 QCURVE SMOOTH",
"668 671 OFFCURVE",
"733 617 OFFCURVE",
"733 570 QCURVE",
"733 570 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
19 3 2 2 5 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 1 0 4 5 1 4 99 0 5 0 2 3 5 2 99 0 3 3 0 91 0 0 0 61 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 1 0 4 5 1 4 99 0 5 0 2 3 5 2 99 0 3 3 0 91 0 0 0 69 0 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 27 values pushed */
0 1 0 4 5 1 4 99 0 5 0 2 3 5 2 99 0 3 3 0 91 0 0 0 61 0 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 27 values pushed */
0 1 0 4 5 1 4 99 0 5 0 2 3 5 2 99 0 3 3 0 91 0 0 0 69 0 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
36 38 36 40 46 42 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = eight.sup;
},
{
glyphname = crossbar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"946 802 LINE",
"309 802 LINE",
"309 651 LINE",
"946 651 LINE",
"946 651 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 4 values pushed */
2 0 1 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = crossbar;
},
{
glyphname = ringacute;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"592 1466 LINE",
"716 1466 LINE",
"936 1650 LINE",
"738 1650 LINE",
"738 1650 LINE"
);
},
{
closed = 1;
nodes = (
"465 1215 OFFCURVE",
"493 1155 OFFCURVE",
"540 1112 OFFCURVE",
"602 1088 OFFCURVE",
"637 1088 QCURVE SMOOTH",
"671 1088 OFFCURVE",
"733 1112 OFFCURVE",
"778 1155 OFFCURVE",
"805 1215 OFFCURVE",
"805 1251 QCURVE SMOOTH",
"805 1287 OFFCURVE",
"778 1349 OFFCURVE",
"733 1393 OFFCURVE",
"671 1418 OFFCURVE",
"637 1418 QCURVE SMOOTH",
"602 1418 OFFCURVE",
"540 1393 OFFCURVE",
"493 1349 OFFCURVE",
"465 1287 OFFCURVE",
"465 1251 QCURVE",
"465 1251 LINE"
);
},
{
closed = 1;
nodes = (
"551 1289 OFFCURVE",
"601 1339 OFFCURVE",
"637 1339 QCURVE SMOOTH",
"672 1339 OFFCURVE",
"721 1289 OFFCURVE",
"721 1251 QCURVE SMOOTH",
"720 1216 OFFCURVE",
"672 1166 OFFCURVE",
"637 1166 QCURVE SMOOTH",
"601 1166 OFFCURVE",
"551 1216 OFFCURVE",
"550 1251 QCURVE",
"550 1251 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 8 values pushed */
32 26 18 8 2 0 3 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = ringacute;
},
{
glyphname = dasiaoxia;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"687 1156 LINE",
"767 1156 LINE",
"951 1455 LINE",
"951 1476 LINE",
"783 1476 LINE",
"687 1182 LINE",
"687 1182 LINE"
);
},
{
closed = 1;
nodes = (
"501 1154 LINE",
"624 1154 LINE",
"624 1288 LINE SMOOTH",
"627 1390 OFFCURVE",
"678 1473 QCURVE",
"606 1476 LINE",
"561 1446 OFFCURVE",
"510 1353 OFFCURVE",
"501 1294 QCURVE",
"501 1294 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
13 9 4 1 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = dasiaoxia;
},
{
glyphname = brevetildecomb;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"813 1454 LINE",
"813 1430 OFFCURVE",
"796 1387 OFFCURVE",
"760 1355 OFFCURVE",
"705 1336 OFFCURVE",
"667 1336 QCURVE SMOOTH",
"590 1336 OFFCURVE",
"522 1405 OFFCURVE",
"521 1454 QCURVE",
"372 1454 LINE",
"372 1407 OFFCURVE",
"414 1328 OFFCURVE",
"491 1272 OFFCURVE",
"600 1241 OFFCURVE",
"667 1241 QCURVE SMOOTH",
"734 1241 OFFCURVE",
"843 1272 OFFCURVE",
"920 1328 OFFCURVE",
"962 1407 OFFCURVE",
"962 1454 QCURVE",
"962 1454 LINE"
);
},
{
closed = 1;
nodes = (
"870 1744 LINE",
"870 1706 OFFCURVE",
"822 1655 OFFCURVE",
"788 1655 QCURVE SMOOTH",
"756 1655 OFFCURVE",
"704 1678 OFFCURVE",
"653 1707 OFFCURVE",
"600 1730 OFFCURVE",
"567 1730 QCURVE SMOOTH",
"530 1730 OFFCURVE",
"469 1700 OFFCURVE",
"426 1650 OFFCURVE",
"401 1584 OFFCURVE",
"401 1548 QCURVE",
"485 1527 LINE",
"486 1565 OFFCURVE",
"532 1616 OFFCURVE",
"567 1616 QCURVE SMOOTH",
"600 1616 OFFCURVE",
"647 1593 OFFCURVE",
"694 1564 OFFCURVE",
"748 1541 OFFCURVE",
"788 1541 QCURVE SMOOTH",
"824 1541 OFFCURVE",
"885 1570 OFFCURVE",
"929 1619 OFFCURVE",
"953 1684 OFFCURVE",
"953 1720 QCURVE",
"953 1720 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 6 values pushed */
47 33 4 0 2 48 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = brevetildecomb;
},
{
glyphname = cyrillictic;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"703 154 LINE",
"518 154 LINE",
"518 -359 LINE",
"703 -359 LINE",
"703 -359 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 21 values pushed */
0 1 0 0 1 85 0 1 1 0 89 0 0 1 0 77 17 16 2 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = cyrillictic;
},
{
glyphname = cyrillichook;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"601 151 LINE",
"601 -89 LINE SMOOTH",
"601 -179 OFFCURVE",
"530 -275 OFFCURVE",
"464 -275 QCURVE SMOOTH",
"457 -275 OFFCURVE",
"431 -273 OFFCURVE",
"401 -270 OFFCURVE",
"374 -265 OFFCURVE",
"366 -262 QCURVE",
"352 -419 LINE",
"381 -429 OFFCURVE",
"434 -437 OFFCURVE",
"464 -437 QCURVE SMOOTH",
"618 -437 OFFCURVE",
"786 -256 OFFCURVE",
"786 -89 QCURVE SMOOTH",
"786 151 LINE",
"786 151 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
8 1 1 2 7 1 0 1 2 74 3 1 2 1 2 114 0 1 1 0 92 0 0 0 33 0 76 0 0 0 17 0 17 39 35 4 6 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = cyrillichook;
},
{
glyphname = P.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"662 438 LINE SMOOTH",
"746 439 OFFCURVE",
"904 481 OFFCURVE",
"1025 568 OFFCURVE",
"1099 703 OFFCURVE",
"1099 798 QCURVE SMOOTH",
"1099 890 OFFCURVE",
"1025 1027 OFFCURVE",
"903 1118 OFFCURVE",
"746 1164 OFFCURVE",
"662 1165 QCURVE SMOOTH",
"204 1165 LINE",
"204 0 LINE",
"388 0 LINE",
"388 438 LINE",
"388 438 LINE"
);
},
{
closed = 1;
nodes = (
"388 1012 LINE",
"662 1012 LINE SMOOTH",
"711 1011 OFFCURVE",
"803 983 OFFCURVE",
"872 930 OFFCURVE",
"914 850 OFFCURVE",
"914 796 QCURVE SMOOTH",
"914 741 OFFCURVE",
"872 664 OFFCURVE",
"803 614 OFFCURVE",
"711 591 OFFCURVE",
"662 590 QCURVE SMOOTH",
"388 590 LINE",
"388 590 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
0 1 0 4 3 1 4 99 0 3 5 1 2 0 3 2 99 0 0 0 61 0 76 0 0 27 25 17 15 0 14 0 13 33 17 6 8 22 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = P.smcp;
},
{
glyphname = K.alt;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"979 0 LINE",
"1206 0 LINE",
"670 751 LINE",
"1165 1456 LINE",
"953 1456 LINE",
"510 810 LINE",
"354 810 LINE",
"354 1456 LINE",
"169 1456 LINE",
"169 0 LINE",
"354 0 LINE",
"354 659 LINE",
"525 659 LINE",
"525 659 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
10 1 0 3 1 74 0 3 0 0 1 3 0 97 4 1 2 2 22 75 5 1 1 1 23 1 76 18 17 17 17 17 16 6 6 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = K.alt;
},
{
glyphname = Germandbls.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"470 29 LINE",
"525 3 OFFCURVE",
"636 -20 OFFCURVE",
"693 -20 QCURVE SMOOTH",
"780 -20 OFFCURVE",
"925 30 OFFCURVE",
"1030 126 OFFCURVE",
"1089 266 OFFCURVE",
"1089 356 QCURVE SMOOTH",
"1089 426 OFFCURVE",
"1040 535 OFFCURVE",
"949 614 OFFCURVE",
"819 661 OFFCURVE",
"738 668 QCURVE",
"1012 998 LINE",
"973 1036 OFFCURVE",
"886 1103 OFFCURVE",
"787 1152 OFFCURVE",
"675 1181 OFFCURVE",
"610 1181 QCURVE SMOOTH",
"406 1181 OFFCURVE",
"210 966 OFFCURVE",
"210 753 QCURVE SMOOTH",
"210 0 LINE",
"394 0 LINE",
"394 753 LINE SMOOTH",
"394 809 OFFCURVE",
"415 910 OFFCURVE",
"464 985 OFFCURVE",
"547 1029 OFFCURVE",
"610 1029 QCURVE SMOOTH",
"673 1029 OFFCURVE",
"757 990 OFFCURVE",
"786 967 QCURVE",
"549 672 LINE",
"549 535 LINE",
"633 535 LINE SMOOTH",
"768 535 OFFCURVE",
"904 450 OFFCURVE",
"904 352 QCURVE SMOOTH",
"904 303 OFFCURVE",
"875 222 OFFCURVE",
"821 163 OFFCURVE",
"743 130 OFFCURVE",
"693 130 QCURVE SMOOTH",
"639 130 OFFCURVE",
"555 161 OFFCURVE",
"523 181 QCURVE",
"523 181 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 13 values pushed */
34 33 14 13 4 1 2 47 1 3 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
0 1 2 0 2 1 0 112 0 4 0 2 1 4 2 99 0 0 0 3 91 5 1 3 3 61 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
0 1 2 0 2 1 0 112 0 4 0 2 1 4 2 99 0 3 3 61 75 0 0 0 5 91 0 5 5 69 5 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 9 values pushed */
46 35 21 36 38 34 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Germandbls.smcp;
},
{
glyphname = nonbreakingspace;
layers = (
{
components = (
{
name = space;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = nonbreakingspace;
unicode = 00A0;
},
{
glyphname = uni00AD;
layers = (
{
components = (
{
name = hyphen;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1230;
}
);
note = uni00AD;
unicode = 00AD;
},
{
glyphname = Dcroat;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"522 0 LINE SMOOTH",
"674 1 OFFCURVE",
"913 100 OFFCURVE",
"1078 277 OFFCURVE",
"1165 524 OFFCURVE",
"1166 674 QCURVE SMOOTH",
"1166 781 LINE SMOOTH",
"1165 931 OFFCURVE",
"1078 1178 OFFCURVE",
"913 1355 OFFCURVE",
"674 1454 OFFCURVE",
"522 1456 QCURVE SMOOTH",
"185 1456 LINE",
"185 817 LINE",
"-44 817 LINE",
"-44 666 LINE",
"185 666 LINE",
"185 0 LINE",
"185 0 LINE"
);
},
{
closed = 1;
nodes = (
"593 817 LINE",
"373 817 LINE",
"373 1304 LINE",
"522 1304 LINE SMOOTH",
"640 1302 OFFCURVE",
"812 1222 OFFCURVE",
"924 1083 OFFCURVE",
"980 894 OFFCURVE",
"981 783 QCURVE SMOOTH",
"981 674 LINE SMOOTH",
"980 563 OFFCURVE",
"925 373 OFFCURVE",
"812 233 OFFCURVE",
"640 152 OFFCURVE",
"522 151 QCURVE SMOOTH",
"373 151 LINE",
"373 666 LINE",
"593 666 LINE",
"593 666 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
7 1 1 4 1 0 5 1 0 97 0 6 6 2 91 0 2 2 60 75 0 5 5 3 91 8 1 3 3 61 3 76 0 0 35 34 33 31 22 20 19 18 0 17 0 16 33 17 17 9 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1259;
}
);
note = Dcroat;
unicode = 0110;
},
{
glyphname = Eth;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"522 0 LINE SMOOTH",
"674 1 OFFCURVE",
"913 100 OFFCURVE",
"1078 277 OFFCURVE",
"1165 524 OFFCURVE",
"1166 674 QCURVE SMOOTH",
"1166 781 LINE SMOOTH",
"1165 931 OFFCURVE",
"1078 1178 OFFCURVE",
"913 1355 OFFCURVE",
"674 1454 OFFCURVE",
"522 1456 QCURVE SMOOTH",
"185 1456 LINE",
"185 817 LINE",
"-44 817 LINE",
"-44 666 LINE",
"185 666 LINE",
"185 0 LINE",
"185 0 LINE"
);
},
{
closed = 1;
nodes = (
"593 817 LINE",
"373 817 LINE",
"373 1304 LINE",
"522 1304 LINE SMOOTH",
"640 1302 OFFCURVE",
"812 1222 OFFCURVE",
"924 1083 OFFCURVE",
"980 894 OFFCURVE",
"981 783 QCURVE SMOOTH",
"981 674 LINE SMOOTH",
"980 563 OFFCURVE",
"925 373 OFFCURVE",
"812 233 OFFCURVE",
"640 152 OFFCURVE",
"522 151 QCURVE SMOOTH",
"373 151 LINE",
"373 666 LINE",
"593 666 LINE",
"593 666 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
7 1 1 4 1 0 5 1 0 97 0 6 6 2 91 0 2 2 60 75 0 5 5 3 91 8 1 3 3 61 3 76 0 0 35 34 33 31 22 20 19 18 0 17 0 16 33 17 17 9 8 23 
CALL[ ]\011/* CallFunction */";
};
width = 1259;
}
);
note = Eth;
unicode = 00D0;
},
{
glyphname = hbar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"663 1385 LINE",
"389 1385 LINE",
"389 1536 LINE",
"204 1536 LINE",
"204 1385 LINE",
"26 1385 LINE",
"26 1234 LINE",
"204 1234 LINE",
"204 0 LINE",
"389 0 LINE",
"389 786 LINE",
"434 858 OFFCURVE",
"579 945 OFFCURVE",
"668 945 QCURVE SMOOTH",
"786 946 OFFCURVE",
"913 816 OFFCURVE",
"913 683 QCURVE SMOOTH",
"913 0 LINE",
"1098 0 LINE",
"1098 681 LINE SMOOTH",
"1098 790 OFFCURVE",
"1045 949 OFFCURVE",
"947 1053 OFFCURVE",
"808 1102 OFFCURVE",
"723 1102 QCURVE SMOOTH",
"617 1101 OFFCURVE",
"447 1006 OFFCURVE",
"389 921 QCURVE",
"389 1234 LINE",
"663 1234 LINE",
"663 1234 LINE"
);
}
);
userData = {
assembly = "PUSHB[ ]\011/* 7 values pushed */
19 2 2 2 3 1 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 32 values pushed */
8 1 6 5 1 0 1 6 0 97 0 7 7 62 75 0 3 3 1 91 0 1 1 71 75 4 1 2 2 61 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 32 values pushed */
8 1 6 5 1 0 1 6 0 97 0 3 3 1 91 0 1 1 71 75 0 7 7 2 89 4 1 2 2 61 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 12 values pushed */
17 17 17 17 19 35 21 35 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1259;
}
);
note = hbar;
unicode = 0127;
},
{
glyphname = Tbar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"941 974 LINE",
"706 974 LINE",
"706 1298 LINE",
"1156 1298 LINE",
"1156 1456 LINE",
"76 1456 LINE",
"76 1298 LINE",
"526 1298 LINE",
"526 974 LINE",
"304 974 LINE",
"304 823 LINE",
"526 823 LINE",
"526 0 LINE",
"706 0 LINE",
"706 823 LINE",
"941 823 LINE",
"941 823 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
7 1 3 2 1 0 1 3 0 97 6 1 4 4 5 89 0 5 5 60 75 0 1 1 61 1 76 17 17 17 17 17 17 17 16 8 8 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Tbar;
unicode = 0166;
},
{
glyphname = tbar;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"426 1344 LINE",
"426 1082 LINE",
"142 1082 LINE",
"142 939 LINE",
"426 939 LINE",
"426 753 LINE",
"209 753 LINE",
"209 602 LINE",
"426 602 LINE",
"426 351 LINE SMOOTH",
"426 251 OFFCURVE",
"479 110 OFFCURVE",
"571 21 OFFCURVE",
"696 -20 OFFCURVE",
"768 -20 QCURVE SMOOTH",
"811 -20 OFFCURVE",
"898 -12 OFFCURVE",
"976 3 OFFCURVE",
"1042 24 OFFCURVE",
"1065 38 QCURVE",
"1039 169 LINE",
"1022 165 OFFCURVE",
"969 154 OFFCURVE",
"908 144 OFFCURVE",
"844 137 OFFCURVE",
"814 137 QCURVE SMOOTH",
"773 137 OFFCURVE",
"700 157 OFFCURVE",
"644 206 OFFCURVE",
"612 288 OFFCURVE",
"612 351 QCURVE SMOOTH",
"612 602 LINE",
"846 602 LINE",
"846 753 LINE",
"612 753 LINE",
"612 939 LINE",
"1024 939 LINE",
"1024 1082 LINE",
"612 1082 LINE",
"612 1344 LINE",
"612 1344 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 69 values pushed */
19 1 4 3 20 1 5 4 2 74 11 1 10 0 10 114 7 1 2 6 1 3 4 2 3 97 8 1 1 1 0 89 9 1 0 0 63 75 0 4 4 5 91 0 5 5 69 5 76 0 0 0 39 0 39 38 37 17 17 21 41 37 17 17 17 17 12 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = tbar;
unicode = 0167;
},
{
glyphname = Agrave;
layers = (
{
components = (
{
name = A;
},
{
name = grave;
transform = "{1, 0, 0, 1, -103, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Agrave;
unicode = 00C0;
},
{
glyphname = Aacute;
layers = (
{
components = (
{
name = A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 133, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Aacute;
unicode = 00C1;
},
{
glyphname = Acircumflex;
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 135, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Acircumflex;
unicode = 00C2;
},
{
glyphname = Atilde;
layers = (
{
components = (
{
name = A;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 147, 353}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Atilde;
unicode = 00C3;
},
{
glyphname = Adieresis;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 15, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Adieresis;
unicode = 00C4;
},
{
glyphname = Aring;
layers = (
{
components = (
{
name = A;
},
{
name = ring;
transform = "{1, 0, 0, 1, 14, 420}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Aring;
unicode = 00C5;
},
{
glyphname = Aringacute;
layers = (
{
components = (
{
name = A;
},
{
name = ringacute;
transform = "{1, 0, 0, 1, -4, 422}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Aringacute;
unicode = 01FA;
},
{
glyphname = Ccedilla;
layers = (
{
components = (
{
name = C;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 54, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ccedilla;
unicode = 00C7;
},
{
glyphname = Egrave;
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, -113, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Egrave;
unicode = 00C8;
},
{
glyphname = Eacute;
layers = (
{
components = (
{
name = E;
},
{
name = acute;
transform = "{1, 0, 0, 1, 123, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Eacute;
unicode = 00C9;
},
{
glyphname = Ecircumflex;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 125, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ecircumflex;
unicode = 00CA;
},
{
glyphname = Edieresis;
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 5, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Edieresis;
unicode = 00CB;
},
{
glyphname = Igrave;
layers = (
{
components = (
{
name = I;
},
{
name = grave;
transform = "{1, 0, 0, 1, -165, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Igrave;
unicode = 00CC;
},
{
glyphname = Iacute;
layers = (
{
components = (
{
name = I;
},
{
name = acute;
transform = "{1, 0, 0, 1, 71, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Iacute;
unicode = 00CD;
},
{
glyphname = Icircumflex;
layers = (
{
components = (
{
name = I;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 73, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Icircumflex;
unicode = 00CE;
},
{
glyphname = Idieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -46, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Idieresis;
unicode = 00CF;
},
{
glyphname = Ntilde;
layers = (
{
components = (
{
name = N;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 108, 353}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ntilde;
unicode = 00D1;
},
{
glyphname = Ograve;
layers = (
{
components = (
{
name = O;
},
{
name = grave;
transform = "{1, 0, 0, 1, -99, 367}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ograve;
unicode = 00D2;
},
{
glyphname = Oacute;
layers = (
{
components = (
{
name = O;
},
{
name = acute;
transform = "{1, 0, 0, 1, 137, 364}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Oacute;
unicode = 00D3;
},
{
glyphname = Ocircumflex;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 139, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ocircumflex;
unicode = 00D4;
},
{
glyphname = Otilde;
layers = (
{
components = (
{
name = O;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 151, 374}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Otilde;
unicode = 00D5;
},
{
glyphname = Odieresis;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 19, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Odieresis;
unicode = 00D6;
},
{
glyphname = Ugrave;
layers = (
{
components = (
{
name = U;
},
{
name = grave;
transform = "{1, 0, 0, 1, -73, 334}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ugrave;
unicode = 00D9;
},
{
glyphname = Uacute;
layers = (
{
components = (
{
name = U;
},
{
name = acute;
transform = "{1, 0, 0, 1, 163, 331}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Uacute;
unicode = 00DA;
},
{
glyphname = Ucircumflex;
layers = (
{
components = (
{
name = U;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 165, 335}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ucircumflex;
unicode = 00DB;
},
{
glyphname = Udieresis;
layers = (
{
components = (
{
name = U;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 45, 335}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Udieresis;
unicode = 00DC;
},
{
glyphname = Yacute;
layers = (
{
components = (
{
name = Y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 113, 342}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Yacute;
unicode = 00DD;
},
{
glyphname = agrave;
layers = (
{
components = (
{
name = a;
},
{
name = grave;
transform = "{1, 0, 0, 1, -107, 24}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = agrave;
unicode = 00E0;
},
{
glyphname = aacute;
layers = (
{
components = (
{
name = a;
},
{
name = acute;
transform = "{1, 0, 0, 1, 129, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = aacute;
unicode = 00E1;
},
{
glyphname = acircumflex;
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 131, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = acircumflex;
unicode = 00E2;
},
{
glyphname = atilde;
layers = (
{
components = (
{
name = a;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 143, 31}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = atilde;
unicode = 00E3;
},
{
glyphname = adieresis;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 11, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = adieresis;
unicode = 00E4;
},
{
glyphname = aring;
layers = (
{
components = (
{
name = a;
},
{
name = ring;
transform = "{1, 0, 0, 1, 10, 98}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = aring;
unicode = 00E5;
},
{
glyphname = aringacute;
layers = (
{
components = (
{
name = a;
},
{
name = ringacute;
transform = "{1, 0, 0, 1, -8, 100}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = aringacute;
unicode = 01FB;
},
{
glyphname = ccedilla;
layers = (
{
components = (
{
name = c;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 75, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ccedilla;
unicode = 00E7;
},
{
glyphname = egrave;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -112, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = egrave;
unicode = 00E8;
},
{
glyphname = eacute;
layers = (
{
components = (
{
name = e;
},
{
name = acute;
transform = "{1, 0, 0, 1, 124, 22}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = eacute;
unicode = 00E9;
},
{
glyphname = ecircumflex;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 126, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ecircumflex;
unicode = 00EA;
},
{
glyphname = edieresis;
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 6, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = edieresis;
unicode = 00EB;
},
{
glyphname = igrave;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = grave;
transform = "{1, 0, 0, 1, -66, 3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = igrave;
unicode = 00EC;
},
{
glyphname = iacute;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = acute;
transform = "{1, 0, 0, 1, 170, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = iacute;
unicode = 00ED;
},
{
glyphname = icircumflex;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 172, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = icircumflex;
unicode = 00EE;
},
{
glyphname = idieresis;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 52, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = idieresis;
unicode = 00EF;
},
{
glyphname = ntilde;
layers = (
{
components = (
{
name = n;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 123, 31}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ntilde;
unicode = 00F1;
},
{
glyphname = ograve;
layers = (
{
components = (
{
name = o;
},
{
name = grave;
transform = "{1, 0, 0, 1, -118, 24}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ograve;
unicode = 00F2;
},
{
glyphname = oacute;
layers = (
{
components = (
{
name = o;
},
{
name = acute;
transform = "{1, 0, 0, 1, 118, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = oacute;
unicode = 00F3;
},
{
glyphname = ocircumflex;
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 120, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ocircumflex;
unicode = 00F4;
},
{
glyphname = otilde;
layers = (
{
components = (
{
name = o;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 132, 31}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = otilde;
unicode = 00F5;
},
{
glyphname = odieresis;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = odieresis;
unicode = 00F6;
},
{
glyphname = ugrave;
layers = (
{
components = (
{
name = u;
},
{
name = grave;
transform = "{1, 0, 0, 1, -119, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ugrave;
unicode = 00F9;
},
{
glyphname = uacute;
layers = (
{
components = (
{
name = u;
},
{
name = acute;
transform = "{1, 0, 0, 1, 117, 1}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uacute;
unicode = 00FA;
},
{
glyphname = ucircumflex;
layers = (
{
components = (
{
name = u;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 119, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ucircumflex;
unicode = 00FB;
},
{
glyphname = udieresis;
layers = (
{
components = (
{
name = u;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = udieresis;
unicode = 00FC;
},
{
glyphname = yacute;
layers = (
{
components = (
{
name = y;
},
{
name = acute;
transform = "{1, 0, 0, 1, 137, 1}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = yacute;
unicode = 00FD;
},
{
glyphname = ydieresis;
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 19, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ydieresis;
unicode = 00FF;
},
{
glyphname = Amacron;
layers = (
{
components = (
{
name = A;
},
{
name = macron;
transform = "{1, 0, 0, 1, 19, 330}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Amacron;
unicode = 0100;
},
{
glyphname = amacron;
layers = (
{
components = (
{
name = a;
},
{
name = macron;
transform = "{1, 0, 0, 1, 15, 8}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = amacron;
unicode = 0101;
},
{
glyphname = Abreve;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 15, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Abreve;
unicode = 0102;
},
{
glyphname = abreve;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 11, 86}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = abreve;
unicode = 0103;
},
{
glyphname = Aogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"81 0 LINE",
"266 0 LINE",
"383 377 LINE",
"869 377 LINE",
"976 25 LINE",
"932 -2 OFFCURVE",
"862 -66 OFFCURVE",
"813 -135 OFFCURVE",
"787 -207 OFFCURVE",
"787 -243 QCURVE SMOOTH",
"787 -290 OFFCURVE",
"817 -361 OFFCURVE",
"869 -409 OFFCURVE",
"939 -433 OFFCURVE",
"980 -433 QCURVE SMOOTH",
"1045 -433 OFFCURVE",
"1130 -405 OFFCURVE",
"1158 -389 QCURVE",
"1127 -268 LINE",
"1111 -276 OFFCURVE",
"1058 -295 OFFCURVE",
"1026 -294 QCURVE SMOOTH",
"984 -294 OFFCURVE",
"948 -253 OFFCURVE",
"948 -219 QCURVE SMOOTH",
"948 -153 OFFCURVE",
"1042 -42 OFFCURVE",
"1120 0 QCURVE",
"1168 0 LINE",
"706 1456 LINE",
"551 1456 LINE",
"551 1456 LINE"
);
},
{
closed = 1;
nodes = (
"628 1170 LINE",
"820 538 LINE",
"433 538 LINE",
"433 538 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 58 values pushed */
33 1 6 0 26 1 1 4 12 1 2 1 13 1 3 2 4 74 0 6 0 4 1 6 4 98 0 0 0 60 75 5 1 1 1 61 75 0 2 2 3 91 0 3 3 73 3 76 17 17 26 37 37 17 16 7 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Aogonek;
unicode = 0104;
},
{
glyphname = aogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"798 -40 OFFCURVE",
"707 -175 OFFCURVE",
"707 -243 QCURVE SMOOTH",
"707 -290 OFFCURVE",
"737 -361 OFFCURVE",
"789 -409 OFFCURVE",
"859 -433 OFFCURVE",
"900 -433 QCURVE SMOOTH",
"965 -433 OFFCURVE",
"1050 -405 OFFCURVE",
"1078 -389 QCURVE",
"1047 -268 LINE",
"1031 -276 OFFCURVE",
"978 -295 OFFCURVE",
"946 -294 QCURVE SMOOTH",
"904 -294 OFFCURVE",
"868 -253 OFFCURVE",
"868 -219 QCURVE SMOOTH",
"868 -153 OFFCURVE",
"962 -42 OFFCURVE",
"1040 0 QCURVE",
"1078 0 LINE",
"1078 16 LINE",
"1060 61 OFFCURVE",
"1040 182 OFFCURVE",
"1040 236 QCURVE SMOOTH",
"1040 739 LINE SMOOTH",
"1040 830 OFFCURVE",
"974 966 OFFCURVE",
"859 1057 OFFCURVE",
"701 1102 OFFCURVE",
"609 1102 QCURVE SMOOTH",
"508 1102 OFFCURVE",
"349 1046 OFFCURVE",
"238 955 OFFCURVE",
"179 841 OFFCURVE",
"178 782 QCURVE",
"364 782 LINE",
"364 816 OFFCURVE",
"397 879 OFFCURVE",
"457 925 OFFCURVE",
"544 953 OFFCURVE",
"599 953 QCURVE SMOOTH",
"658 953 OFFCURVE",
"753 923 OFFCURVE",
"819 868 OFFCURVE",
"855 790 OFFCURVE",
"855 741 QCURVE SMOOTH",
"855 656 LINE",
"653 656 LINE SMOOTH",
"540 656 OFFCURVE",
"357 612 OFFCURVE",
"227 523 OFFCURVE",
"156 389 OFFCURVE",
"156 300 QCURVE SMOOTH",
"156 232 OFFCURVE",
"209 115 OFFCURVE",
"306 30 OFFCURVE",
"445 -20 OFFCURVE",
"531 -20 QCURVE SMOOTH",
"584 -20 OFFCURVE",
"678 2 OFFCURVE",
"761 40 OFFCURVE",
"830 90 OFFCURVE",
"858 118 QCURVE",
"861 89 OFFCURVE",
"871 35 OFFCURVE",
"879 14 QCURVE",
"879 14 LINE"
);
},
{
closed = 1;
nodes = (
"504 141 OFFCURVE",
"422 169 OFFCURVE",
"368 218 OFFCURVE",
"341 286 OFFCURVE",
"341 326 QCURVE SMOOTH",
"341 429 OFFCURVE",
"521 525 OFFCURVE",
"683 525 QCURVE SMOOTH",
"855 525 LINE",
"855 306 LINE",
"839 274 OFFCURVE",
"783 215 OFFCURVE",
"706 169 OFFCURVE",
"612 141 OFFCURVE",
"558 141 QCURVE",
"558 141 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 85 values pushed */
73 1 7 8 45 3 2 0 7 56 1 5 0 57 1 6 5 4 74 0 3 2 1 2 3 1 112 0 1 0 8 7 1 8 99 0 2 2 4 91 0 4 4 71 75 9 1 7 7 0 91 0 0 0 69 75 0 5 5 6 91 0 6 6 73 6 76 69 68 76 74 68 82 69 82 37 47 36 20 37 40 39 10 8 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = aogonek;
unicode = 0105;
},
{
glyphname = Cacute;
layers = (
{
components = (
{
name = C;
},
{
name = acute;
transform = "{1, 0, 0, 1, 170, 364}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Cacute;
unicode = 0106;
},
{
glyphname = cacute;
layers = (
{
components = (
{
name = c;
},
{
name = acute;
transform = "{1, 0, 0, 1, 147, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = cacute;
unicode = 0107;
},
{
glyphname = Ccircumflex;
layers = (
{
components = (
{
name = C;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 172, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ccircumflex;
unicode = 0108;
},
{
glyphname = ccircumflex;
layers = (
{
components = (
{
name = c;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 149, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ccircumflex;
unicode = 0109;
},
{
glyphname = uni010A;
layers = (
{
components = (
{
name = C;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 52, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni010A;
unicode = 010A;
},
{
glyphname = uni010B;
layers = (
{
components = (
{
name = c;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 29, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni010B;
unicode = 010B;
},
{
glyphname = Ccaron;
layers = (
{
components = (
{
name = C;
},
{
name = caron;
transform = "{1, 0, 0, 1, 53, 369}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ccaron;
unicode = 010C;
},
{
glyphname = ccaron;
layers = (
{
components = (
{
name = c;
},
{
name = caron;
transform = "{1, 0, 0, 1, 30, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ccaron;
unicode = 010D;
},
{
glyphname = Dcaron;
layers = (
{
components = (
{
name = D;
},
{
name = caron;
transform = "{1, 0, 0, 1, -38, 348}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Dcaron;
unicode = 010E;
},
{
glyphname = dcaron;
layers = (
{
components = (
{
name = d;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 774, -1}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1379;
}
);
note = dcaron;
unicode = 010F;
},
{
glyphname = Emacron;
layers = (
{
components = (
{
name = E;
},
{
name = macron;
transform = "{1, 0, 0, 1, 9, 330}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Emacron;
unicode = 0112;
},
{
glyphname = emacron;
layers = (
{
components = (
{
name = e;
},
{
name = macron;
transform = "{1, 0, 0, 1, 10, 9}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = emacron;
unicode = 0113;
},
{
glyphname = Ebreve;
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 5, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ebreve;
unicode = 0114;
},
{
glyphname = ebreve;
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 6, 87}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ebreve;
unicode = 0115;
},
{
glyphname = Edotaccent;
layers = (
{
components = (
{
name = E;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 5, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Edotaccent;
unicode = 0116;
},
{
glyphname = edotaccent;
layers = (
{
components = (
{
name = e;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 6, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = edotaccent;
unicode = 0117;
},
{
glyphname = Eogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"975 830 LINE",
"367 830 LINE",
"367 1298 LINE",
"1067 1298 LINE",
"1067 1456 LINE",
"182 1456 LINE",
"182 0 LINE",
"811 0 LINE",
"739 -53 OFFCURVE",
"659 -180 OFFCURVE",
"659 -243 QCURVE SMOOTH",
"659 -290 OFFCURVE",
"689 -361 OFFCURVE",
"741 -409 OFFCURVE",
"811 -433 OFFCURVE",
"852 -433 QCURVE SMOOTH",
"917 -433 OFFCURVE",
"1002 -405 OFFCURVE",
"1030 -389 QCURVE",
"999 -268 LINE",
"983 -276 OFFCURVE",
"930 -295 OFFCURVE",
"898 -294 QCURVE SMOOTH",
"856 -294 OFFCURVE",
"820 -253 OFFCURVE",
"820 -219 QCURVE SMOOTH",
"820 -153 OFFCURVE",
"914 -42 OFFCURVE",
"992 0 QCURVE",
"1076 0 LINE",
"1076 157 LINE",
"367 157 LINE",
"367 673 LINE",
"975 673 LINE",
"975 673 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 62 values pushed */
14 1 3 2 15 1 4 3 2 74 0 8 0 0 1 8 0 97 0 7 7 6 89 0 6 6 60 75 0 1 1 2 89 5 1 2 2 61 75 0 3 3 4 91 0 4 4 73 4 76 17 17 17 23 37 37 17 17 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Eogonek;
unicode = 0118;
},
{
glyphname = eogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"966 277 LINE",
"915 211 OFFCURVE",
"761 131 OFFCURVE",
"662 131 QCURVE SMOOTH",
"587 131 OFFCURVE",
"463 187 OFFCURVE",
"374 284 OFFCURVE",
"323 414 OFFCURVE",
"320 488 QCURVE",
"1093 488 LINE",
"1093 571 LINE SMOOTH",
"1093 684 OFFCURVE",
"1036 878 OFFCURVE",
"920 1021 OFFCURVE",
"745 1102 OFFCURVE",
"628 1102 QCURVE SMOOTH",
"535 1102 OFFCURVE",
"358 1026 OFFCURVE",
"219 883 OFFCURVE",
"135 676 OFFCURVE",
"135 545 QCURVE SMOOTH",
"135 503 LINE SMOOTH",
"135 392 OFFCURVE",
"208 203 OFFCURVE",
"341 64 OFFCURVE",
"526 -16 OFFCURVE",
"637 -19 QCURVE",
"586 -67 OFFCURVE",
"531 -172 OFFCURVE",
"531 -225 QCURVE SMOOTH",
"531 -272 OFFCURVE",
"561 -343 OFFCURVE",
"613 -391 OFFCURVE",
"683 -415 OFFCURVE",
"724 -415 QCURVE SMOOTH",
"789 -415 OFFCURVE",
"874 -387 OFFCURVE",
"902 -371 QCURVE",
"871 -250 LINE",
"855 -258 OFFCURVE",
"802 -277 OFFCURVE",
"770 -276 QCURVE SMOOTH",
"728 -276 OFFCURVE",
"692 -235 OFFCURVE",
"692 -201 QCURVE SMOOTH",
"692 -135 OFFCURVE",
"786 -24 OFFCURVE",
"864 18 QCURVE",
"863 18 LINE",
"938 47 OFFCURVE",
"1045 138 OFFCURVE",
"1079 189 QCURVE",
"1079 189 LINE"
);
},
{
closed = 1;
nodes = (
"699 950 OFFCURVE",
"802 898 OFFCURVE",
"870 814 OFFCURVE",
"905 708 OFFCURVE",
"908 654 QCURVE SMOOTH",
"908 640 LINE",
"326 640 LINE",
"337 715 OFFCURVE",
"392 830 OFFCURVE",
"472 909 OFFCURVE",
"572 950 OFFCURVE",
"628 950 QCURVE",
"628 950 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 71 values pushed */
51 1 5 4 13 1 0 2 14 1 1 0 3 74 0 7 0 4 5 7 4 97 8 1 6 6 3 91 0 3 3 71 75 0 5 5 2 91 0 2 2 69 75 0 0 0 1 91 0 1 1 65 1 76 53 52 58 57 52 63 53 63 36 21 41 23 37 41 9 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = eogonek;
unicode = 0119;
},
{
glyphname = Ecaron;
layers = (
{
components = (
{
name = E;
},
{
name = caron;
transform = "{1, 0, 0, 1, 6, 348}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ecaron;
unicode = 011A;
},
{
glyphname = ecaron;
layers = (
{
components = (
{
name = e;
},
{
name = caron;
transform = "{1, 0, 0, 1, 7, 27}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ecaron;
unicode = 011B;
},
{
glyphname = Gcircumflex;
layers = (
{
components = (
{
name = G;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 145, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Gcircumflex;
unicode = 011C;
},
{
glyphname = gcircumflex;
layers = (
{
components = (
{
name = g;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 109, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = gcircumflex;
unicode = 011D;
},
{
glyphname = Gbreve;
layers = (
{
components = (
{
name = G;
},
{
name = breve;
transform = "{1, 0, 0, 1, 25, 429}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Gbreve;
unicode = 011E;
},
{
glyphname = gbreve;
layers = (
{
components = (
{
name = g;
},
{
name = breve;
transform = "{1, 0, 0, 1, -10, 86}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = gbreve;
unicode = 011F;
},
{
glyphname = uni0120;
layers = (
{
components = (
{
name = G;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 25, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0120;
unicode = 0120;
},
{
glyphname = uni0121;
layers = (
{
components = (
{
name = g;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -10, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0121;
unicode = 0121;
},
{
glyphname = Gcommaaccent;
layers = (
{
components = (
{
name = G;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 177, -305}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Gcommaaccent;
unicode = 0122;
},
{
glyphname = gcommaaccent;
layers = (
{
components = (
{
name = g;
},
{
name = commaaccentrotate;
transform = "{1, 0, 0, 1, 7, 88}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = gcommaaccent;
unicode = 0123;
},
{
glyphname = Hcircumflex;
layers = (
{
components = (
{
name = H;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 113, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Hcircumflex;
unicode = 0124;
},
{
glyphname = hcircumflex;
layers = (
{
components = (
{
name = h;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 36, 386}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = hcircumflex;
unicode = 0125;
},
{
glyphname = Itilde;
layers = (
{
components = (
{
name = I;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 85, 353}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Itilde;
unicode = 0128;
},
{
glyphname = itilde;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 184, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = itilde;
unicode = 0129;
},
{
glyphname = Imacron;
layers = (
{
components = (
{
name = I;
},
{
name = macron;
transform = "{1, 0, 0, 1, -42, 330}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Imacron;
unicode = 012A;
},
{
glyphname = imacron;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = macron;
transform = "{1, 0, 0, 1, 56, -12}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = imacron;
unicode = 012B;
},
{
glyphname = Ibreve;
layers = (
{
components = (
{
name = I;
},
{
name = breve;
transform = "{1, 0, 0, 1, -46, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ibreve;
unicode = 012C;
},
{
glyphname = ibreve;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = breve;
transform = "{1, 0, 0, 1, 52, 65}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ibreve;
unicode = 012D;
},
{
glyphname = Iogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"174 1295 LINE",
"515 1295 LINE",
"515 160 LINE",
"174 160 LINE",
"174 0 LINE",
"581 0 LINE",
"509 -53 OFFCURVE",
"429 -180 OFFCURVE",
"429 -243 QCURVE SMOOTH",
"429 -290 OFFCURVE",
"459 -361 OFFCURVE",
"511 -409 OFFCURVE",
"581 -433 OFFCURVE",
"622 -433 QCURVE SMOOTH",
"687 -433 OFFCURVE",
"772 -405 OFFCURVE",
"800 -389 QCURVE",
"769 -268 LINE",
"753 -276 OFFCURVE",
"700 -295 OFFCURVE",
"668 -294 QCURVE SMOOTH",
"626 -294 OFFCURVE",
"590 -253 OFFCURVE",
"590 -219 QCURVE SMOOTH",
"590 -153 OFFCURVE",
"684 -42 OFFCURVE",
"762 0 QCURVE",
"1054 0 LINE",
"1054 160 LINE",
"705 160 LINE",
"705 1295 LINE",
"1054 1295 LINE",
"1054 1456 LINE",
"174 1456 LINE",
"174 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
16 1 4 3 17 1 5 4 2 74 8 1 1 1 0 89 0 0 0 60 75 7 1 2 2 3 89 6 1 3 3 61 75 0 4 4 5 91 0 5 5 73 5 76 17 17 23 37 37 17 17 17 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Iogonek;
unicode = 012E;
},
{
glyphname = iogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"203 921 LINE",
"571 921 LINE",
"571 160 LINE",
"203 160 LINE",
"203 0 LINE",
"575 0 LINE",
"503 -53 OFFCURVE",
"423 -180 OFFCURVE",
"423 -243 QCURVE SMOOTH",
"423 -290 OFFCURVE",
"453 -361 OFFCURVE",
"505 -409 OFFCURVE",
"575 -433 OFFCURVE",
"616 -433 QCURVE SMOOTH",
"681 -433 OFFCURVE",
"766 -405 OFFCURVE",
"794 -389 QCURVE",
"763 -268 LINE",
"747 -276 OFFCURVE",
"694 -295 OFFCURVE",
"662 -294 QCURVE SMOOTH",
"620 -294 OFFCURVE",
"584 -253 OFFCURVE",
"584 -219 QCURVE SMOOTH",
"584 -153 OFFCURVE",
"678 -42 OFFCURVE",
"756 0 QCURVE",
"1109 0 LINE",
"1109 160 LINE",
"756 160 LINE",
"756 1082 LINE",
"203 1082 LINE",
"203 1082 LINE"
);
},
{
closed = 1;
nodes = (
"547 1321 OFFCURVE",
"602 1261 OFFCURVE",
"658 1261 QCURVE SMOOTH",
"713 1261 OFFCURVE",
"769 1321 OFFCURVE",
"769 1366 QCURVE SMOOTH",
"769 1412 OFFCURVE",
"713 1475 OFFCURVE",
"658 1475 QCURVE SMOOTH",
"602 1475 OFFCURVE",
"547 1412 OFFCURVE",
"547 1366 QCURVE",
"547 1366 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 67 values pushed */
14 1 3 2 15 1 4 3 2 74 0 9 9 8 91 0 8 8 68 75 0 7 7 0 89 0 0 0 63 75 6 1 1 1 2 89 5 1 2 2 61 75 0 3 3 4 91 0 4 4 73 4 76 42 40 35 17 17 23 37 37 17 17 16 10 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = iogonek;
unicode = 012F;
},
{
glyphname = Idotaccent;
layers = (
{
components = (
{
name = I;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -46, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Idotaccent;
unicode = 0130;
},
{
glyphname = Jcircumflex;
layers = (
{
components = (
{
name = J;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 449, 334}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Jcircumflex;
unicode = 0134;
},
{
glyphname = jcircumflex;
layers = (
{
components = (
{
name = uni0237;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 215, -5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = jcircumflex;
unicode = 0135;
},
{
glyphname = Kcommaaccent;
layers = (
{
components = (
{
name = K;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 182, -280}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Kcommaaccent;
unicode = 0136;
},
{
glyphname = kcommaaccent;
layers = (
{
components = (
{
name = k;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 98, -278}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = kcommaaccent;
unicode = 0137;
},
{
glyphname = Lacute;
layers = (
{
components = (
{
name = L;
},
{
name = acute;
transform = "{1, 0, 0, 1, -202, 311}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Lacute;
unicode = 0139;
},
{
glyphname = lacute;
layers = (
{
components = (
{
name = l;
},
{
name = acute;
transform = "{1, 0, 0, 1, 162, 413}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = lacute;
unicode = 013A;
},
{
glyphname = Lcommaaccent;
layers = (
{
components = (
{
name = L;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 183, -286}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Lcommaaccent;
unicode = 013B;
},
{
glyphname = lcommaaccent;
layers = (
{
components = (
{
name = l;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 210, -285}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = lcommaaccent;
unicode = 013C;
},
{
glyphname = Lcaron;
layers = (
{
components = (
{
name = L;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 242, -102}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Lcaron;
unicode = 013D;
},
{
glyphname = lcaron;
layers = (
{
components = (
{
name = l;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 513, -18}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1379;
}
);
note = lcaron;
unicode = 013E;
},
{
glyphname = Ldot;
layers = (
{
components = (
{
name = L;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 116, -571}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ldot;
unicode = 013F;
},
{
glyphname = ldot;
layers = (
{
components = (
{
name = l;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 384, -537}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1449;
}
);
note = ldot;
unicode = 0140;
},
{
glyphname = Nacute;
layers = (
{
components = (
{
name = N;
},
{
name = acute;
transform = "{1, 0, 0, 1, 94, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Nacute;
unicode = 0143;
},
{
glyphname = nacute;
layers = (
{
components = (
{
name = n;
},
{
name = acute;
transform = "{1, 0, 0, 1, 109, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = nacute;
unicode = 0144;
},
{
glyphname = Ncommaaccent;
layers = (
{
components = (
{
name = N;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 132, -286}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ncommaaccent;
unicode = 0145;
},
{
glyphname = ncommaaccent;
layers = (
{
components = (
{
name = n;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 147, -286}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ncommaaccent;
unicode = 0146;
},
{
glyphname = Ncaron;
layers = (
{
components = (
{
name = N;
},
{
name = caron;
transform = "{1, 0, 0, 1, -22, 348}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ncaron;
unicode = 0147;
},
{
glyphname = ncaron;
layers = (
{
components = (
{
name = n;
},
{
name = caron;
transform = "{1, 0, 0, 1, -7, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ncaron;
unicode = 0148;
},
{
glyphname = napostrophe;
layers = (
{
components = (
{
name = n;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, -531, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = napostrophe;
unicode = 0149;
},
{
glyphname = Omacron;
layers = (
{
components = (
{
name = O;
},
{
name = macron;
transform = "{1, 0, 0, 1, 23, 351}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Omacron;
unicode = 014C;
},
{
glyphname = omacron;
layers = (
{
components = (
{
name = o;
},
{
name = macron;
transform = "{1, 0, 0, 1, 4, 8}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = omacron;
unicode = 014D;
},
{
glyphname = Obreve;
layers = (
{
components = (
{
name = O;
},
{
name = breve;
transform = "{1, 0, 0, 1, 19, 429}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Obreve;
unicode = 014E;
},
{
glyphname = obreve;
layers = (
{
components = (
{
name = o;
},
{
name = breve;
transform = "{1, 0, 0, 1, 0, 86}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = obreve;
unicode = 014F;
},
{
glyphname = Ohungarumlaut;
layers = (
{
components = (
{
name = O;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 153, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ohungarumlaut;
unicode = 0150;
},
{
glyphname = ohungarumlaut;
layers = (
{
components = (
{
name = o;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 134, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ohungarumlaut;
unicode = 0151;
},
{
glyphname = Racute;
layers = (
{
components = (
{
name = R;
},
{
name = acute;
transform = "{1, 0, 0, 1, 120, 331}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Racute;
unicode = 0154;
},
{
glyphname = racute;
layers = (
{
components = (
{
name = r;
},
{
name = acute;
transform = "{1, 0, 0, 1, 88, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = racute;
unicode = 0155;
},
{
glyphname = Rcommaaccent;
layers = (
{
components = (
{
name = R;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 156, -286}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Rcommaaccent;
unicode = 0156;
},
{
glyphname = rcommaaccent;
layers = (
{
components = (
{
name = r;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, -30, -286}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = rcommaaccent;
unicode = 0157;
},
{
glyphname = Rcaron;
layers = (
{
components = (
{
name = R;
},
{
name = caron;
transform = "{1, 0, 0, 1, 3, 336}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Rcaron;
unicode = 0158;
},
{
glyphname = rcaron;
layers = (
{
components = (
{
name = r;
},
{
name = caron;
transform = "{1, 0, 0, 1, -28, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = rcaron;
unicode = 0159;
},
{
glyphname = Sacute;
layers = (
{
components = (
{
name = S;
},
{
name = acute;
transform = "{1, 0, 0, 1, 130, 364}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Sacute;
unicode = 015A;
},
{
glyphname = sacute;
layers = (
{
components = (
{
name = s;
},
{
name = acute;
transform = "{1, 0, 0, 1, 132, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = sacute;
unicode = 015B;
},
{
glyphname = Scircumflex;
layers = (
{
components = (
{
name = S;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 132, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Scircumflex;
unicode = 015C;
},
{
glyphname = scircumflex;
layers = (
{
components = (
{
name = s;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 134, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = scircumflex;
unicode = 015D;
},
{
glyphname = Scedilla;
layers = (
{
components = (
{
name = S;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 81, -9}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Scedilla;
unicode = 015E;
},
{
glyphname = scedilla;
layers = (
{
components = (
{
name = s;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 68, -8}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = scedilla;
unicode = 015F;
},
{
glyphname = uni0218;
layers = (
{
components = (
{
name = S;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 181, -306}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0218;
unicode = 0218;
},
{
glyphname = uni0219;
layers = (
{
components = (
{
name = s;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 168, -305}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0219;
unicode = 0219;
},
{
glyphname = Scaron;
layers = (
{
components = (
{
name = S;
},
{
name = caron;
transform = "{1, 0, 0, 1, 13, 369}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Scaron;
unicode = 0160;
},
{
glyphname = scaron;
layers = (
{
components = (
{
name = s;
},
{
name = caron;
transform = "{1, 0, 0, 1, 15, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = scaron;
unicode = 0161;
changeCount = 1;
},
{
glyphname = uni021A;
layers = (
{
components = (
{
name = T;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 163, -296}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni021A;
unicode = 021A;
},
{
glyphname = uni021B;
layers = (
{
components = (
{
name = t;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 261, -296}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni021B;
unicode = 021B;
},
{
glyphname = uni0162;
layers = (
{
components = (
{
name = T;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 63, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0162;
unicode = 0162;
},
{
glyphname = uni0162.smcp;
layers = (
{
components = (
{
name = T.smcp;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 48, 2}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0162.smcp;
},
{
glyphname = uni0163;
layers = (
{
components = (
{
name = t;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 161, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0163;
unicode = 0163;
},
{
glyphname = Tcaron;
layers = (
{
components = (
{
name = T;
},
{
name = caron;
transform = "{1, 0, 0, 1, 13, 336}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Tcaron;
unicode = 0164;
},
{
glyphname = tcaron;
layers = (
{
components = (
{
name = t;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 412, 157}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1269;
}
);
note = tcaron;
unicode = 0165;
},
{
glyphname = Utilde;
layers = (
{
components = (
{
name = U;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 177, 341}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Utilde;
unicode = 0168;
},
{
glyphname = utilde;
layers = (
{
components = (
{
name = u;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 131, 11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = utilde;
unicode = 0169;
},
{
glyphname = Umacron;
layers = (
{
components = (
{
name = U;
},
{
name = macron;
transform = "{1, 0, 0, 1, 49, 318}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Umacron;
unicode = 016A;
},
{
glyphname = umacron;
layers = (
{
components = (
{
name = u;
},
{
name = macron;
transform = "{1, 0, 0, 1, 3, -11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = umacron;
unicode = 016B;
},
{
glyphname = Ubreve;
layers = (
{
components = (
{
name = U;
},
{
name = breve;
transform = "{1, 0, 0, 1, 45, 396}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ubreve;
unicode = 016C;
},
{
glyphname = ubreve;
layers = (
{
components = (
{
name = u;
},
{
name = breve;
transform = "{1, 0, 0, 1, 0, 66}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ubreve;
unicode = 016D;
},
{
glyphname = Uring;
layers = (
{
components = (
{
name = U;
},
{
name = ring;
transform = "{1, 0, 0, 1, 44, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Uring;
unicode = 016E;
},
{
glyphname = uring;
layers = (
{
components = (
{
name = u;
},
{
name = ring;
transform = "{1, 0, 0, 1, -1, 78}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uring;
unicode = 016F;
},
{
glyphname = Uhungarumlaut;
layers = (
{
components = (
{
name = U;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 179, 335}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Uhungarumlaut;
unicode = 0170;
},
{
glyphname = uhungarumlaut;
layers = (
{
components = (
{
name = u;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 133, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uhungarumlaut;
unicode = 0171;
},
{
glyphname = Uogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"909 1456 LINE",
"906 470 LINE SMOOTH",
"904 405 OFFCURVE",
"866 285 OFFCURVE",
"793 192 OFFCURVE",
"685 137 OFFCURVE",
"614 137 QCURVE SMOOTH",
"543 137 OFFCURVE",
"434 193 OFFCURVE",
"361 285 OFFCURVE",
"322 405 OFFCURVE",
"321 470 QCURVE SMOOTH",
"317 1456 LINE",
"141 1456 LINE",
"139 470 LINE SMOOTH",
"140 369 OFFCURVE",
"208 193 OFFCURVE",
"329 61 OFFCURVE",
"498 -17 OFFCURVE",
"602 -19 QCURVE",
"564 -61 OFFCURVE",
"524 -151 OFFCURVE",
"524 -196 QCURVE SMOOTH",
"524 -243 OFFCURVE",
"554 -314 OFFCURVE",
"606 -362 OFFCURVE",
"676 -386 OFFCURVE",
"717 -386 QCURVE SMOOTH",
"782 -386 OFFCURVE",
"867 -358 OFFCURVE",
"895 -342 QCURVE",
"864 -221 LINE",
"848 -229 OFFCURVE",
"795 -248 OFFCURVE",
"763 -247 QCURVE SMOOTH",
"721 -247 OFFCURVE",
"685 -206 OFFCURVE",
"685 -172 QCURVE SMOOTH",
"685 -114 OFFCURVE",
"757 -15 OFFCURVE",
"819 25 QCURVE",
"880 54 OFFCURVE",
"980 144 OFFCURVE",
"1050 260 OFFCURVE",
"1089 396 OFFCURVE",
"1090 470 QCURVE SMOOTH",
"1088 1456 LINE",
"1088 1456 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
15 1 0 2 16 1 1 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
35 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
6 5 2 3 3 60 75 0 4 4 2 91 0 2 2 69 75 0 0 0 1 91 0 1 1 65 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 25 values pushed */
0 0 0 1 0 1 95 6 5 2 3 3 60 75 0 4 4 2 91 0 2 2 69 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 46 0 46 37 21 23 37 43 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Uogonek;
unicode = 0172;
},
{
glyphname = uogonek;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1055 0 LINE",
"1055 1082 LINE",
"869 1082 LINE",
"869 306 LINE",
"835 228 OFFCURVE",
"696 136 OFFCURVE",
"583 136 QCURVE SMOOTH",
"530 136 OFFCURVE",
"449 164 OFFCURVE",
"393 233 OFFCURVE",
"365 349 OFFCURVE",
"365 437 QCURVE SMOOTH",
"365 1082 LINE",
"180 1082 LINE",
"180 439 LINE SMOOTH",
"180 318 OFFCURVE",
"233 145 OFFCURVE",
"331 33 OFFCURVE",
"469 -20 OFFCURVE",
"554 -20 QCURVE SMOOTH",
"660 -20 OFFCURVE",
"822 69 OFFCURVE",
"876 149 QCURVE",
"886 9 LINE",
"808 -45 OFFCURVE",
"721 -177 OFFCURVE",
"721 -243 QCURVE SMOOTH",
"721 -290 OFFCURVE",
"751 -361 OFFCURVE",
"803 -409 OFFCURVE",
"873 -433 OFFCURVE",
"914 -433 QCURVE SMOOTH",
"979 -433 OFFCURVE",
"1064 -405 OFFCURVE",
"1092 -389 QCURVE",
"1061 -268 LINE",
"1045 -276 OFFCURVE",
"992 -295 OFFCURVE",
"960 -294 QCURVE SMOOTH",
"918 -294 OFFCURVE",
"882 -253 OFFCURVE",
"882 -219 QCURVE SMOOTH",
"882 -153 OFFCURVE",
"976 -42 OFFCURVE",
"1054 0 QCURVE",
"1054 0 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 55 values pushed */
41 22 2 4 3 44 1 2 4 9 1 0 2 10 1 1 0 4 74 5 1 3 3 63 75 0 4 4 2 91 0 2 2 69 75 0 0 0 1 92 0 1 1 73 1 76 19 37 21 42 37 37 6 8 26 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uogonek;
unicode = 0173;
},
{
glyphname = Wcircumflex;
layers = (
{
components = (
{
name = W;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 127, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Wcircumflex;
unicode = 0174;
},
{
glyphname = wcircumflex;
layers = (
{
components = (
{
name = w;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 126, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = wcircumflex;
unicode = 0175;
},
{
glyphname = Ycircumflex;
layers = (
{
components = (
{
name = Y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 115, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ycircumflex;
unicode = 0176;
},
{
glyphname = ycircumflex;
layers = (
{
components = (
{
name = y;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 139, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ycircumflex;
unicode = 0177;
},
{
glyphname = Ydieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -4, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ydieresis;
unicode = 0178;
},
{
glyphname = Zacute;
layers = (
{
components = (
{
name = Z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 157, 331}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zacute;
unicode = 0179;
},
{
glyphname = zacute;
layers = (
{
components = (
{
name = z;
},
{
name = acute;
transform = "{1, 0, 0, 1, 154, 1}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = zacute;
unicode = 017A;
},
{
glyphname = Zdotaccent;
layers = (
{
components = (
{
name = Z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 39, 335}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zdotaccent;
unicode = 017B;
},
{
glyphname = zdotaccent;
layers = (
{
components = (
{
name = z;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 36, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = zdotaccent;
unicode = 017C;
},
{
glyphname = Zcaron;
layers = (
{
components = (
{
name = Z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 40, 336}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zcaron;
unicode = 017D;
},
{
glyphname = zcaron;
layers = (
{
components = (
{
name = z;
},
{
name = caron;
transform = "{1, 0, 0, 1, 37, 6}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = zcaron;
unicode = 017E;
},
{
glyphname = AEacute;
layers = (
{
components = (
{
name = AE;
},
{
name = acute;
transform = "{1, 0, 0, 1, 215, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = AEacute;
unicode = 01FC;
},
{
glyphname = aeacute;
layers = (
{
components = (
{
name = ae;
},
{
name = acute;
transform = "{1, 0, 0, 1, 152, 22}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = aeacute;
unicode = 01FD;
},
{
glyphname = Oslashacute;
layers = (
{
components = (
{
name = Oslash;
},
{
name = acute;
transform = "{1, 0, 0, 1, 123, 405}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Oslashacute;
unicode = 01FE;
},
{
glyphname = oslashacute;
layers = (
{
components = (
{
name = oslash;
},
{
name = acute;
transform = "{1, 0, 0, 1, 80, 20}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = oslashacute;
unicode = 01FF;
},
{
glyphname = Dcroat.smcp;
layers = (
{
components = (
{
name = D.smcp;
},
{
name = crossbar;
transform = "{1, 0, 0, 1, -334, -136}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Dcroat.smcp;
},
{
glyphname = Eth.smcp;
layers = (
{
components = (
{
name = D.smcp;
},
{
name = crossbar;
transform = "{1, 0, 0, 1, -334, -136}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Eth.smcp;
},
{
glyphname = Tbar.smcp;
layers = (
{
components = (
{
name = T.smcp;
},
{
name = crossbar;
transform = "{1, 0, 0, 1, -13, -32}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Tbar.smcp;
},
{
glyphname = Agrave.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, -117, 54}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Agrave.smcp;
},
{
glyphname = Aacute.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 119, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Aacute.smcp;
},
{
glyphname = Acircumflex.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 121, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Acircumflex.smcp;
},
{
glyphname = Atilde.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 133, 61}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Atilde.smcp;
},
{
glyphname = Adieresis.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 1, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Adieresis.smcp;
},
{
glyphname = Aring.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = ring;
transform = "{1, 0, 0, 1, 0, 128}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Aring.smcp;
},
{
glyphname = Aringacute.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = ringacute;
transform = "{1, 0, 0, 1, -18, 130}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Aringacute.smcp;
},
{
glyphname = Ccedilla.smcp;
layers = (
{
components = (
{
name = C.smcp;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 42, -3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ccedilla.smcp;
},
{
glyphname = Egrave.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, -147, 54}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Egrave.smcp;
},
{
glyphname = Eacute.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 89, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Eacute.smcp;
},
{
glyphname = Ecircumflex.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 91, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ecircumflex.smcp;
},
{
glyphname = Edieresis.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -28, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Edieresis.smcp;
},
{
glyphname = Igrave.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, -90, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Igrave.smcp;
},
{
glyphname = Iacute.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 146, 23}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Iacute.smcp;
},
{
glyphname = Icircumflex.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 148, 27}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Icircumflex.smcp;
},
{
glyphname = Idieresis.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 28, 27}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Idieresis.smcp;
},
{
glyphname = Ntilde.smcp;
layers = (
{
components = (
{
name = N.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 220, 61}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ntilde.smcp;
},
{
glyphname = Ograve.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, -83, 54}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ograve.smcp;
},
{
glyphname = Oacute.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 153, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Oacute.smcp;
},
{
glyphname = Ocircumflex.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 155, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ocircumflex.smcp;
},
{
glyphname = Otilde.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 167, 61}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Otilde.smcp;
},
{
glyphname = Odieresis.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 35, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Odieresis.smcp;
},
{
glyphname = Ugrave.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = grave;
transform = "{1, 0, 0, 1, -87, 54}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ugrave.smcp;
},
{
glyphname = Uacute.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 149, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Uacute.smcp;
},
{
glyphname = Ucircumflex.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 151, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ucircumflex.smcp;
},
{
glyphname = Udieresis.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 31, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Udieresis.smcp;
},
{
glyphname = Yacute.smcp;
layers = (
{
components = (
{
name = Y.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 98, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Yacute.smcp;
},
{
glyphname = Amacron.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 5, 38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Amacron.smcp;
},
{
glyphname = Abreve.smcp;
layers = (
{
components = (
{
name = A.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 1, 116}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Abreve.smcp;
},
{
glyphname = Aogonek.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"531 1165 LINE",
"54 0 LINE",
"242 0 LINE",
"352 279 LINE",
"870 279 LINE",
"973 15 LINE",
"891 -39 OFFCURVE",
"798 -174 OFFCURVE",
"798 -243 QCURVE SMOOTH",
"798 -290 OFFCURVE",
"828 -361 OFFCURVE",
"880 -409 OFFCURVE",
"950 -433 OFFCURVE",
"991 -433 QCURVE SMOOTH",
"1056 -433 OFFCURVE",
"1141 -405 OFFCURVE",
"1169 -389 QCURVE",
"1138 -268 LINE",
"1122 -276 OFFCURVE",
"1069 -295 OFFCURVE",
"1037 -294 QCURVE SMOOTH",
"995 -294 OFFCURVE",
"959 -253 OFFCURVE",
"959 -219 QCURVE SMOOTH",
"959 -153 OFFCURVE",
"1053 -42 OFFCURVE",
"1131 0 QCURVE",
"1166 0 LINE",
"696 1165 LINE",
"696 1165 LINE"
);
},
{
closed = 1;
nodes = (
"612 937 LINE",
"811 430 LINE",
"412 430 LINE",
"412 430 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 65 values pushed */
31 1 6 5 23 1 0 3 11 1 1 0 12 1 2 1 4 74 7 1 5 6 5 114 0 6 0 3 0 6 3 98 4 1 0 0 61 75 0 1 1 2 91 0 2 2 73 2 76 0 0 30 29 0 28 0 28 17 24 37 37 17 8 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Aogonek.smcp;
},
{
glyphname = Cacute.smcp;
layers = (
{
components = (
{
name = C.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 104, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Cacute.smcp;
},
{
glyphname = Ccircumflex.smcp;
layers = (
{
components = (
{
name = C.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 106, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ccircumflex.smcp;
},
{
glyphname = Ccaron.smcp;
layers = (
{
components = (
{
name = C.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, -12, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ccaron.smcp;
},
{
glyphname = Dcaron.smcp;
layers = (
{
components = (
{
name = D.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, -69, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Dcaron.smcp;
},
{
glyphname = Emacron.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, -24, 38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Emacron.smcp;
},
{
glyphname = Ebreve.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, -28, 116}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ebreve.smcp;
},
{
glyphname = Edotaccent.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, -28, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Edotaccent.smcp;
},
{
glyphname = Eogonek.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"965 678 LINE",
"389 678 LINE",
"389 1012 LINE",
"1053 1012 LINE",
"1053 1165 LINE",
"200 1165 LINE",
"200 0 LINE",
"743 0 LINE",
"671 -53 OFFCURVE",
"591 -180 OFFCURVE",
"591 -243 QCURVE SMOOTH",
"591 -290 OFFCURVE",
"621 -361 OFFCURVE",
"673 -409 OFFCURVE",
"743 -433 OFFCURVE",
"784 -433 QCURVE SMOOTH",
"849 -433 OFFCURVE",
"934 -405 OFFCURVE",
"962 -389 QCURVE",
"931 -268 LINE",
"915 -276 OFFCURVE",
"862 -295 OFFCURVE",
"830 -294 QCURVE SMOOTH",
"788 -294 OFFCURVE",
"752 -253 OFFCURVE",
"752 -219 QCURVE SMOOTH",
"752 -153 OFFCURVE",
"846 -42 OFFCURVE",
"924 0 QCURVE",
"1059 0 LINE",
"1059 151 LINE",
"389 151 LINE",
"389 526 LINE",
"965 526 LINE",
"965 526 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 60 values pushed */
14 1 3 2 15 1 4 3 2 74 0 6 0 7 8 6 7 97 0 8 0 0 1 8 0 97 0 1 1 2 89 5 1 2 2 61 75 0 3 3 4 91 0 4 4 73 4 76 17 17 17 23 37 37 17 17 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Eogonek.smcp;
},
{
glyphname = Ecaron.smcp;
layers = (
{
components = (
{
name = E.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, -27, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ecaron.smcp;
},
{
glyphname = Gcircumflex.smcp;
layers = (
{
components = (
{
name = G.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 116, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Gcircumflex.smcp;
},
{
glyphname = Gbreve.smcp;
layers = (
{
components = (
{
name = G.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, -3, 116}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Gbreve.smcp;
},
{
glyphname = Gcommaaccent.smcp;
layers = (
{
components = (
{
name = G.smcp;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 157, -299}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Gcommaaccent.smcp;
},
{
glyphname = Hcircumflex.smcp;
layers = (
{
components = (
{
name = H.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 158, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Hcircumflex.smcp;
},
{
glyphname = Itilde.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 160, 33}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Itilde.smcp;
},
{
glyphname = Imacron.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 32, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Imacron.smcp;
},
{
glyphname = Ibreve.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 28, 88}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ibreve.smcp;
},
{
glyphname = Iogonek.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"217 1003 LINE",
"532 1003 LINE",
"532 160 LINE",
"217 160 LINE",
"217 0 LINE",
"581 0 LINE",
"509 -53 OFFCURVE",
"429 -180 OFFCURVE",
"429 -243 QCURVE SMOOTH",
"429 -290 OFFCURVE",
"459 -361 OFFCURVE",
"511 -409 OFFCURVE",
"581 -433 OFFCURVE",
"622 -433 QCURVE SMOOTH",
"687 -433 OFFCURVE",
"772 -405 OFFCURVE",
"800 -389 QCURVE",
"769 -268 LINE",
"753 -276 OFFCURVE",
"700 -295 OFFCURVE",
"668 -294 QCURVE SMOOTH",
"626 -294 OFFCURVE",
"590 -253 OFFCURVE",
"590 -219 QCURVE SMOOTH",
"590 -153 OFFCURVE",
"684 -42 OFFCURVE",
"762 0 QCURVE",
"1040 0 LINE",
"1040 160 LINE",
"717 160 LINE",
"717 1003 LINE",
"1040 1003 LINE",
"1040 1164 LINE",
"217 1164 LINE",
"217 1164 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 54 values pushed */
16 1 4 3 17 1 5 4 2 74 0 0 8 1 1 2 0 1 97 7 1 2 2 3 89 6 1 3 3 61 75 0 4 4 5 91 0 5 5 73 5 76 17 17 23 37 37 17 17 17 16 9 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Iogonek.smcp;
},
{
glyphname = Idotaccent.smcp;
layers = (
{
components = (
{
name = I.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 28, 27}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Idotaccent.smcp;
},
{
glyphname = Jcircumflex.smcp;
layers = (
{
components = (
{
name = J.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 345, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Jcircumflex.smcp;
},
{
glyphname = Kcommaaccent.smcp;
layers = (
{
components = (
{
name = K.smcp;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 107, -290}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Kcommaaccent.smcp;
},
{
glyphname = Lacute.smcp;
layers = (
{
components = (
{
name = L.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, -228, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Lacute.smcp;
},
{
glyphname = Lcommaaccent.smcp;
layers = (
{
components = (
{
name = L.smcp;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 104, -288}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Lcommaaccent.smcp;
},
{
glyphname = Lcaron.smcp;
layers = (
{
components = (
{
name = L.smcp;
},
{
name = quoteright;
transform = "{1, 0, 0, 1, 148, -393}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Lcaron.smcp;
},
{
glyphname = Ldot.smcp;
layers = (
{
components = (
{
name = L.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 25, -713}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ldot.smcp;
},
{
glyphname = Nacute.smcp;
layers = (
{
components = (
{
name = N.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 206, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Nacute.smcp;
},
{
glyphname = Ncommaaccent.smcp;
layers = (
{
components = (
{
name = N.smcp;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 239, -292}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ncommaaccent.smcp;
},
{
glyphname = Ncaron.smcp;
layers = (
{
components = (
{
name = N.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 89, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ncaron.smcp;
},
{
glyphname = Omacron.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 39, 38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Omacron.smcp;
},
{
glyphname = Obreve.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 35, 116}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Obreve.smcp;
},
{
glyphname = Ohungarumlaut.smcp;
layers = (
{
components = (
{
name = O.smcp;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 169, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ohungarumlaut.smcp;
},
{
glyphname = Racute.smcp;
layers = (
{
components = (
{
name = R.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 30, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Racute.smcp;
},
{
glyphname = Rcommaaccent.smcp;
layers = (
{
components = (
{
name = R.smcp;
},
{
name = commaaccent;
transform = "{1, 0, 0, 1, 69, -288}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Rcommaaccent.smcp;
},
{
glyphname = Rcaron.smcp;
layers = (
{
components = (
{
name = R.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, -86, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Rcaron.smcp;
},
{
glyphname = Sacute.smcp;
layers = (
{
components = (
{
name = S.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 113, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Sacute.smcp;
},
{
glyphname = Scircumflex.smcp;
layers = (
{
components = (
{
name = S.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 115, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Scircumflex.smcp;
},
{
glyphname = Scedilla.smcp;
layers = (
{
components = (
{
name = S.smcp;
},
{
name = cedilla;
transform = "{1, 0, 0, 1, 61, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Scedilla.smcp;
},
{
glyphname = Scaron.smcp;
layers = (
{
components = (
{
name = S.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, -3, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Scaron.smcp;
},
{
glyphname = Tcaron.smcp;
layers = (
{
components = (
{
name = T.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, -7, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Tcaron.smcp;
},
{
glyphname = Utilde.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 163, 61}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Utilde.smcp;
},
{
glyphname = Umacron.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = macron;
transform = "{1, 0, 0, 1, 35, 38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Umacron.smcp;
},
{
glyphname = Ubreve.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = breve;
transform = "{1, 0, 0, 1, 31, 116}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ubreve.smcp;
},
{
glyphname = Uring.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = ring;
transform = "{1, 0, 0, 1, 30, 128}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Uring.smcp;
},
{
glyphname = Uhungarumlaut.smcp;
layers = (
{
components = (
{
name = U.smcp;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 165, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Uhungarumlaut.smcp;
},
{
glyphname = Uogonek.smcp;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"883 1165 LINE",
"882 385 LINE SMOOTH",
"881 326 OFFCURVE",
"844 233 OFFCURVE",
"777 169 OFFCURVE",
"682 135 OFFCURVE",
"623 135 QCURVE SMOOTH",
"564 135 OFFCURVE",
"469 169 OFFCURVE",
"402 233 OFFCURVE",
"365 326 OFFCURVE",
"364 385 QCURVE SMOOTH",
"363 1165 LINE",
"182 1165 LINE",
"181 385 LINE SMOOTH",
"182 289 OFFCURVE",
"252 140 OFFCURVE",
"371 38 OFFCURVE",
"531 -16 OFFCURVE",
"623 -16 QCURVE SMOOTH",
"627 -16 LINE",
"594 -56 OFFCURVE",
"558 -140 OFFCURVE",
"558 -182 QCURVE SMOOTH",
"558 -229 OFFCURVE",
"588 -300 OFFCURVE",
"640 -348 OFFCURVE",
"710 -372 OFFCURVE",
"751 -372 QCURVE SMOOTH",
"816 -372 OFFCURVE",
"901 -344 OFFCURVE",
"929 -328 QCURVE",
"898 -207 LINE",
"882 -215 OFFCURVE",
"829 -234 OFFCURVE",
"797 -233 QCURVE SMOOTH",
"755 -233 OFFCURVE",
"719 -192 OFFCURVE",
"719 -158 QCURVE SMOOTH",
"719 -104 OFFCURVE",
"782 -10 OFFCURVE",
"838 28 QCURVE",
"888 51 OFFCURVE",
"972 121 OFFCURVE",
"1032 211 OFFCURVE",
"1066 321 OFFCURVE",
"1067 385 QCURVE SMOOTH",
"1066 1165 LINE",
"1066 1165 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 10 values pushed */
15 1 0 2 16 1 1 0 2 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
23 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 28 values pushed */
6 5 2 3 4 3 114 0 4 4 2 91 0 2 2 69 75 0 0 0 1 91 0 1 1 65 1 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 25 values pushed */
6 5 2 3 4 3 114 0 0 0 1 0 1 95 0 4 4 2 91 0 2 2 69 2 76 
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
0 0 0 47 0 47 37 21 39 37 43 7 8 25 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = Uogonek.smcp;
},
{
glyphname = Wcircumflex.smcp;
layers = (
{
components = (
{
name = W.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 301, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Wcircumflex.smcp;
},
{
glyphname = Ycircumflex.smcp;
layers = (
{
components = (
{
name = Y.smcp;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 100, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ycircumflex.smcp;
},
{
glyphname = Ydieresis.smcp;
layers = (
{
components = (
{
name = Y.smcp;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -19, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ydieresis.smcp;
},
{
glyphname = Zacute.smcp;
layers = (
{
components = (
{
name = Z.smcp;
},
{
name = acute;
transform = "{1, 0, 0, 1, 160, 51}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zacute.smcp;
},
{
glyphname = Zdotaccent.smcp;
layers = (
{
components = (
{
name = Z.smcp;
},
{
name = dotaccent;
transform = "{1, 0, 0, 1, 42, 55}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zdotaccent.smcp;
},
{
glyphname = Zcaron.smcp;
layers = (
{
components = (
{
name = Z.smcp;
},
{
name = caron;
transform = "{1, 0, 0, 1, 43, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zcaron.smcp;
},
{
glyphname = Alphatonos;
layers = (
{
components = (
{
name = A;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -320, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Alphatonos;
unicode = 0386;
},
{
glyphname = Epsilontonos;
layers = (
{
components = (
{
name = E;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -538, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1329;
}
);
note = Epsilontonos;
unicode = 0388;
},
{
glyphname = Etatonos;
layers = (
{
components = (
{
name = H;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -556, 2}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1329;
}
);
note = Etatonos;
unicode = 0389;
},
{
glyphname = Iotatonos;
layers = (
{
components = (
{
name = I;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -573, 2}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1329;
}
);
note = Iotatonos;
unicode = 038A;
},
{
glyphname = Omicrontonos;
layers = (
{
components = (
{
name = O;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -544, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1249;
}
);
note = Omicrontonos;
unicode = 038C;
},
{
glyphname = Upsilontonos;
layers = (
{
components = (
{
name = Y;
transform = "{1, 0, 0, 1, 100, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -631, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1329;
}
);
note = Upsilontonos;
unicode = 038E;
},
{
glyphname = Omegatonos;
layers = (
{
components = (
{
name = Omega;
transform = "{1, 0, 0, 1, 20, 0}";
},
{
name = tonos;
transform = "{1, 0, 0, 1, -548, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1249;
}
);
note = Omegatonos;
unicode = 038F;
},
{
glyphname = iotadieresistonos;
layers = (
{
components = (
{
name = iota;
},
{
name = dieresistonos;
transform = "{1, 0, 0, 1, -28, -69}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = iotadieresistonos;
unicode = 0390;
},
{
glyphname = Alpha;
layers = (
{
components = (
{
name = A;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Alpha;
unicode = 0391;
},
{
glyphname = Beta;
layers = (
{
components = (
{
name = B;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Beta;
unicode = 0392;
},
{
glyphname = Epsilon;
layers = (
{
components = (
{
name = E;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Epsilon;
unicode = 0395;
},
{
glyphname = Zeta;
layers = (
{
components = (
{
name = Z;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Zeta;
unicode = 0396;
},
{
glyphname = Eta;
layers = (
{
components = (
{
name = H;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Eta;
unicode = 0397;
},
{
glyphname = Iota;
layers = (
{
components = (
{
name = I;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Iota;
unicode = 0399;
},
{
glyphname = Kappa;
layers = (
{
components = (
{
name = K;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Kappa;
unicode = 039A;
},
{
glyphname = Mu;
layers = (
{
components = (
{
name = M;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Mu;
unicode = 039C;
},
{
glyphname = Nu;
layers = (
{
components = (
{
name = N;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Nu;
unicode = 039D;
},
{
glyphname = Omicron;
layers = (
{
components = (
{
name = O;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Omicron;
unicode = 039F;
},
{
glyphname = Rho;
layers = (
{
components = (
{
name = P;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Rho;
unicode = 03A1;
},
{
glyphname = Tau;
layers = (
{
components = (
{
name = T;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Tau;
unicode = 03A4;
},
{
glyphname = Upsilon;
layers = (
{
components = (
{
name = Y;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Upsilon;
unicode = 03A5;
},
{
glyphname = Chi;
layers = (
{
components = (
{
name = X;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Chi;
unicode = 03A7;
},
{
glyphname = Iotadieresis;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -46, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Iotadieresis;
unicode = 03AA;
},
{
glyphname = Upsilondieresis;
layers = (
{
components = (
{
name = Y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -4, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Upsilondieresis;
unicode = 03AB;
},
{
glyphname = alphatonos;
layers = (
{
components = (
{
name = alpha;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 15, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = alphatonos;
unicode = 03AC;
},
{
glyphname = epsilontonos;
layers = (
{
components = (
{
name = epsilon;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 20, 3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = epsilontonos;
unicode = 03AD;
},
{
glyphname = etatonos;
layers = (
{
components = (
{
name = eta;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 28, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = etatonos;
unicode = 03AE;
},
{
glyphname = iotatonos;
layers = (
{
components = (
{
name = iota;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 14, -16}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = iotatonos;
unicode = 03AF;
},
{
glyphname = upsilondieresistonos;
layers = (
{
components = (
{
name = upsilon;
},
{
name = dieresistonos;
transform = "{1, 0, 0, 1, -64, -69}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = upsilondieresistonos;
unicode = 03B0;
},
{
glyphname = kappa;
layers = (
{
components = (
{
name = kgreenlandic;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = kappa;
unicode = 03BA;
},
{
glyphname = omicron;
layers = (
{
components = (
{
name = o;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = omicron;
unicode = 03BF;
},
{
glyphname = uni03BC;
layers = (
{
components = (
{
name = mu;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni03BC;
unicode = 03BC;
},
{
glyphname = nu;
layers = (
{
components = (
{
name = v;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = nu;
unicode = 03BD;
},
{
glyphname = chi;
layers = (
{
components = (
{
name = x;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = chi;
unicode = 03C7;
},
{
glyphname = iotadieresis;
layers = (
{
components = (
{
name = iota;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 5, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = iotadieresis;
unicode = 03CA;
},
{
glyphname = upsilondieresis;
layers = (
{
components = (
{
name = upsilon;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -30, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = upsilondieresis;
unicode = 03CB;
},
{
glyphname = omicrontonos;
layers = (
{
components = (
{
name = o;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 9, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = omicrontonos;
unicode = 03CC;
},
{
glyphname = upsilontonos;
layers = (
{
components = (
{
name = upsilon;
},
{
name = tonos;
transform = "{1, 0, 0, 1, -21, -16}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = upsilontonos;
unicode = 03CD;
},
{
glyphname = omegatonos;
layers = (
{
components = (
{
name = omega;
},
{
name = tonos;
transform = "{1, 0, 0, 1, 21, -16}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = omegatonos;
unicode = 03CE;
},
{
glyphname = uni0401;
layers = (
{
components = (
{
name = E;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 5, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0401;
unicode = 0401;
},
{
glyphname = uni0403;
layers = (
{
components = (
{
name = Gamma;
},
{
name = acute;
transform = "{1, 0, 0, 1, 128, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0403;
unicode = 0403;
},
{
glyphname = uni0405;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"936 308 OFFCURVE",
"884 221 OFFCURVE",
"802 164 OFFCURVE",
"697 137 OFFCURVE",
"643 137 QCURVE SMOOTH",
"575 137 OFFCURVE",
"460 174 OFFCURVE",
"372 247 OFFCURVE",
"316 352 OFFCURVE",
"307 420 QCURVE",
"118 420 LINE",
"121 316 OFFCURVE",
"213 153 OFFCURVE",
"360 40 OFFCURVE",
"546 -20 OFFCURVE",
"643 -20 QCURVE SMOOTH",
"730 -20 OFFCURVE",
"904 29 OFFCURVE",
"1042 126 OFFCURVE",
"1129 272 OFFCURVE",
"1129 370 QCURVE SMOOTH",
"1129 435 OFFCURVE",
"1092 542 OFFCURVE",
"1026 631 OFFCURVE",
"938 701 OFFCURVE",
"836 757 OFFCURVE",
"726 800 OFFCURVE",
"672 817 QCURVE SMOOTH",
"623 832 OFFCURVE",
"512 872 OFFCURVE",
"417 932 OFFCURVE",
"355 1019 OFFCURVE",
"354 1082 QCURVE SMOOTH",
"354 1140 OFFCURVE",
"401 1228 OFFCURVE",
"480 1288 OFFCURVE",
"581 1318 OFFCURVE",
"634 1318 QCURVE SMOOTH",
"700 1318 OFFCURVE",
"805 1277 OFFCURVE",
"881 1203 OFFCURVE",
"927 1100 OFFCURVE",
"935 1037 QCURVE",
"1125 1037 LINE",
"1123 1137 OFFCURVE",
"1041 1299 OFFCURVE",
"905 1413 OFFCURVE",
"729 1476 OFFCURVE",
"634 1476 QCURVE SMOOTH",
"548 1476 OFFCURVE",
"378 1423 OFFCURVE",
"244 1321 OFFCURVE",
"161 1173 OFFCURVE",
"161 1079 QCURVE SMOOTH",
"161 985 OFFCURVE",
"244 846 OFFCURVE",
"375 744 OFFCURVE",
"534 674 OFFCURVE",
"611 649 QCURVE SMOOTH",
"664 632 OFFCURVE",
"779 590 OFFCURVE",
"875 527 OFFCURVE",
"936 435 OFFCURVE",
"936 368 QCURVE",
"936 368 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 48 values pushed */
0 1 2 4 2 1 4 112 0 4 5 2 4 5 110 0 2 2 0 91 0 0 0 29 75 0 5 5 3 91 0 3 3 30 3 76 60 58 54 53 49 47 36 20 46 6 6 23 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0405;
unicode = 0405;
},
{
glyphname = uni0406;
layers = (
{
components = (
{
name = I;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0406;
unicode = 0406;
},
{
glyphname = uni0407;
layers = (
{
components = (
{
name = I;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -46, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0407;
unicode = 0407;
},
{
glyphname = uni0408;
layers = (
{
components = (
{
name = J;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0408;
unicode = 0408;
},
{
glyphname = uni041A;
layers = (
{
components = (
{
name = K.alt;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni041A;
unicode = 041A;
},
{
glyphname = uni040C;
layers = (
{
components = (
{
name = K;
},
{
name = acute;
transform = "{1, 0, 0, 1, 126, 325}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni040C;
unicode = 040C;
},
{
glyphname = uni040E;
layers = (
{
components = (
{
name = uni0423;
},
{
name = breve;
transform = "{1, 0, 0, 1, 33, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni040E;
unicode = 040E;
},
{
glyphname = uni0410;
layers = (
{
components = (
{
name = A;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0410;
unicode = 0410;
},
{
glyphname = uni0412;
layers = (
{
components = (
{
name = B;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0412;
unicode = 0412;
},
{
glyphname = uni0413;
layers = (
{
components = (
{
name = Gamma;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0413;
unicode = 0413;
},
{
glyphname = uni0415;
layers = (
{
components = (
{
name = E;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0415;
unicode = 0415;
},
{
glyphname = uni0419;
layers = (
{
components = (
{
name = uni0418;
},
{
name = breve;
transform = "{1, 0, 0, 1, -7, 396}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0419;
unicode = 0419;
},
{
glyphname = uni041C;
layers = (
{
components = (
{
name = M;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni041C;
unicode = 041C;
},
{
glyphname = uni041D;
layers = (
{
components = (
{
name = H;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni041D;
unicode = 041D;
},
{
glyphname = uni041E;
layers = (
{
components = (
{
name = O;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni041E;
unicode = 041E;
},
{
glyphname = uni041F;
layers = (
{
components = (
{
name = Pi;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni041F;
unicode = 041F;
},
{
glyphname = uni0420;
layers = (
{
components = (
{
name = P;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0420;
unicode = 0420;
},
{
glyphname = uni0421;
layers = (
{
components = (
{
name = C;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0421;
unicode = 0421;
},
{
glyphname = uni0422;
layers = (
{
components = (
{
name = T;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0422;
unicode = 0422;
},
{
glyphname = uni0424;
layers = (
{
components = (
{
name = Phi;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0424;
unicode = 0424;
},
{
glyphname = uni0425;
layers = (
{
components = (
{
name = X;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0425;
unicode = 0425;
},
{
glyphname = uni0430;
layers = (
{
components = (
{
name = a;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0430;
unicode = 0430;
},
{
glyphname = uni0435;
layers = (
{
components = (
{
name = e;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0435;
unicode = 0435;
},
{
glyphname = uni0439;
layers = (
{
components = (
{
name = uni0438;
},
{
name = breve;
transform = "{1, 0, 0, 1, -12, 65}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0439;
unicode = 0439;
},
{
glyphname = uni043E;
layers = (
{
components = (
{
name = o;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni043E;
unicode = 043E;
},
{
glyphname = uni0440;
layers = (
{
components = (
{
name = p;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0440;
unicode = 0440;
},
{
glyphname = uni0441;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"548 130 OFFCURVE",
"431 199 OFFCURVE",
"360 310 OFFCURVE",
"329 449 OFFCURVE",
"329 520 QCURVE SMOOTH",
"329 562 LINE SMOOTH",
"329 632 OFFCURVE",
"360 770 OFFCURVE",
"432 881 OFFCURVE",
"549 950 OFFCURVE",
"635 950 QCURVE SMOOTH",
"691 950 OFFCURVE",
"788 912 OFFCURVE",
"858 846 OFFCURVE",
"899 759 OFFCURVE",
"900 710 QCURVE",
"1075 710 LINE",
"1075 792 OFFCURVE",
"1009 936 OFFCURVE",
"892 1041 OFFCURVE",
"731 1102 OFFCURVE",
"635 1102 QCURVE SMOOTH",
"512 1102 OFFCURVE",
"328 1014 OFFCURVE",
"205 865 OFFCURVE",
"143 669 OFFCURVE",
"143 562 QCURVE SMOOTH",
"143 520 LINE SMOOTH",
"143 412 OFFCURVE",
"205 217 OFFCURVE",
"328 68 OFFCURVE",
"512 -20 OFFCURVE",
"635 -20 QCURVE SMOOTH",
"721 -20 OFFCURVE",
"879 39 OFFCURVE",
"1001 138 OFFCURVE",
"1074 269 OFFCURVE",
"1075 341 QCURVE",
"900 341 LINE",
"899 296 OFFCURVE",
"854 219 OFFCURVE",
"780 162 OFFCURVE",
"685 130 OFFCURVE",
"635 130 QCURVE",
"635 130 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 56 values pushed */
0 4 5 1 5 4 1 112 0 1 0 5 1 0 110 0 5 5 3 91 0 3 3 31 75 6 1 0 0 2 91 0 2 2 30 2 76 1 0 34 32 28 27 23 21 12 10 6 5 0 43 1 43 7 6 20 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0441;
unicode = 0441;
},
{
glyphname = uni0443;
layers = (
{
components = (
{
name = y;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0443;
unicode = 0443;
},
{
glyphname = uni0445;
layers = (
{
components = (
{
name = x;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0445;
unicode = 0445;
},
{
glyphname = uni0451;
layers = (
{
components = (
{
name = e;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 6, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0451;
unicode = 0451;
},
{
glyphname = uni0453;
layers = (
{
components = (
{
name = uni0433;
},
{
name = acute;
transform = "{1, 0, 0, 1, 115, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0453;
unicode = 0453;
},
{
glyphname = uni0455;
layers = (
{
components = (
{
name = s;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0455;
unicode = 0455;
},
{
glyphname = uni0456;
layers = (
{
components = (
{
name = i;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0456;
unicode = 0456;
},
{
glyphname = uni0457;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 52, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0457;
unicode = 0457;
},
{
glyphname = uni0458;
layers = (
{
components = (
{
name = j;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0458;
unicode = 0458;
},
{
glyphname = uni045C;
layers = (
{
components = (
{
name = uni043A;
},
{
name = acute;
transform = "{1, 0, 0, 1, 39, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni045C;
unicode = 045C;
},
{
glyphname = uni045E;
layers = (
{
components = (
{
name = y;
},
{
name = breve;
transform = "{1, 0, 0, 1, 19, 66}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni045E;
unicode = 045E;
},
{
glyphname = Wgrave;
layers = (
{
components = (
{
name = W;
},
{
name = grave;
transform = "{1, 0, 0, 1, -111, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Wgrave;
unicode = 1E80;
},
{
glyphname = wgrave;
layers = (
{
components = (
{
name = w;
},
{
name = grave;
transform = "{1, 0, 0, 1, -112, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = wgrave;
unicode = 1E81;
},
{
glyphname = Wacute;
layers = (
{
components = (
{
name = W;
},
{
name = acute;
transform = "{1, 0, 0, 1, 125, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Wacute;
unicode = 1E82;
},
{
glyphname = wacute;
layers = (
{
components = (
{
name = w;
},
{
name = acute;
transform = "{1, 0, 0, 1, 124, 1}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = wacute;
unicode = 1E83;
},
{
glyphname = Wdieresis;
layers = (
{
components = (
{
name = W;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 7, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Wdieresis;
unicode = 1E84;
},
{
glyphname = wdieresis;
layers = (
{
components = (
{
name = w;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 6, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = wdieresis;
unicode = 1E85;
},
{
glyphname = Ygrave;
layers = (
{
components = (
{
name = Y;
},
{
name = grave;
transform = "{1, 0, 0, 1, -123, 345}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = Ygrave;
unicode = 1EF2;
},
{
glyphname = ygrave;
layers = (
{
components = (
{
name = y;
},
{
name = grave;
transform = "{1, 0, 0, 1, -99, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = ygrave;
unicode = 1EF3;
},
{
glyphname = minute;
layers = (
{
components = (
{
name = quotesingle;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = minute;
unicode = 2032;
},
{
glyphname = second;
layers = (
{
components = (
{
name = quotedbl;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = second;
unicode = 2033;
},
{
glyphname = exclamdbl;
layers = (
{
components = (
{
name = exclam;
},
{
name = exclam;
transform = "{1, 0, 0, 1, 1229, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 2458;
}
);
note = exclamdbl;
unicode = 203C;
},
{
glyphname = uni01F0;
layers = (
{
components = (
{
name = uni0237;
},
{
name = caron;
transform = "{1, 0, 0, 1, 96, -4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni01F0;
unicode = 01F0;
},
{
glyphname = uni02BC;
layers = (
{
components = (
{
name = quoteright;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni02BC;
unicode = 02BC;
},
{
glyphname = uni1E3E;
layers = (
{
components = (
{
name = M;
},
{
name = acute;
transform = "{1, 0, 0, 1, 117, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1E3E;
unicode = 1E3E;
},
{
glyphname = uni1E3F;
layers = (
{
components = (
{
name = m;
},
{
name = acute;
transform = "{1, 0, 0, 1, 156, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1E3F;
unicode = 1E3F;
},
{
glyphname = uni1E00;
layers = (
{
components = (
{
name = A;
},
{
name = uni02F3;
transform = "{1, 0, 0, 1, 37, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1E00;
unicode = 1E00;
},
{
glyphname = uni1E01;
layers = (
{
components = (
{
name = a;
},
{
name = uni02F3;
transform = "{1, 0, 0, 1, -22, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1E01;
unicode = 1E01;
},
{
glyphname = uni1F4D;
layers = (
{
components = (
{
name = O;
},
{
name = dasiaoxia;
transform = "{1, 0, 0, 1, -620, 146}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1F4D;
unicode = 1F4D;
},
{
glyphname = uni0400;
layers = (
{
components = (
{
name = E;
},
{
name = grave;
transform = "{1, 0, 0, 1, -113, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0400;
unicode = 0400;
},
{
glyphname = uni040D;
layers = (
{
components = (
{
name = uni0418;
},
{
name = grave;
transform = "{1, 0, 0, 1, -126, 334}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni040D;
unicode = 040D;
},
{
glyphname = uni0450;
layers = (
{
components = (
{
name = e;
},
{
name = grave;
transform = "{1, 0, 0, 1, -112, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0450;
unicode = 0450;
},
{
glyphname = uni045D;
layers = (
{
components = (
{
name = uni0438;
},
{
name = grave;
transform = "{1, 0, 0, 1, -131, 3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni045D;
unicode = 045D;
},
{
glyphname = uni0470;
layers = (
{
components = (
{
name = Psi;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0470;
unicode = 0470;
},
{
glyphname = uni0471;
layers = (
{
components = (
{
name = psi;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0471;
unicode = 0471;
},
{
glyphname = uni0476;
layers = (
{
components = (
{
name = uni0474;
},
{
name = uni030F;
transform = "{1, 0, 0, 1, 1113, 340}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0476;
unicode = 0476;
},
{
glyphname = uni0477;
layers = (
{
components = (
{
name = uni0475;
},
{
name = uni030F;
transform = "{1, 0, 0, 1, 1072, 44}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0477;
unicode = 0477;
},
{
glyphname = uni0498;
layers = (
{
components = (
{
name = uni0417;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, -15, -106}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0498;
unicode = 0498;
},
{
glyphname = uni0499;
layers = (
{
components = (
{
name = uni0437;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 8, -96}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0499;
unicode = 0499;
},
{
glyphname = uni04AA;
layers = (
{
components = (
{
name = C;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, -1, -96}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04AA;
unicode = 04AA;
},
{
glyphname = uni04AB;
layers = (
{
components = (
{
name = c;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 19, -96}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04AB;
unicode = 04AB;
},
{
glyphname = uni04AE;
layers = (
{
components = (
{
name = Y;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04AE;
unicode = 04AE;
},
{
glyphname = uni04AF;
layers = (
{
components = (
{
name = gamma;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04AF;
unicode = 04AF;
},
{
glyphname = uni04C0;
layers = (
{
components = (
{
name = I;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04C0;
unicode = 04C0;
},
{
glyphname = uni04C1;
layers = (
{
components = (
{
name = uni0416;
},
{
name = breve;
transform = "{1, 0, 0, 1, 13, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04C1;
unicode = 04C1;
},
{
glyphname = uni04C2;
layers = (
{
components = (
{
name = uni0436;
},
{
name = breve;
transform = "{1, 0, 0, 1, -12, 65}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04C2;
unicode = 04C2;
},
{
glyphname = uni04CF;
layers = (
{
components = (
{
name = I;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04CF;
unicode = 04CF;
},
{
glyphname = uni04D0;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 15, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D0;
unicode = 04D0;
},
{
glyphname = uni04D1;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 11, 86}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D1;
unicode = 04D1;
},
{
glyphname = uni04D2;
layers = (
{
components = (
{
name = A;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 15, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D2;
unicode = 04D2;
},
{
glyphname = uni04D3;
layers = (
{
components = (
{
name = a;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 11, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D3;
unicode = 04D3;
},
{
glyphname = uni04D4;
layers = (
{
components = (
{
name = AE;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D4;
unicode = 04D4;
},
{
glyphname = uni04D5;
layers = (
{
components = (
{
name = ae;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D5;
unicode = 04D5;
},
{
glyphname = uni04D6;
layers = (
{
components = (
{
name = E;
},
{
name = breve;
transform = "{1, 0, 0, 1, 5, 408}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D6;
unicode = 04D6;
},
{
glyphname = uni04D7;
layers = (
{
components = (
{
name = e;
},
{
name = breve;
transform = "{1, 0, 0, 1, 6, 87}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D7;
unicode = 04D7;
},
{
glyphname = uni04DA;
layers = (
{
components = (
{
name = uni04D8;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -5, 301}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04DA;
unicode = 04DA;
},
{
glyphname = uni04D9;
layers = (
{
components = (
{
name = schwa;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04D9;
unicode = 04D9;
},
{
glyphname = uni04DB;
layers = (
{
components = (
{
name = schwa;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 40, 26}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04DB;
unicode = 04DB;
},
{
glyphname = uni04DC;
layers = (
{
components = (
{
name = uni0416;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 13, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04DC;
unicode = 04DC;
},
{
glyphname = uni04DD;
layers = (
{
components = (
{
name = uni0436;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -12, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04DD;
unicode = 04DD;
},
{
glyphname = uni04DE;
layers = (
{
components = (
{
name = uni0417;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -4, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04DE;
unicode = 04DE;
},
{
glyphname = uni04DF;
layers = (
{
components = (
{
name = uni0437;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 10, 24}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04DF;
unicode = 04DF;
},
{
glyphname = uni04E2;
layers = (
{
components = (
{
name = uni0418;
},
{
name = macron;
transform = "{1, 0, 0, 1, -3, 318}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E2;
unicode = 04E2;
},
{
glyphname = uni04E3;
layers = (
{
components = (
{
name = uni0438;
},
{
name = macron;
transform = "{1, 0, 0, 1, -8, -12}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E3;
unicode = 04E3;
},
{
glyphname = uni04E4;
layers = (
{
components = (
{
name = uni0418;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -7, 335}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E4;
unicode = 04E4;
},
{
glyphname = uni04E5;
layers = (
{
components = (
{
name = uni0438;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -12, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E5;
unicode = 04E5;
},
{
glyphname = uni04E6;
layers = (
{
components = (
{
name = O;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 19, 368}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E6;
unicode = 04E6;
},
{
glyphname = uni04E7;
layers = (
{
components = (
{
name = o;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 0, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E7;
unicode = 04E7;
},
{
glyphname = uni04E8;
layers = (
{
components = (
{
name = uni0472;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E8;
unicode = 04E8;
},
{
glyphname = uni04E9;
layers = (
{
components = (
{
name = uni0473;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04E9;
unicode = 04E9;
},
{
glyphname = uni04EA;
layers = (
{
components = (
{
name = uni0472;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 20, 342}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04EA;
unicode = 04EA;
},
{
glyphname = uni04EB;
layers = (
{
components = (
{
name = uni0473;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -48, 53}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04EB;
unicode = 04EB;
},
{
glyphname = uni04EC;
layers = (
{
components = (
{
name = uni042D;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -15, 369}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04EC;
unicode = 04EC;
},
{
glyphname = uni04ED;
layers = (
{
components = (
{
name = uni044D;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -19, 25}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04ED;
unicode = 04ED;
},
{
glyphname = uni04EE;
layers = (
{
components = (
{
name = uni0423;
},
{
name = macron;
transform = "{1, 0, 0, 1, 37, 330}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04EE;
unicode = 04EE;
},
{
glyphname = uni04EF;
layers = (
{
components = (
{
name = y;
},
{
name = macron;
transform = "{1, 0, 0, 1, 23, -11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04EF;
unicode = 04EF;
},
{
glyphname = uni04F0;
layers = (
{
components = (
{
name = uni0423;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 33, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F0;
unicode = 04F0;
},
{
glyphname = uni04F1;
layers = (
{
components = (
{
name = y;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 19, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F1;
unicode = 04F1;
},
{
glyphname = uni04F2;
layers = (
{
components = (
{
name = uni0423;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 167, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F2;
unicode = 04F2;
},
{
glyphname = uni04F3;
layers = (
{
components = (
{
name = y;
},
{
name = hungarumlaut;
transform = "{1, 0, 0, 1, 153, 5}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F3;
unicode = 04F3;
},
{
glyphname = uni04F4;
layers = (
{
components = (
{
name = uni0427;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -77, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F4;
unicode = 04F4;
},
{
glyphname = uni04F5;
layers = (
{
components = (
{
name = uni0447;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 27, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F5;
unicode = 04F5;
},
{
glyphname = uni04F8;
layers = (
{
components = (
{
name = uni042B;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, -31, 347}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F8;
unicode = 04F8;
},
{
glyphname = uni04F9;
layers = (
{
components = (
{
name = uni044B;
},
{
name = dieresis;
transform = "{1, 0, 0, 1, 67, 4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F9;
unicode = 04F9;
},
{
glyphname = uni04FC;
layers = (
{
components = (
{
name = X;
},
{
name = cyrillichook;
transform = "{1, 0, 0, 1, 516, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04FC;
unicode = 04FC;
},
{
glyphname = uni04FD;
layers = (
{
components = (
{
name = x;
},
{
name = cyrillichook;
transform = "{1, 0, 0, 1, 403, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04FD;
unicode = 04FD;
},
{
glyphname = uni0501;
layers = (
{
components = (
{
name = d;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0501;
unicode = 0501;
},
{
glyphname = uni0512;
layers = (
{
components = (
{
name = uni041B;
},
{
name = cyrillichook;
transform = "{1, 0, 0, 1, 465, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0512;
unicode = 0512;
},
{
glyphname = uni0513;
layers = (
{
components = (
{
name = uni043B;
},
{
name = cyrillichook;
transform = "{1, 0, 0, 1, 460, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0513;
unicode = 0513;
},
{
glyphname = uni1EA0;
layers = (
{
components = (
{
name = A;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1247, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA0;
unicode = 1EA0;
},
{
glyphname = uni1EA1;
layers = (
{
components = (
{
name = a;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1187, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA1;
unicode = 1EA1;
},
{
glyphname = uni1EA2;
layers = (
{
components = (
{
name = A;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1224, 338}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA2;
unicode = 1EA2;
},
{
glyphname = uni1EA3;
layers = (
{
components = (
{
name = a;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1220, 16}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA3;
unicode = 1EA3;
},
{
glyphname = uni1EA4;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexacutecomb;
transform = "{1, 0, 0, 1, -11, 345}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA4;
unicode = 1EA4;
},
{
glyphname = uni1EA5;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexacutecomb;
transform = "{1, 0, 0, 1, -15, 23}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA5;
unicode = 1EA5;
},
{
glyphname = uni1EA6;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexgravecomb;
transform = "{1, 0, 0, 1, -20, 328}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA6;
unicode = 1EA6;
},
{
glyphname = uni1EA7;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexgravecomb;
transform = "{1, 0, 0, 1, -24, 6}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA7;
unicode = 1EA7;
},
{
glyphname = uni1EA8;
layers = (
{
components = (
{
name = A;
},
{
name = circumflexhookcomb;
transform = "{1, 0, 0, 1, 1, 309}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA8;
unicode = 1EA8;
},
{
glyphname = uni1EA9;
layers = (
{
components = (
{
name = a;
},
{
name = circumflexhookcomb;
transform = "{1, 0, 0, 1, -2, -12}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EA9;
unicode = 1EA9;
},
{
glyphname = uni1EAA;
layers = (
{
components = (
{
name = A;
},
{
name = circumflextildecomb;
transform = "{1, 0, 0, 1, -13, 310}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EAA;
unicode = 1EAA;
},
{
glyphname = uni1EAB;
layers = (
{
components = (
{
name = a;
},
{
name = circumflextildecomb;
transform = "{1, 0, 0, 1, -17, -11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EAB;
unicode = 1EAB;
},
{
glyphname = uni1EAC;
layers = (
{
components = (
{
name = A;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 135, 347}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1247, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EAC;
unicode = 1EAC;
},
{
glyphname = uni1EAD;
layers = (
{
components = (
{
name = a;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 131, 25}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1187, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EAD;
unicode = 1EAD;
},
{
glyphname = uni1EAE;
layers = (
{
components = (
{
name = A;
},
{
name = breveacutecomb;
transform = "{1, 0, 0, 1, 0, 340}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EAE;
unicode = 1EAE;
},
{
glyphname = uni1EAF;
layers = (
{
components = (
{
name = a;
},
{
name = breveacutecomb;
transform = "{1, 0, 0, 1, -4, 18}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EAF;
unicode = 1EAF;
},
{
glyphname = uni1EB0;
layers = (
{
components = (
{
name = A;
},
{
name = brevegravecomb;
transform = "{1, 0, 0, 1, 3, 378}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB0;
unicode = 1EB0;
},
{
glyphname = uni1EB1;
layers = (
{
components = (
{
name = a;
},
{
name = brevegravecomb;
transform = "{1, 0, 0, 1, 0, 56}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB1;
unicode = 1EB1;
},
{
glyphname = uni1EB2;
layers = (
{
components = (
{
name = A;
},
{
name = brevehookcomb;
transform = "{1, 0, 0, 1, -12, 329}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB2;
unicode = 1EB2;
},
{
glyphname = uni1EB3;
layers = (
{
components = (
{
name = a;
},
{
name = brevehookcomb;
transform = "{1, 0, 0, 1, -16, 7}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB3;
unicode = 1EB3;
},
{
glyphname = uni1EB4;
layers = (
{
components = (
{
name = A;
},
{
name = brevetildecomb;
transform = "{1, 0, 0, 1, -44, 337}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB4;
unicode = 1EB4;
},
{
glyphname = uni1EB5;
layers = (
{
components = (
{
name = a;
},
{
name = brevetildecomb;
transform = "{1, 0, 0, 1, -48, 15}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB5;
unicode = 1EB5;
},
{
glyphname = uni1EB6;
layers = (
{
components = (
{
name = A;
},
{
name = breve;
transform = "{1, 0, 0, 1, 15, 408}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1247, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB6;
unicode = 1EB6;
},
{
glyphname = uni1EB7;
layers = (
{
components = (
{
name = a;
},
{
name = breve;
transform = "{1, 0, 0, 1, 11, 86}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1187, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB7;
unicode = 1EB7;
},
{
glyphname = uni1EB8;
layers = (
{
components = (
{
name = E;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1234, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB8;
unicode = 1EB8;
},
{
glyphname = uni1EB9;
layers = (
{
components = (
{
name = e;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1251, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EB9;
unicode = 1EB9;
},
{
glyphname = uni1EBA;
layers = (
{
components = (
{
name = E;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1214, 338}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EBA;
unicode = 1EBA;
},
{
glyphname = uni1EBB;
layers = (
{
components = (
{
name = e;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1215, 17}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EBB;
unicode = 1EBB;
},
{
glyphname = uni1EBC;
layers = (
{
components = (
{
name = E;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 137, 353}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EBC;
unicode = 1EBC;
},
{
glyphname = uni1EBD;
layers = (
{
components = (
{
name = e;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 138, 32}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EBD;
unicode = 1EBD;
},
{
glyphname = uni1EBE;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexacutecomb;
transform = "{1, 0, 0, 1, -21, 345}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EBE;
unicode = 1EBE;
},
{
glyphname = uni1EBF;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexacutecomb;
transform = "{1, 0, 0, 1, -20, 24}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EBF;
unicode = 1EBF;
},
{
glyphname = uni1EC0;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexgravecomb;
transform = "{1, 0, 0, 1, -30, 328}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC0;
unicode = 1EC0;
},
{
glyphname = uni1EC1;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexgravecomb;
transform = "{1, 0, 0, 1, -29, 7}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC1;
unicode = 1EC1;
},
{
glyphname = uni1EC2;
layers = (
{
components = (
{
name = E;
},
{
name = circumflexhookcomb;
transform = "{1, 0, 0, 1, -8, 309}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC2;
unicode = 1EC2;
},
{
glyphname = uni1EC3;
layers = (
{
components = (
{
name = e;
},
{
name = circumflexhookcomb;
transform = "{1, 0, 0, 1, -7, -11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC3;
unicode = 1EC3;
},
{
glyphname = uni1EC4;
layers = (
{
components = (
{
name = E;
},
{
name = circumflextildecomb;
transform = "{1, 0, 0, 1, -23, 310}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC4;
unicode = 1EC4;
},
{
glyphname = uni1EC5;
layers = (
{
components = (
{
name = e;
},
{
name = circumflextildecomb;
transform = "{1, 0, 0, 1, -22, -10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC5;
unicode = 1EC5;
},
{
glyphname = uni1EC6;
layers = (
{
components = (
{
name = E;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 125, 347}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1234, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC6;
unicode = 1EC6;
},
{
glyphname = uni1EC7;
layers = (
{
components = (
{
name = e;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 126, 26}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1251, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC7;
unicode = 1EC7;
},
{
glyphname = uni1EC8;
layers = (
{
components = (
{
name = I;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1162, 338}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC8;
unicode = 1EC8;
},
{
glyphname = uni1EC9;
layers = (
{
components = (
{
name = dotlessi;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1261, -4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EC9;
unicode = 1EC9;
},
{
glyphname = uni1ECA;
layers = (
{
components = (
{
name = I;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1182, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ECA;
unicode = 1ECA;
},
{
glyphname = uni1ECB;
layers = (
{
components = (
{
name = i;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1286, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ECB;
unicode = 1ECB;
},
{
glyphname = uni1ECC;
layers = (
{
components = (
{
name = O;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1247, -8}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ECC;
unicode = 1ECC;
},
{
glyphname = uni1ECD;
layers = (
{
components = (
{
name = o;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1229, -9}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ECD;
unicode = 1ECD;
},
{
glyphname = uni1ECE;
layers = (
{
components = (
{
name = O;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1228, 359}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ECE;
unicode = 1ECE;
},
{
glyphname = uni1ECF;
layers = (
{
components = (
{
name = o;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1209, 16}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ECF;
unicode = 1ECF;
},
{
glyphname = uni1ED0;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexacutecomb;
transform = "{1, 0, 0, 1, -7, 366}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED0;
unicode = 1ED0;
},
{
glyphname = uni1ED1;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexacutecomb;
transform = "{1, 0, 0, 1, -26, 23}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED1;
unicode = 1ED1;
},
{
glyphname = uni1ED2;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexgravecomb;
transform = "{1, 0, 0, 1, -16, 349}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED2;
unicode = 1ED2;
},
{
glyphname = uni1ED3;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexgravecomb;
transform = "{1, 0, 0, 1, -35, 6}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED3;
unicode = 1ED3;
},
{
glyphname = uni1ED4;
layers = (
{
components = (
{
name = O;
},
{
name = circumflexhookcomb;
transform = "{1, 0, 0, 1, 5, 330}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED4;
unicode = 1ED4;
},
{
glyphname = uni1ED5;
layers = (
{
components = (
{
name = o;
},
{
name = circumflexhookcomb;
transform = "{1, 0, 0, 1, -13, -12}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED5;
unicode = 1ED5;
},
{
glyphname = uni1ED6;
layers = (
{
components = (
{
name = O;
},
{
name = circumflextildecomb;
transform = "{1, 0, 0, 1, -9, 331}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED6;
unicode = 1ED6;
},
{
glyphname = uni1ED7;
layers = (
{
components = (
{
name = o;
},
{
name = circumflextildecomb;
transform = "{1, 0, 0, 1, -28, -11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED7;
unicode = 1ED7;
},
{
glyphname = uni1ED8;
layers = (
{
components = (
{
name = O;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 139, 368}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1247, -8}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED8;
unicode = 1ED8;
},
{
glyphname = uni1ED9;
layers = (
{
components = (
{
name = o;
},
{
name = circumflex;
transform = "{1, 0, 0, 1, 120, 25}";
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1229, -9}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1ED9;
unicode = 1ED9;
},
{
glyphname = uni1EDA;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 132, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EDA;
unicode = 1EDA;
},
{
glyphname = uni1EDB;
layers = (
{
components = (
{
name = ohorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 124, 21}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EDB;
unicode = 1EDB;
},
{
glyphname = uni1EDC;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, -104, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EDC;
unicode = 1EDC;
},
{
glyphname = uni1EDD;
layers = (
{
components = (
{
name = ohorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, -112, 24}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EDD;
unicode = 1EDD;
},
{
glyphname = uni1EDE;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1223, 338}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EDE;
unicode = 1EDE;
},
{
glyphname = uni1EDF;
layers = (
{
components = (
{
name = ohorn;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1215, 16}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EDF;
unicode = 1EDF;
},
{
glyphname = uni1EE0;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 146, 353}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE0;
unicode = 1EE0;
},
{
glyphname = uni1EE1;
layers = (
{
components = (
{
name = ohorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 138, 31}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE1;
unicode = 1EE1;
},
{
glyphname = uni1EE2;
layers = (
{
components = (
{
name = Ohorn;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1235, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE2;
unicode = 1EE2;
},
{
glyphname = uni1EE3;
layers = (
{
components = (
{
name = ohorn;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1227, -9}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE3;
unicode = 1EE3;
},
{
glyphname = uni1EE4;
layers = (
{
components = (
{
name = U;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1224, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE4;
unicode = 1EE4;
},
{
glyphname = uni1EE5;
layers = (
{
components = (
{
name = u;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1169, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE5;
unicode = 1EE5;
},
{
glyphname = uni1EE6;
layers = (
{
components = (
{
name = U;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1254, 326}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE6;
unicode = 1EE6;
},
{
glyphname = uni1EE7;
layers = (
{
components = (
{
name = u;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1208, -3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE7;
unicode = 1EE7;
},
{
glyphname = uni1EE8;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 116, 343}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE8;
unicode = 1EE8;
},
{
glyphname = uni1EE9;
layers = (
{
components = (
{
name = uhorn;
},
{
name = acute;
transform = "{1, 0, 0, 1, 118, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EE9;
unicode = 1EE9;
},
{
glyphname = uni1EEA;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, -120, 346}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EEA;
unicode = 1EEA;
},
{
glyphname = uni1EEB;
layers = (
{
components = (
{
name = uhorn;
},
{
name = grave;
transform = "{1, 0, 0, 1, -118, 3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EEB;
unicode = 1EEB;
},
{
glyphname = uni1EEC;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1207, 338}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EEC;
unicode = 1EEC;
},
{
glyphname = uni1EED;
layers = (
{
components = (
{
name = uhorn;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1209, -4}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EED;
unicode = 1EED;
},
{
glyphname = uni1EEE;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 130, 353}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EEE;
unicode = 1EEE;
},
{
glyphname = uni1EEF;
layers = (
{
components = (
{
name = uhorn;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 132, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EEF;
unicode = 1EEF;
},
{
glyphname = uni1EF0;
layers = (
{
components = (
{
name = Uhorn;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1229, -8}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF0;
unicode = 1EF0;
},
{
glyphname = uni1EF1;
layers = (
{
components = (
{
name = uhorn;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1168, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF1;
unicode = 1EF1;
},
{
glyphname = uni1EF4;
layers = (
{
components = (
{
name = Y;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1219, 10}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF4;
unicode = 1EF4;
},
{
glyphname = uni1EF5;
layers = (
{
components = (
{
name = y;
},
{
name = dotbelow;
transform = "{1, 0, 0, 1, 1447, -157}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF5;
unicode = 1EF5;
},
{
glyphname = uni1EF6;
layers = (
{
components = (
{
name = Y;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1204, 337}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF6;
unicode = 1EF6;
},
{
glyphname = uni1EF7;
layers = (
{
components = (
{
name = y;
},
{
name = hook;
transform = "{1, 0, 0, 1, 1228, -3}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF7;
unicode = 1EF7;
},
{
glyphname = uni1EF8;
layers = (
{
components = (
{
name = Y;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 127, 352}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF8;
unicode = 1EF8;
},
{
glyphname = uni1EF9;
layers = (
{
components = (
{
name = y;
},
{
name = tilde;
transform = "{1, 0, 0, 1, 151, 11}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni1EF9;
unicode = 1EF9;
},
{
glyphname = dcroat;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"1249 1385 LINE",
"1052 1385 LINE",
"1052 1536 LINE",
"867 1536 LINE",
"867 1385 LINE",
"612 1385 LINE",
"612 1234 LINE",
"867 1234 LINE",
"867 975 LINE",
"814 1037 OFFCURVE",
"669 1102 OFFCURVE",
"572 1102 QCURVE SMOOTH",
"473 1102 OFFCURVE",
"313 1020 OFFCURVE",
"200 874 OFFCURVE",
"139 671 OFFCURVE",
"139 550 QCURVE SMOOTH",
"139 529 LINE SMOOTH",
"139 413 OFFCURVE",
"201 212 OFFCURVE",
"313 64 OFFCURVE",
"472 -20 OFFCURVE",
"570 -20 QCURVE SMOOTH",
"670 -20 OFFCURVE",
"820 48 OFFCURVE",
"874 114 QCURVE",
"882 0 LINE",
"1052 0 LINE",
"1052 1234 LINE",
"1249 1234 LINE",
"1249 1234 LINE"
);
},
{
closed = 1;
nodes = (
"324 550 LINE SMOOTH",
"324 629 OFFCURVE",
"358 772 OFFCURVE",
"429 881 OFFCURVE",
"540 945 OFFCURVE",
"618 945 QCURVE SMOOTH",
"709 945 OFFCURVE",
"831 860 OFFCURVE",
"867 794 QCURVE",
"867 292 LINE",
"849 257 OFFCURVE",
"801 200 OFFCURVE",
"739 159 OFFCURVE",
"663 137 OFFCURVE",
"616 137 QCURVE SMOOTH",
"539 137 OFFCURVE",
"429 200 OFFCURVE",
"358 308 OFFCURVE",
"324 450 OFFCURVE",
"324 529 QCURVE",
"324 529 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 15 values pushed */
21 1 9 3 41 40 2 8 9 4 1 1 8 3 74 
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
25 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 37 values pushed */
7 1 5 4 1 0 3 5 0 97 0 6 6 62 75 0 9 9 3 91 0 3 3 71 75 0 8 8 1 91 2 1 1 1 61 1 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
33 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 41 values pushed */
7 1 5 4 1 0 3 5 0 97 0 6 6 62 75 0 9 9 3 91 0 3 3 71 75 0 1 1 61 75 0 8 8 2 91 0 2 2 69 2 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 41 values pushed */
7 1 5 4 1 0 3 5 0 97 0 9 9 3 91 0 3 3 71 75 0 6 6 1 89 0 1 1 61 75 0 8 8 2 91 0 2 2 69 2 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
NPUSHB[ ]\011/* 14 values pushed */
45 43 37 17 17 17 19 41 35 17 16 10 8 29 
CALL[ ]\011/* CallFunction */";
};
width = 1259;
}
);
note = dcroat;
unicode = 0111;
},
{
glyphname = uni20AB;
layers = (
{
components = (
{
name = d;
},
{
name = crossbar;
transform = "{1, 0, 0, 1, 303, 583}";
},
{
name = underscore;
transform = "{1, 0, 0, 1, 48, -124}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1259;
}
);
note = uni20AB;
unicode = 20AB;
},
{
glyphname = uni049A;
layers = (
{
components = (
{
name = K.alt;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 544, 7}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni049A;
unicode = 049A;
},
{
glyphname = uni049B;
layers = (
{
components = (
{
name = uni043A;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 507, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni049B;
unicode = 049B;
},
{
glyphname = uni04A2;
layers = (
{
components = (
{
name = H;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 489, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04A2;
unicode = 04A2;
},
{
glyphname = uni04A3;
layers = (
{
components = (
{
name = uni043D;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04A3;
unicode = 04A3;
},
{
glyphname = uni04AC;
layers = (
{
components = (
{
name = T;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 140, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04AC;
unicode = 04AC;
},
{
glyphname = uni04AD;
layers = (
{
components = (
{
name = uni0442;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 149, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04AD;
unicode = 04AD;
},
{
glyphname = uni04B2;
layers = (
{
components = (
{
name = X;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 552, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04B2;
unicode = 04B2;
},
{
glyphname = uni04B3;
layers = (
{
components = (
{
name = x;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 439, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04B3;
unicode = 04B3;
},
{
glyphname = uni04B6;
layers = (
{
components = (
{
name = uni0427;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04B6;
unicode = 04B6;
},
{
glyphname = uni04B7;
layers = (
{
components = (
{
name = uni0447;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 497, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04B7;
unicode = 04B7;
},
{
glyphname = uni04CB;
layers = (
{
components = (
{
name = uni0427;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 222, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04CB;
unicode = 04CB;
},
{
glyphname = uni04CC;
layers = (
{
components = (
{
name = uni0447;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 221, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04CC;
unicode = 04CC;
},
{
glyphname = uni04F6;
layers = (
{
components = (
{
name = Gamma;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, -198, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F6;
unicode = 04F6;
},
{
glyphname = uni04F7;
layers = (
{
components = (
{
name = uni0433;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, -245, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04F7;
unicode = 04F7;
},
{
glyphname = uni0496;
layers = (
{
components = (
{
name = uni0416;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 572, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0496;
unicode = 0496;
},
{
glyphname = uni0497;
layers = (
{
components = (
{
name = uni0436;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 560, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0497;
unicode = 0497;
},
{
glyphname = uni04BE;
layers = (
{
components = (
{
name = uni04BC;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 191, -94}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04BE;
unicode = 04BE;
},
{
glyphname = uni04BF;
layers = (
{
components = (
{
name = uni04BD;
},
{
name = cyrillictic;
transform = "{1, 0, 0, 1, 155, -94}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04BF;
unicode = 04BF;
},
{
glyphname = uni04BB;
layers = (
{
components = (
{
name = h;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04BB;
unicode = 04BB;
},
{
glyphname = uni048D;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"655 954 LINE",
"350 954 LINE",
"350 1082 LINE",
"165 1082 LINE",
"165 954 LINE",
"18 954 LINE",
"18 803 LINE",
"165 803 LINE",
"165 0 LINE",
"681 0 LINE SMOOTH",
"778 0 OFFCURVE",
"930 52 OFFCURVE",
"1034 143 OFFCURVE",
"1088 268 OFFCURVE",
"1088 340 QCURVE SMOOTH",
"1088 413 OFFCURVE",
"1033 535 OFFCURVE",
"929 623 OFFCURVE",
"778 672 OFFCURVE",
"681 672 QCURVE SMOOTH",
"350 672 LINE",
"350 803 LINE",
"655 803 LINE",
"655 803 LINE"
);
},
{
closed = 1;
nodes = (
"681 521 LINE SMOOTH",
"739 521 OFFCURVE",
"822 488 OFFCURVE",
"876 435 OFFCURVE",
"902 368 OFFCURVE",
"902 333 QCURVE SMOOTH",
"902 297 OFFCURVE",
"877 231 OFFCURVE",
"823 181 OFFCURVE",
"739 151 OFFCURVE",
"681 151 QCURVE SMOOTH",
"350 151 LINE",
"350 521 LINE",
"350 521 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
6 1 4 3 1 0 1 4 0 97 0 1 9 1 8 7 1 8 99 0 5 5 24 75 0 7 7 2 92 0 2 2 23 2 76 23 23 23 35 23 34 34 17 17 17 17 40 33 16 10 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni048D;
unicode = 048D;
},
{
glyphname = uni048C;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"593 1255 LINE",
"353 1255 LINE",
"353 1456 LINE",
"168 1456 LINE",
"168 1255 LINE",
"-44 1255 LINE",
"-44 1104 LINE",
"168 1104 LINE",
"168 0 LINE",
"619 0 LINE SMOOTH",
"735 0 OFFCURVE",
"916 63 OFFCURVE",
"1040 177 OFFCURVE",
"1105 337 OFFCURVE",
"1105 433 QCURVE SMOOTH",
"1105 530 OFFCURVE",
"1040 686 OFFCURVE",
"916 797 OFFCURVE",
"735 857 OFFCURVE",
"619 857 QCURVE SMOOTH",
"353 857 LINE",
"353 1104 LINE",
"593 1104 LINE",
"593 1104 LINE"
);
},
{
closed = 1;
nodes = (
"619 706 LINE SMOOTH",
"697 706 OFFCURVE",
"810 663 OFFCURVE",
"884 590 OFFCURVE",
"919 491 OFFCURVE",
"919 435 QCURVE SMOOTH",
"919 378 OFFCURVE",
"884 275 OFFCURVE",
"810 197 OFFCURVE",
"697 151 OFFCURVE",
"619 151 QCURVE SMOOTH",
"353 151 LINE",
"353 706 LINE",
"353 706 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
6 1 4 3 1 0 1 4 0 97 0 1 9 1 8 7 1 8 99 0 5 5 22 75 0 7 7 2 92 0 2 2 23 2 76 23 23 23 35 23 34 34 17 17 17 17 40 33 16 10 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni048C;
unicode = 048C;
},
{
glyphname = uni0462;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"593 1255 LINE",
"353 1255 LINE",
"353 1456 LINE",
"168 1456 LINE",
"168 1255 LINE",
"-44 1255 LINE",
"-44 1104 LINE",
"168 1104 LINE",
"168 0 LINE",
"619 0 LINE SMOOTH",
"735 0 OFFCURVE",
"916 63 OFFCURVE",
"1040 177 OFFCURVE",
"1105 337 OFFCURVE",
"1105 433 QCURVE SMOOTH",
"1105 530 OFFCURVE",
"1040 686 OFFCURVE",
"916 797 OFFCURVE",
"735 857 OFFCURVE",
"619 857 QCURVE SMOOTH",
"353 857 LINE",
"353 1104 LINE",
"593 1104 LINE",
"593 1104 LINE"
);
},
{
closed = 1;
nodes = (
"619 706 LINE SMOOTH",
"697 706 OFFCURVE",
"810 663 OFFCURVE",
"884 590 OFFCURVE",
"919 491 OFFCURVE",
"919 435 QCURVE SMOOTH",
"919 378 OFFCURVE",
"884 275 OFFCURVE",
"810 197 OFFCURVE",
"697 151 OFFCURVE",
"619 151 QCURVE SMOOTH",
"353 151 LINE",
"353 706 LINE",
"353 706 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
6 1 4 3 1 0 1 4 0 97 0 1 9 1 8 7 1 8 99 0 5 5 22 75 0 7 7 2 92 0 2 2 23 2 76 23 23 23 35 23 34 34 17 17 17 17 40 33 16 10 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0462;
unicode = 0462;
},
{
glyphname = uni0492;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"634 835 LINE",
"367 835 LINE",
"367 1304 LINE",
"1072 1304 LINE",
"1072 1456 LINE",
"181 1456 LINE",
"181 835 LINE",
"-3 835 LINE",
"-3 684 LINE",
"181 684 LINE",
"181 0 LINE",
"367 0 LINE",
"367 684 LINE",
"634 684 LINE",
"634 684 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
6 1 3 2 1 0 1 3 0 97 0 5 5 4 89 0 4 4 22 75 0 1 1 23 1 76 17 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0492;
unicode = 0492;
},
{
glyphname = uni0493;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"632 630 LINE",
"369 630 LINE",
"369 929 LINE",
"1066 929 LINE",
"1066 1082 LINE",
"183 1082 LINE",
"183 630 LINE",
"-5 630 LINE",
"-5 479 LINE",
"183 479 LINE",
"183 0 LINE",
"369 0 LINE",
"369 479 LINE",
"632 479 LINE",
"632 479 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 36 values pushed */
6 1 3 2 1 0 1 3 0 97 0 5 5 4 89 0 4 4 24 75 0 1 1 23 1 76 17 17 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni0493;
unicode = 0493;
},
{
glyphname = uni049E;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"999 0 LINE",
"1226 0 LINE",
"690 751 LINE",
"1185 1456 LINE",
"973 1456 LINE",
"530 810 LINE",
"374 810 LINE",
"374 1129 LINE",
"646 1129 LINE",
"646 1280 LINE",
"374 1280 LINE",
"374 1456 LINE",
"189 1456 LINE",
"189 1280 LINE",
"9 1280 LINE",
"9 1129 LINE",
"189 1129 LINE",
"189 0 LINE",
"374 0 LINE",
"374 659 LINE",
"545 659 LINE",
"545 659 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 51 values pushed */
18 1 0 7 1 74 5 1 3 6 1 2 7 3 2 97 0 7 0 0 1 7 0 97 8 1 4 4 22 75 9 1 1 1 23 1 76 20 19 17 17 17 17 17 17 17 17 16 10 6 29 
CALL[ ]\011/* CallFunction */";
};
width = 1249;
}
);
note = uni049E;
unicode = 049E;
},
{
glyphname = uni049F;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"915 0 LINE",
"1150 0 LINE",
"645 631 LINE",
"1083 1082 LINE",
"858 1082 LINE",
"503 726 LINE",
"382 596 LINE",
"382 1217 LINE",
"624 1217 LINE",
"624 1368 LINE",
"382 1368 LINE",
"382 1536 LINE",
"196 1536 LINE",
"196 1368 LINE",
"-13 1368 LINE",
"-13 1217 LINE",
"196 1217 LINE",
"196 0 LINE",
"382 0 LINE",
"382 374 LINE",
"518 505 LINE",
"518 505 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 52 values pushed */
18 14 1 3 0 6 1 74 4 1 2 5 1 1 6 2 1 97 0 3 3 0 89 7 1 0 0 23 75 0 6 6 24 75 7 1 0 0 23 0 76 18 19 17 17 17 17 17 18 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1249;
}
);
note = uni049F;
unicode = 049F;
},
{
glyphname = uni048A;
layers = (
{
components = (
{
name = uni0418;
},
{
name = breve;
transform = "{1, 0, 0, 1, -7, 396}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 608, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni048A;
unicode = 048A;
},
{
glyphname = uni048B;
layers = (
{
components = (
{
name = uni0438;
},
{
name = breve;
transform = "{1, 0, 0, 1, -12, 65}";
},
{
name = comma;
transform = "{1, 0, 0, 1, 605, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni048B;
unicode = 048B;
},
{
glyphname = uni04C9;
layers = (
{
components = (
{
name = H;
},
{
name = comma;
transform = "{1, 0, 0, 1, 597, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04C9;
unicode = 04C9;
},
{
glyphname = uni04CA;
layers = (
{
components = (
{
name = uni043D;
},
{
name = comma;
transform = "{1, 0, 0, 1, 605, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04CA;
unicode = 04CA;
},
{
glyphname = uni04CD;
layers = (
{
components = (
{
name = M;
},
{
name = comma;
transform = "{1, 0, 0, 1, 639, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04CD;
unicode = 04CD;
},
{
glyphname = uni04CE;
layers = (
{
components = (
{
name = uni043C;
},
{
name = comma;
transform = "{1, 0, 0, 1, 609, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04CE;
unicode = 04CE;
},
{
glyphname = uni04C5;
layers = (
{
components = (
{
name = uni041B;
},
{
name = comma;
transform = "{1, 0, 0, 1, 609, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04C5;
unicode = 04C5;
},
{
glyphname = uni04C6;
layers = (
{
components = (
{
name = uni043B;
},
{
name = comma;
transform = "{1, 0, 0, 1, 604, -38}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni04C6;
unicode = 04C6;
},
{
glyphname = uni04B0;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"923 681 LINE",
"760 681 LINE",
"1145 1456 LINE",
"935 1456 LINE",
"603 725 LINE",
"272 1456 LINE",
"61 1456 LINE",
"445 681 LINE",
"286 681 LINE",
"286 530 LINE",
"514 530 LINE",
"517 0 LINE",
"689 0 LINE",
"692 530 LINE",
"923 530 LINE",
"923 530 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 38 values pushed */
10 1 3 4 1 74 6 1 3 2 1 0 1 3 0 97 5 1 4 4 22 75 0 1 1 23 1 76 17 18 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04B0;
unicode = 04B0;
},
{
glyphname = uni04B1;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"945 140 LINE",
"757 140 LINE",
"1174 1082 LINE",
"984 1082 LINE",
"651 298 LINE",
"625 201 LINE",
"601 298 LINE",
"261 1082 LINE",
"71 1082 LINE",
"491 140 LINE",
"308 140 LINE",
"308 -11 LINE",
"530 -11 LINE",
"530 -416 LINE",
"716 -416 LINE",
"716 -11 LINE",
"945 -11 LINE",
"945 -11 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 40 values pushed */
11 1 3 4 1 74 5 1 4 4 24 75 6 1 3 3 0 89 2 1 0 0 23 75 0 1 1 26 1 76 17 20 17 17 17 17 16 7 6 27 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04B1;
unicode = 04B1;
},
{
glyphname = uni04FE;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"942 821 LINE",
"785 821 LINE",
"1157 1456 LINE",
"939 1456 LINE",
"625 885 LINE",
"315 1456 LINE",
"98 1456 LINE",
"470 821 LINE",
"305 821 LINE",
"305 670 LINE",
"483 670 LINE",
"87 0 LINE",
"306 0 LINE",
"629 582 LINE",
"951 0 LINE",
"1167 0 LINE",
"772 670 LINE",
"942 670 LINE",
"942 670 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
13 1 4 5 4 1 1 0 2 74 7 1 4 3 1 0 1 4 0 98 6 1 5 5 22 75 2 1 1 1 23 1 76 17 18 17 17 17 18 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04FE;
unicode = 04FE;
},
{
glyphname = uni04FF;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"930 632 LINE",
"788 632 LINE",
"1127 1082 LINE",
"910 1082 LINE",
"621 681 LINE",
"335 1082 LINE",
"121 1082 LINE",
"460 632 LINE",
"293 632 LINE",
"293 481 LINE",
"474 481 LINE",
"110 0 LINE",
"326 0 LINE",
"625 412 LINE",
"924 0 LINE",
"1138 0 LINE",
"774 481 LINE",
"930 481 LINE",
"930 481 LINE"
);
}
);
userData = {
assembly = "NPUSHB[ ]\011/* 44 values pushed */
13 1 4 5 4 1 1 0 2 74 7 1 4 3 1 0 1 4 0 98 6 1 5 5 24 75 2 1 1 1 23 1 76 17 18 17 17 17 18 17 16 8 6 28 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = uni04FF;
unicode = 04FF;
},
{
glyphname = uni0511;
layers = (
{
components = (
{
name = epsilon;
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0511;
unicode = 0511;
},
{
glyphname = franc;
layers = (
{
components = (
{
name = F;
},
{
name = crossbar;
transform = "{1, 0, 0, 1, -292, -385}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = franc;
unicode = 20A3;
},
{
glyphname = uni2015;
layers = (
{
components = (
{
name = minus;
transform = "{1.29999, 0, 0, 1, -141, 0}";
}
);
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni2015;
unicode = 2015;
},
{
glyphname = uni0002;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0002;
},
{
glyphname = uni0009;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
width = 1229;
}
);
note = uni0009;
},
{
glyphname = exclam;
layers = (
{
layerId = "E4B1A873-EC94-4624-AAD7-98A019FF1B0F";
paths = (
{
closed = 1;
nodes = (
"690 1456 LINE",
"504 1456 LINE",
"504 471 LINE",
"690 471 LINE",
"690 471 LINE"
);
},
{
closed = 1;
nodes = (
"486 51 OFFCURVE",
"543 -11 OFFCURVE",
"600 -11 QCURVE SMOOTH",
"657 -11 OFFCURVE",
"716 51 OFFCURVE",
"716 97 QCURVE SMOOTH",
"716 145 OFFCURVE",
"657 209 OFFCURVE",
"600 209 QCURVE SMOOTH",
"543 209 OFFCURVE",
"486 145 OFFCURVE",
"486 97 QCURVE",
"486 97 LINE"
);
}
);
userData = {
assembly = "MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
10 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 0 0 1 89 0 1 1 60 75 0 2 2 3 91 0 3 3 61 3 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
12 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 0 0 1 89 0 1 1 60 75 0 2 2 3 91 0 3 3 69 3 76 
ELSE[ ]\011/* Else */
MPPEM[ ]\011/* MeasurePixelPerEm */
PUSHB[ ]\011/* 1 value pushed */
14 
LT[ ]\011/* LessThan */
IF[ ]\011/* If */
NPUSHB[ ]\011/* 21 values pushed */
0 0 0 1 89 0 1 1 60 75 0 2 2 3 91 0 3 3 61 3 76 
ELSE[ ]\011/* Else */
NPUSHB[ ]\011/* 21 values pushed */
0 0 0 1 89 0 1 1 60 75 0 2 2 3 91 0 3 3 69 3 76 
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
EIF[ ]\011/* EndIf */
PUSHB[ ]\011/* 7 values pushed */
36 35 17 16 4 8 24 
CALL[ ]\011/* CallFunction */";
};
width = 1229;
}
);
note = exclam;
unicode = 0021;
}
);
instances = (
{
instanceInterpolations = {
"E4B1A873-EC94-4624-AAD7-98A019FF1B0F" = 1;
};
name = Regular;
weightClass = Normal;
}
);
manufacturerURL = "Google.com / increpatio";
unitsPerEm = 2048;
versionMajor = 3;
versionMinor = 1;
}
